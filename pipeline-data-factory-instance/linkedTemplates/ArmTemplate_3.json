{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pipeline-data-factory-instance"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/kra_uploaded_zip_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "benelux/kra/uploaded",
						"container": "data-pipeline-input-files"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/old_geomap_data_zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.zip",
						"container": "geomap-data"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yanport_to_be_upload_files_gz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.gz",
						"folderPath": "fr/yanport/to_upload",
						"container": "data-pipeline-input-files"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yanport_to_be_upload_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.json",
						"folderPath": "fr/yanport/to_upload",
						"container": "data-pipeline-input-files"
					},
					"compression": {
						"type": "gzip"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yanport_to_be_uplod_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "fr/yanport/to_upload",
						"container": "data-pipeline-input-files"
					},
					"compression": {
						"type": "gzip"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"source": {
							"type": "string"
						},
						"programId": {
							"type": "string"
						},
						"externalProperties": {
							"type": "object"
						},
						"quality": {
							"type": "object",
							"properties": {
								"anomaly": {
									"type": "object",
									"properties": {
										"level": {
											"type": "integer"
										},
										"causes": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string"
													},
													"level": {
														"type": "integer"
													},
													"value": {
														"type": "string"
													}
												}
											}
										},
										"value": {
											"type": "string"
										}
									}
								}
							}
						},
						"investment": {
							"type": "object",
							"properties": {
								"rental": {
									"type": "object",
									"properties": {
										"monthlyPrice": {
											"type": "number"
										},
										"yield": {
											"type": "object",
											"properties": {
												"gross": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						},
						"features": {
							"type": "object",
							"properties": {
								"descriptive": {
									"type": "object",
									"properties": {
										"description": {
											"type": "string"
										},
										"pros": {
											"type": "array"
										},
										"cons": {
											"type": "array"
										},
										"generalState": {
											"type": "string"
										},
										"equipments": {
											"type": "object",
											"properties": {
												"FURNITURE": {
													"type": "boolean"
												}
											}
										},
										"services": {
											"type": "object"
										}
									}
								},
								"visual": {
									"type": "object",
									"properties": {
										"images": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"orientations": {
											"type": "array"
										},
										"views": {
											"type": "array"
										}
									}
								},
								"geometry": {
									"type": "object",
									"properties": {
										"surface": {
											"type": "number"
										},
										"roomCount": {
											"type": "integer"
										},
										"areas": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string"
													},
													"kitchenEquipments": {
														"type": "array"
													}
												}
											}
										},
										"floors": {
											"type": "array"
										},
										"floorCount": {
											"type": "integer"
										},
										"areaCount": {
											"type": "object",
											"properties": {
												"TERRACE": {
													"type": "integer"
												},
												"BATHROOM": {
													"type": "integer"
												},
												"BALCONY": {
													"type": "integer"
												},
												"BEDROOM": {
													"type": "integer"
												}
											}
										}
									}
								},
								"construction": {
									"type": "object",
									"properties": {
										"newBuild": {
											"type": "boolean"
										},
										"forBuild": {
											"type": "boolean"
										},
										"year": {
											"type": "integer"
										},
										"urbanismRules": {
											"type": "array"
										}
									}
								},
								"energy": {
									"type": "object",
									"properties": {
										"heatingTypes": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"heatingMode": {
											"type": "string"
										},
										"waterHeatingTypes": {
											"type": "array"
										},
										"diagnosisVersion": {
											"type": "integer"
										},
										"consumption": {
											"type": "integer"
										},
										"consumptionLetter": {
											"type": "string"
										},
										"consumptionRange": {
											"type": "object",
											"properties": {
												"lowerEndpoint": {
													"type": "integer"
												},
												"lowerBoundType": {
													"type": "string"
												},
												"upperEndpoint": {
													"type": "integer"
												},
												"upperBoundType": {
													"type": "string"
												}
											}
										},
										"greenhouseGasConsumption": {
											"type": "integer"
										},
										"greenhouseGasConsumptionLetter": {
											"type": "string"
										},
										"greenhouseGasConsumptionRange": {
											"type": "object",
											"properties": {
												"lowerEndpoint": {
													"type": "integer"
												},
												"lowerBoundType": {
													"type": "string"
												},
												"upperEndpoint": {
													"type": "integer"
												},
												"upperBoundType": {
													"type": "string"
												}
											}
										}
									}
								},
								"condominium": {
									"type": "object"
								},
								"additionalFeatures": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"type": {
												"type": "string"
											},
											"features": {
												"type": "object",
												"properties": {
													"descriptive": {
														"type": "object",
														"properties": {
															"pros": {
																"type": "array"
															},
															"cons": {
																"type": "array"
															},
															"equipments": {
																"type": "object"
															},
															"services": {
																"type": "object"
															}
														}
													},
													"visual": {
														"type": "object",
														"properties": {
															"images": {
																"type": "array"
															},
															"orientations": {
																"type": "array"
															},
															"views": {
																"type": "array"
															}
														}
													},
													"geometry": {
														"type": "object",
														"properties": {
															"areas": {
																"type": "array"
															},
															"floors": {
																"type": "array"
															},
															"areaCount": {
																"type": "object"
															}
														}
													},
													"construction": {
														"type": "object",
														"properties": {
															"newBuild": {
																"type": "boolean"
															},
															"urbanismRules": {
																"type": "array"
															}
														}
													},
													"energy": {
														"type": "object",
														"properties": {
															"heatingTypes": {
																"type": "array"
															},
															"waterHeatingTypes": {
																"type": "array"
															}
														}
													},
													"condominium": {
														"type": "object"
													},
													"additionalFeatures": {
														"type": "array"
													}
												}
											}
										}
									}
								}
							}
						},
						"marketing": {
							"type": "object",
							"properties": {
								"price": {
									"type": "number"
								},
								"priceEvents": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"price": {
												"type": "number"
											},
											"date": {
												"type": "string"
											}
										}
									}
								},
								"dealers": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"phoneNumberHash": {
												"type": "string"
											},
											"email": {
												"type": "string"
											},
											"bloctel": {
												"type": "object",
												"properties": {
													"status": {
														"type": "string"
													}
												}
											},
											"agenciesUnwanted": {
												"type": "boolean"
											},
											"type": {
												"type": "string"
											}
										}
									}
								},
								"publicationStartDate": {
									"type": "string"
								},
								"publicationEndDate": {
									"type": "string"
								},
								"exclusiveMandate": {
									"type": "boolean"
								},
								"rentalExpenses": {
									"type": "number"
								},
								"rentalExpensesIncluded": {
									"type": "boolean"
								},
								"rentalExpensesEvents": {
									"type": "array"
								},
								"type": {
									"type": "string"
								},
								"priceM2": {
									"type": "number"
								},
								"priceCC": {
									"type": "number"
								},
								"priceHC": {
									"type": "number"
								},
								"relevantPrice": {
									"type": "number"
								},
								"priceM2CC": {
									"type": "number"
								},
								"priceM2HC": {
									"type": "number"
								},
								"publicationDays": {
									"type": "integer"
								},
								"active": {
									"type": "boolean"
								},
								"priceEventsRange": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"price": {
												"type": "number"
											},
											"date": {
												"type": "object",
												"properties": {
													"lowerEndpoint": {
														"type": "string"
													},
													"lowerBoundType": {
														"type": "string"
													},
													"upperEndpoint": {
														"type": "string"
													},
													"upperBoundType": {
														"type": "string"
													}
												}
											},
											"priceM2": {
												"type": "number"
											}
										}
									}
								},
								"publicationDateRange": {
									"type": "object",
									"properties": {
										"lowerEndpoint": {
											"type": "string"
										},
										"lowerBoundType": {
											"type": "string"
										},
										"upperEndpoint": {
											"type": "string"
										},
										"upperBoundType": {
											"type": "string"
										}
									}
								},
								"priceEventsCount": {
									"type": "integer"
								}
							}
						},
						"address": {
							"type": "object",
							"properties": {
								"cityId": {
									"type": "integer"
								},
								"quarterId": {
									"type": "integer"
								},
								"irisIds": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"parcelIds": {
									"type": "array"
								},
								"agglomerationId": {
									"type": "integer"
								},
								"streetNumber": {
									"type": "string"
								},
								"street": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"zipCode": {
									"type": "string"
								},
								"deptCode": {
									"type": "string"
								},
								"location": {
									"type": "object",
									"properties": {
										"lat": {
											"type": "number"
										},
										"lon": {
											"type": "number"
										}
									}
								},
								"formatted": {
									"type": "string"
								}
							}
						},
						"ads": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"crawlSource": {
										"type": "string"
									},
									"url": {
										"type": "string"
									}
								}
							}
						},
						"properties": {
							"type": "array"
						},
						"creationDate": {
							"type": "string"
						},
						"updateDate": {
							"type": "string"
						},
						"type": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yanport_uploaded_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "fr/yanport/uploaded",
						"container": "data-pipeline-input-files"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kadaster_loader_OV15')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upload OV15 data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove last comma",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV15*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/nl/kadaster/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DATUM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WONINGTYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WONINGTYPE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "X_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "X_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Y_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Y_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "K_SOM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "K_SOM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IND_M_O_G",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IND_M_O_G",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ZAK_R",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZAK_R",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_TEKST",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_TEKST",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJ_BEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJ_BEL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ERFDIENSTBH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ERFDIENSTBH",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IND_HUURDER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IND_HUURDER",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BEWARINGKODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BEWARINGKODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STUK_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STUK_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MUT_SRT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MUT_SRT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BURGEM_NR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BURGEM_NR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJECT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJECT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_1E_VERKR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_1E_VERKR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_1E_VERVR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_1E_VERVR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FAM_TRANS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FAM_TRANS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PHT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PHT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV15_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Kadaster_OV15_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy OV15 from staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV15*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV15_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Kadaster_archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete_from_toUpload_folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file_to_archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "Catella_OV15*.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy OV15 from staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV15 data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_copykadaster_OV15data_from_staging]"
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filter OV15 files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Filter OV15 files').output.Value),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remove last comma",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter OV15 files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Uploaded Filenames').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(string(item()), 'OV15')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV15 data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload OV15 data').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload OV15 data').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload OV15 data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload OV15 data').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV15 data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload OV15 data').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload OV15 data').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload OV15 data').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload OV15 data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload OV15 data').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload OV15 data').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload OV15 data').output.errors[0].Code",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kadaster_loader_OV20')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upload OV20 data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove last comma",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV20*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/nl/kadaster/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OVER_BEW_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OVER_BEW_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STUK_ONTV_DATUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STUK_ONTV_DATUM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OVER_STUK",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OVER_STUK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VV_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VV_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VV_WOONPLAATS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VV_WOONPLAATS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_VV_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_VV_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VK_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VK_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VK_WOONPLAATS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VK_WOONPLAATS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_VK_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_VK_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IND_FAM_TRANS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IND_FAM_TRANS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_OBJEKT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_OBJEKT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PERCEELNR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PERCEELNR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEXLT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEXLT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEXNR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEXNR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_GROOTTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_GROOTTE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_KOOP_SOM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_KOOP_SOM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ZAKR_ZR_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZAKR_ZR_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_X_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_X_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_Y_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_Y_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_TEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_KULT_TEXT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_STRAAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_STRAAT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_NR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_NR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_LR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_LR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_TOEVOEGING",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_TOEVOEGING",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_PTT_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_PTT_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PHT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PHT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OVER_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OVER_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV20_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Kadaster_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy OV20 from staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV20*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV20_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Kadaster_archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete_from_toUpload_folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file_to_archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "Catella_OV20*.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy OV20 from staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV20 data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_copykadaster_OV20data_from_staging]"
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filter OV20 files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Filter OV20 files').output.Value),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remove last comma",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter OV20 files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Uploaded Filenames').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(string(item()), 'OV20')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV20 data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload OV20 data').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload OV20 data').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload OV20 data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload OV20 data').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV20 data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload OV20 data').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload OV20 data').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload OV20 data').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload OV20 data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload OV20 data').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload OV20 data').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload OV20 data').output.errors[0].Code",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/debug')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "reset-to-be-uploaded-folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "get-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "reset-to-be-uploaded-folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "zip_geomap_ftp_server",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FtpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"useBinaryTransfer": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "logs/geomapupload"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "zip_geomap_ftp_server",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "geomap_to_be_uploaded_zip_folder",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "old_geomap_data_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_to_be_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "reset-to-be-uploaded-folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy-files-to-archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorageLogs",
									"type": "LinkedServiceReference"
								},
								"path": "logs/geomapupload"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "copy-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "nl/kadaster/to_upload/ov20",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kadaster_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T14:49:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/old_geomap_data_zip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap-data-loader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to laod all geomap files to the database",
				"activities": [
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If Clean Upload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "logs/geomapupload"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "RentOrSale",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['land']"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['titel']"
										},
										"sink": {
											"name": "Titel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
										},
										"sink": {
											"name": "DetailedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['BESCHREIBUNG']"
										},
										"sink": {
											"name": "Description_Main",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['LAGE']"
										},
										"sink": {
											"name": "Description_Location",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['SONSTIGES']"
										},
										"sink": {
											"name": "Description_Other",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['AUSSTATTUNG']"
										},
										"sink": {
											"name": "Description_Furnishing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['verfugbarAb']"
										},
										"sink": {
											"name": "AvailableFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
										},
										"sink": {
											"name": "NumberOfRooms",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
										},
										"sink": {
											"name": "NumberOfBathrooms",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
										},
										"sink": {
											"name": "NumberOfBedRooms",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
										},
										"sink": {
											"name": "NumberOfFloors",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Wohnflaeche']"
										},
										"sink": {
											"name": "LivingArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Grundstuecksflaeche']"
										},
										"sink": {
											"name": "LandArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
										},
										"sink": {
											"name": "IsSanitized",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
										},
										"sink": {
											"name": "EnergyLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
										},
										"sink": {
											"name": "EnergyValue",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etage']"
										},
										"sink": {
											"name": "Floor",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
										},
										"sink": {
											"name": "RenovationYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
										},
										"sink": {
											"name": "ConstructionYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektArt']"
										},
										"sink": {
											"name": "PropertyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "RentPerMonthNoAdditionalCosts",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "RentPerMonthWithAdditionalCosts",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "AdditionalCostsPerMonth",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "RentPerMonthPerParking",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
										},
										"sink": {
											"name": "RentalDeposit",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "HeatingCostsPerMonth",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
										},
										"sink": {
											"name": "HeatingCostsIncludedInAdditionalCosts",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ort']"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreis']"
										},
										"sink": {
											"name": "District",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['accuracy']"
										},
										"sink": {
											"name": "LocationAccuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['location']['lon']"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['location']['lat']"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['plz']"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteil']"
										},
										"sink": {
											"name": "CityDistrict2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirk']"
										},
										"sink": {
											"name": "CityDistrict1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['strasse']"
										},
										"sink": {
											"name": "Street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['hausnummer']"
										},
										"sink": {
											"name": "HouseNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTyp']"
										},
										"sink": {
											"name": "DwellingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter']"
										},
										"sink": {
											"name": "Brokers_JsonArray",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSeenDay']"
										},
										"sink": {
											"name": "FirstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['daysOnline']"
										},
										"sink": {
											"name": "DaysOnline",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['preisProQm']"
										},
										"sink": {
											"name": "PricePerSqm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['eventDay']"
										},
										"sink": {
											"name": "ScrapingDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['preis']"
										},
										"sink": {
											"name": "AskingPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['online']"
										},
										"sink": {
											"name": "IsOnline",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastSeenDay']"
										},
										"sink": {
											"name": "LastSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['nutzflaeche']"
										},
										"sink": {
											"name": "UsableArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "GeomapId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataPipelineTest_GeomapRawInput",
								"type": "DatasetReference",
								"parameters": {
									"sinkTableName": "GeoMapRawImport"
								}
							}
						]
					},
					{
						"name": "If Clean Upload",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEachIncominFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('varCleanUpload')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Drop and recreate GeomapRawInputTable_copy1_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('varStoredProcedureForTableReset')",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "DataPipelineSQLTest",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SetCleanUploadToFalse_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Drop and recreate GeomapRawInputTable_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varCleanUpload",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "move-files-from archive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetCleanUploadToFalse_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "de/geomap/uploaded",
												"wildcardFileName": "*.zip",
												"deleteFilesAfterCompletion": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "geomap_uploaded_files_zip",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "geomap_uploaded_zip_folder",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "SP_Pipeline_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_LogTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"rowsCopied": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataRead": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsRead}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"copyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"effectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].start}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_End_Time": {
									"value": {
										"value": "@{utcnow()}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_queuingDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.queuingDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_transferDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_Pipeline_Error",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_ErrorsTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"EffectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorCode": {
									"value": {
										"value": "@{activity('Upload-Data').error.errorCode}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorDescription": {
									"value": {
										"value": "@{activity('Upload-Data').error.message}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorLoggedTIme": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "String"
								},
								"FailureType": {
									"value": {
										"value": "@concat(activity('Upload-Data').error.message,'failureType:',activity('Upload-Data').error.failureType)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PipelineThrow",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "SP_Pipeline_Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data').error.message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data').error.errorCode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "get-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "zip_geomap_ftp_server",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FtpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"useBinaryTransfer": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "logs/geomapupload"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "zip_geomap_ftp_server",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "geomap_to_be_uploaded_zip_folder",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"varCleanUpload": {
						"type": "Boolean",
						"defaultValue": false
					},
					"varStoredProcedureForTableReset": {
						"type": "String",
						"defaultValue": "[[dbo].[sp_dropand_recreate_geomap_raw_input_table]"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T17:43:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap-data-loader_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to load all geomap files to the database",
				"activities": [
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "get-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "zip_geomap_ftp_server",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FtpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"useBinaryTransfer": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "data-pipeline-input-files/de/geomap/logs"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "zip_geomap_ftp_server",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "geomap_to_be_uploaded_zip_folder",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Upload-Data-to-DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove last comma",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/de/geomap/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "kaufMiete",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLongitude']"
										},
										"sink": {
											"name": "geoLongitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLatitude']"
										},
										"sink": {
											"name": "geoLatitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['land']"
										},
										"sink": {
											"name": "land",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTyp']"
										},
										"sink": {
											"name": "objektTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter']"
										},
										"sink": {
											"name": "anbieter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['titel']"
										},
										"sink": {
											"name": "titel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
										},
										"sink": {
											"name": "portalUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTypText']"
										},
										"sink": {
											"name": "objektTypText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
										},
										"sink": {
											"name": "saniert",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['heizungsart']"
										},
										"sink": {
											"name": "heizungsart",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sanitär']"
										},
										"sink": {
											"name": "sanitar",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisTyp']"
										},
										"sink": {
											"name": "ausweisTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisInfo']"
										},
										"sink": {
											"name": "ausweisInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
										},
										"sink": {
											"name": "KennwertKlasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
										},
										"sink": {
											"name": "kennwert",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Grundstuecksflaeche']"
										},
										"sink": {
											"name": "Grundstuecksflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Wohnflaeche']"
										},
										"sink": {
											"name": "Wohnflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Nutzflaeche']"
										},
										"sink": {
											"name": "Nutzflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['zustand']"
										},
										"sink": {
											"name": "zustand",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['ausstattungsQualität']"
										},
										"sink": {
											"name": "ausstattungsQualitat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etage']"
										},
										"sink": {
											"name": "etage",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
										},
										"sink": {
											"name": "ZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
										},
										"sink": {
											"name": "ETAGEN",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
										},
										"sink": {
											"name": "BADEZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
										},
										"sink": {
											"name": "SCHLAFZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['STELLPLAETZE']"
										},
										"sink": {
											"name": "STELLPLAETZE",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
										},
										"sink": {
											"name": "BAUJAHR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
										},
										"sink": {
											"name": "SANIERUNG",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['küche']"
										},
										"sink": {
											"name": "kuche",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['balkonTerrasse']"
										},
										"sink": {
											"name": "balkonTerrasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['keller']"
										},
										"sink": {
											"name": "keller",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['kommunikation']"
										},
										"sink": {
											"name": "kommunikation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['boden']"
										},
										"sink": {
											"name": "boden",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieträger']"
										},
										"sink": {
											"name": "energietrager",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['aufzug']"
										},
										"sink": {
											"name": "aufzug",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['stellplatz']"
										},
										"sink": {
											"name": "stellplatz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['lageEinheit']"
										},
										"sink": {
											"name": "lageEinheit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sonstiges']"
										},
										"sink": {
											"name": "sonstiges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['möbliert']"
										},
										"sink": {
											"name": "mobliert",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektArt']"
										},
										"sink": {
											"name": "objektArt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['provisionsfrei']"
										},
										"sink": {
											"name": "provisionsfrei",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
										},
										"sink": {
											"name": "heizkostenInNebenkostenEnthalten",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['currency']"
										},
										"sink": {
											"name": "currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatOhneNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatMitNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "NebenkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
										},
										"sink": {
											"name": "MietKaution",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "HeizkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "MieteProMonatProStellplatz",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['Kaufpreis']"
										},
										"sink": {
											"name": "Kaufpreis",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HausgeldProMonat']"
										},
										"sink": {
											"name": "HausgeldProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteil']"
										},
										"sink": {
											"name": "stadtteil",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirk']"
										},
										"sink": {
											"name": "stadtbezirk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreis']"
										},
										"sink": {
											"name": "kreis",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['accuracy']"
										},
										"sink": {
											"name": "accuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ort']"
										},
										"sink": {
											"name": "ort",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['bundesland']"
										},
										"sink": {
											"name": "bundesland",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['plz']"
										},
										"sink": {
											"name": "plz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['strasse']"
										},
										"sink": {
											"name": "strasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['hausnummer']"
										},
										"sink": {
											"name": "hausnummer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSeenDay']"
										},
										"sink": {
											"name": "firstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['daysOnline']"
										},
										"sink": {
											"name": "daysOnline",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['preisProQm']"
										},
										"sink": {
											"name": "preisProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['onlineRanges']"
										},
										"sink": {
											"name": "onlineRanges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteProQm']"
										},
										"sink": {
											"name": "marktmieteProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteGebiet']"
										},
										"sink": {
											"name": "marktmieteGebiet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeAvg']"
										},
										"sink": {
											"name": "renditeAvg",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeQuelle']"
										},
										"sink": {
											"name": "renditeQuelle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktRendite']"
										},
										"sink": {
											"name": "marktRendite",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['lt']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_lt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['gte']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_gte",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['anzahlAngeboteMarktmiete']"
										},
										"sink": {
											"name": "anzahlAngeboteMarktmiete",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['eventDay']"
										},
										"sink": {
											"name": "eventDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['online']"
										},
										"sink": {
											"name": "online",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['lastOfflineDay']"
										},
										"sink": {
											"name": "lastOfflineDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastSeenDay']"
										},
										"sink": {
											"name": "lastSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "groupId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Geomap_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "ForEachIncominFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_to_be_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Uploaded Filenames').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remove last comma",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Code",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap-data-loader_2_manual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to load all geomap files to the database",
				"activities": [
					{
						"name": "Upload-Data-to-DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove last comma",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/de/geomap/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "kaufMiete",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLongitude']"
										},
										"sink": {
											"name": "geoLongitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLatitude']"
										},
										"sink": {
											"name": "geoLatitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['land']"
										},
										"sink": {
											"name": "land",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTyp']"
										},
										"sink": {
											"name": "objektTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter']"
										},
										"sink": {
											"name": "anbieter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['titel']"
										},
										"sink": {
											"name": "titel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
										},
										"sink": {
											"name": "portalUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTypText']"
										},
										"sink": {
											"name": "objektTypText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
										},
										"sink": {
											"name": "saniert",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['heizungsart']"
										},
										"sink": {
											"name": "heizungsart",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sanitär']"
										},
										"sink": {
											"name": "sanitar",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisTyp']"
										},
										"sink": {
											"name": "ausweisTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisInfo']"
										},
										"sink": {
											"name": "ausweisInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
										},
										"sink": {
											"name": "KennwertKlasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
										},
										"sink": {
											"name": "kennwert",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Grundstuecksflaeche']"
										},
										"sink": {
											"name": "Grundstuecksflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Wohnflaeche']"
										},
										"sink": {
											"name": "Wohnflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Nutzflaeche']"
										},
										"sink": {
											"name": "Nutzflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['zustand']"
										},
										"sink": {
											"name": "zustand",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['ausstattungsQualität']"
										},
										"sink": {
											"name": "ausstattungsQualitat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etage']"
										},
										"sink": {
											"name": "etage",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
										},
										"sink": {
											"name": "ZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
										},
										"sink": {
											"name": "ETAGEN",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
										},
										"sink": {
											"name": "BADEZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
										},
										"sink": {
											"name": "SCHLAFZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['STELLPLAETZE']"
										},
										"sink": {
											"name": "STELLPLAETZE",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
										},
										"sink": {
											"name": "BAUJAHR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
										},
										"sink": {
											"name": "SANIERUNG",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['küche']"
										},
										"sink": {
											"name": "kuche",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['balkonTerrasse']"
										},
										"sink": {
											"name": "balkonTerrasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['keller']"
										},
										"sink": {
											"name": "keller",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['kommunikation']"
										},
										"sink": {
											"name": "kommunikation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['boden']"
										},
										"sink": {
											"name": "boden",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieträger']"
										},
										"sink": {
											"name": "energietrager",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['aufzug']"
										},
										"sink": {
											"name": "aufzug",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['stellplatz']"
										},
										"sink": {
											"name": "stellplatz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['lageEinheit']"
										},
										"sink": {
											"name": "lageEinheit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sonstiges']"
										},
										"sink": {
											"name": "sonstiges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['möbliert']"
										},
										"sink": {
											"name": "mobliert",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektArt']"
										},
										"sink": {
											"name": "objektArt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['provisionsfrei']"
										},
										"sink": {
											"name": "provisionsfrei",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
										},
										"sink": {
											"name": "heizkostenInNebenkostenEnthalten",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['currency']"
										},
										"sink": {
											"name": "currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatOhneNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatMitNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "NebenkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
										},
										"sink": {
											"name": "MietKaution",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "HeizkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "MieteProMonatProStellplatz",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['Kaufpreis']"
										},
										"sink": {
											"name": "Kaufpreis",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HausgeldProMonat']"
										},
										"sink": {
											"name": "HausgeldProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteil']"
										},
										"sink": {
											"name": "stadtteil",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirk']"
										},
										"sink": {
											"name": "stadtbezirk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreis']"
										},
										"sink": {
											"name": "kreis",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['accuracy']"
										},
										"sink": {
											"name": "accuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ort']"
										},
										"sink": {
											"name": "ort",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['bundesland']"
										},
										"sink": {
											"name": "bundesland",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['plz']"
										},
										"sink": {
											"name": "plz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['strasse']"
										},
										"sink": {
											"name": "strasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['hausnummer']"
										},
										"sink": {
											"name": "hausnummer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSeenDay']"
										},
										"sink": {
											"name": "firstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['daysOnline']"
										},
										"sink": {
											"name": "daysOnline",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['preisProQm']"
										},
										"sink": {
											"name": "preisProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['onlineRanges']"
										},
										"sink": {
											"name": "onlineRanges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteProQm']"
										},
										"sink": {
											"name": "marktmieteProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteGebiet']"
										},
										"sink": {
											"name": "marktmieteGebiet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeAvg']"
										},
										"sink": {
											"name": "renditeAvg",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeQuelle']"
										},
										"sink": {
											"name": "renditeQuelle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktRendite']"
										},
										"sink": {
											"name": "marktRendite",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['lt']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_lt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['gte']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_gte",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['anzahlAngeboteMarktmiete']"
										},
										"sink": {
											"name": "anzahlAngeboteMarktmiete",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['eventDay']"
										},
										"sink": {
											"name": "eventDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['online']"
										},
										"sink": {
											"name": "online",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['lastOfflineDay']"
										},
										"sink": {
											"name": "lastOfflineDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['lastSeenDay']"
										},
										"sink": {
											"name": "lastSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "groupId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Geomap_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_to_be_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Uploaded Filenames').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remove last comma",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap-description-loader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to load all geomap files to the database",
				"activities": [
					{
						"name": "Upload_descriptions_to-DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/de/geomap/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "kaufMiete",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['LAGE']"
										},
										"sink": {
											"name": "LAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['BESCHREIBUNG']"
										},
										"sink": {
											"name": "BESCHREIBUNG",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['SONSTIGES']"
										},
										"sink": {
											"name": "SONSTIGES",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['AUSSTATTUNG']"
										},
										"sink": {
											"name": "AUSSTATTUNG",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['möbliert']"
										},
										"sink": {
											"name": "mobliert",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "groupId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Geomap_descr_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload_descriptions_to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_uploaded_descr_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/kadaster-data-loader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to load all kadaster files to the database",
				"activities": [
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If Reupload 2019",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "nl/kadaster/to_upload/ov20",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "logs/kadasterupload"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OVER_BEW_K",
											"type": "String"
										},
										"sink": {
											"name": "OVER_BEW_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "STUK_ONTV_DATUM",
											"type": "String"
										},
										"sink": {
											"name": "STUK_ONTV_DATUM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OVER_STUK",
											"type": "String"
										},
										"sink": {
											"name": "OVER_STUK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VV_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "VV_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VV_WOONPLAATS",
											"type": "String"
										},
										"sink": {
											"name": "VV_WOONPLAATS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NNP_VV_K",
											"type": "String"
										},
										"sink": {
											"name": "NNP_VV_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VK_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "VK_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VK_WOONPLAATS",
											"type": "String"
										},
										"sink": {
											"name": "VK_WOONPLAATS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NNP_VK_K",
											"type": "String"
										},
										"sink": {
											"name": "NNP_VK_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IND_FAM_TRANS",
											"type": "String"
										},
										"sink": {
											"name": "IND_FAM_TRANS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_OBJEKT",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_OBJEKT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "KAD_GEM",
											"type": "String"
										},
										"sink": {
											"name": "KAD_GEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SECTIE",
											"type": "String"
										},
										"sink": {
											"name": "SECTIE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PERCEELNR",
											"type": "String"
										},
										"sink": {
											"name": "PERCEELNR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INDEXLT",
											"type": "String"
										},
										"sink": {
											"name": "INDEXLT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INDEXNR",
											"type": "String"
										},
										"sink": {
											"name": "INDEXNR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_GROOTTE",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_GROOTTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_KOOP_SOM",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_KOOP_SOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ZAKR_ZR_K",
											"type": "String"
										},
										"sink": {
											"name": "ZAKR_ZR_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_X_COORD",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_X_COORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_Y_COORD",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_Y_COORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_TEXT",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_KULT_TEXT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_STRAAT",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_STRAAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_NR",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_NR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_LR",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_LR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_TOEVOEGING",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_TOEVOEGING",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_PTT_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_PTT_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PHT",
											"type": "String"
										},
										"sink": {
											"name": "PHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OVER_ID",
											"type": "String"
										},
										"sink": {
											"name": "OVER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BAG_ID",
											"type": "String"
										},
										"sink": {
											"name": "BAG_ID",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataPipelineTest_KadasterRawInputStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP_Pipeline_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy from staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_LogTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataRead": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsRead}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"copyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"effectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].start}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_End_Time": {
									"value": {
										"value": "@{utcnow()}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_queuingDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.queuingDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_transferDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_Pipeline_Error",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Copy from staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_ErrorsTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"EffectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorCode": {
									"value": {
										"value": "@{activity('Upload-Data').error.errorCode}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorDescription": {
									"value": {
										"value": "@{activity('Upload-Data').error.message}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorLoggedTIme": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "String"
								},
								"FailureType": {
									"value": {
										"value": "@concat(activity('Upload-Data').error.message,'failureType:',activity('Upload-Data').error.failureType)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PipelineThrow",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "SP_Pipeline_Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data').error.message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data').error.errorCode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy from staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_copykadaster_data_from_staging]"
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Reupload 2019",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('reupload-2019')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Upload-Kadaster-2019 to staging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Reset Kadaster Raw Input",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "JsonFilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": true,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobStorageLogs",
													"type": "LinkedServiceReference"
												},
												"path": "logs/kadasterupload"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "BEWARINGKODE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OVER_BEW_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "DATUM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "STUK_ONTV_DATUM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "STUK_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OVER_STUK",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "MUT_SRT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_MUT_SRT_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "FAM_TRANS",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IND_FAM_TRANS",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "OBJECT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_OBJEKT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KAD_GEM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "KAD_GEM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "SECTIE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SECTIE",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "INDEX_LR1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "INDEXLT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "GROOTTE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_GROOTTE",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "K_SOM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_KOOP_SOM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "BURGEM_NR",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_BURG_GEM_NR",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KULT_GEB_K1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_KULT_ONGEB_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "ZAK_R",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ZAKR_ZR_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "OBJ_BEL",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJB_OBJ_BEL_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "X_COORD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_X_COORD",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Y_COORD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_Y_COORD",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KULT_TEKST",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_KULT_TEXT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KULT_GEB_K",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_KULT_GEB_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "PLTSNAAM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_PLTS_NAAM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "STRAAT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_STRAAT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "HUISNR",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_HUIS_NR",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "TOEV",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_TOEVOEGING",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "PTT_K",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_PTT_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "PHT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "PHT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "CADOV_CADOI_ADRESSEERBR_OBJ_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "BAG_ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Kadaster2019",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DataPipelineTest_KadasterRawInputStaging",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Set reupload 2019 to false",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "copy-files-from-archive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "reupload-2019",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Reset Kadaster Raw Input",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_reset_kadsater_raw_input]"
									},
									"linkedServiceName": {
										"referenceName": "DataPipelineSQLTest",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "copy-files-from-archive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Upload-Kadaster-2019 to staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFolderPath": "nl/kadaster/uploaded",
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "kadaster_uploaded",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "kadaster_to_be_uploaded",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "reset-to-be-uploaded-folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy-files-to-archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorageLogs",
									"type": "LinkedServiceReference"
								},
								"path": "logs/geomapupload"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "copy-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "nl/kadaster/to_upload/ov20",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kadaster_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"reupload-2019": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T12:57:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/kra-data-loader_manual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Knibber Research loader",
				"activities": [
					{
						"name": "Upload-Data-to-DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove last comma",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "benelux/kra/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/benelux/kra/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sourceUrl']"
										},
										"sink": {
											"name": "sourceUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sourceId']"
										},
										"sink": {
											"name": "sourceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['referenceDate']"
										},
										"sink": {
											"name": "referenceDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['isSale']"
										},
										"sink": {
											"name": "isSale",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['askingprice']"
										},
										"sink": {
											"name": "askingprice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['including_purchase_cost']"
										},
										"sink": {
											"name": "including_purchase_cost",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['service_charges']"
										},
										"sink": {
											"name": "service_charges",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['services_included']"
										},
										"sink": {
											"name": "services_included",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['property_type']"
										},
										"sink": {
											"name": "property_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['broker']"
										},
										"sink": {
											"name": "broker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['construction_year']"
										},
										"sink": {
											"name": "construction_year",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['renovation_year']"
										},
										"sink": {
											"name": "renovation_year",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['living_area']"
										},
										"sink": {
											"name": "living_area",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['land_area']"
										},
										"sink": {
											"name": "land_area",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['furnishing']"
										},
										"sink": {
											"name": "furnishing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['floor']"
										},
										"sink": {
											"name": "floor",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['title']"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['number_of_rooms']"
										},
										"sink": {
											"name": "number_of_rooms",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['particularities']"
										},
										"sink": {
											"name": "particularities",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['construction_type']"
										},
										"sink": {
											"name": "construction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['energy_label']"
										},
										"sink": {
											"name": "energy_label",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['new_construction']"
										},
										"sink": {
											"name": "new_construction",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['address']['street']"
										},
										"sink": {
											"name": "street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['house_number']"
										},
										"sink": {
											"name": "house_number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['house_number_add']"
										},
										"sink": {
											"name": "house_number_add",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['zip_code']"
										},
										"sink": {
											"name": "zip_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['construction_number']"
										},
										"sink": {
											"name": "construction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['geodata']['latitude']"
										},
										"sink": {
											"name": "latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['geodata']['longitude']"
										},
										"sink": {
											"name": "longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['geodata']['precise']"
										},
										"sink": {
											"name": "geodata_precise",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['thumbnail_image_url']"
										},
										"sink": {
											"name": "thumbnail_image_url",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "kra_to_be_uploader_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_KRA_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "benelux/kra/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "kra_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kra_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kra_to_be_uploader_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Uploaded Filenames').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remove last comma",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/kra_uploaded_zip_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/move_data_from_sources_to_adress_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transfer And Load GeoMap Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * FROM [dbo].[GeoMapRawImport]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[sp_transform_and_load_geomap_data]",
								"sqlWriterTableType": "GeoMapRawInputType",
								"storedProcedureTableTypeParameterName": "GeoMapInput",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JsonFilePath",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RentOrSale",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RentOrSale",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "FederalState",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "FederalState",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "District",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "District",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "StadOrOrtsTeil",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StadOrOrtsTeil",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plz",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Plz",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Strasse",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Strasse",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Titel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Titel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_Availability",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_Availability",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DetailedUrl",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DetailedUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Main",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Main",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Other",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Other",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Furnishing",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Furnishing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AvailableFrom",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "AvailableFrom",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ImageUrls_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ImageUrls_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_Floor",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_Floor",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WhiteGoodsQuality",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WhiteGoodsQuality",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Floor",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Floor",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfRooms",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfRooms",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfFloors",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfFloors",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfBathrooms",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfBathrooms",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfParkingSpots",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfParkingSpots",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfBedRooms",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfBedRooms",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ConstructionYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ConstructionYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RenovationYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RenovationYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LivingArea",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LivingArea",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LandArea",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LandArea",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Condition",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Condition",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnergyIdInfo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnergyIdInfo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsSanitized",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSanitized",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsRented",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRented",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ParkingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ParkingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SanitaryTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SanitaryTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ElevatorTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ElevatorTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BasementTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BasementTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BalconyTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalconyTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnergySources_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnergySources_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KitchenTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "KitchenTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UnitLocations_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UnitLocations_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Details_Other_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Details_Other_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HeatingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HeatingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PropertyType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PropertyType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsCommisionFree",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsCommisionFree",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Raw_Commision",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_Commision",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_AskingPrise",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_AskingPrise",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_AskingPricePerParking",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_AskingPricePerParking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentPerMonth_AdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentPerMonth_AdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_AdditionalCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_AdditionalCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentalDeposit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentalDeposit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_HeatingCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_HeatingCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentPerMonthPerParking",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentPerMonthPerParking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentPerMonthNoAdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentPerMonthNoAdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Currency",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Currency",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "PurchasePrice",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PurchasePrice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PurchasePricePerParking",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PurchasePricePerParking",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentPerMonthWithAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentPerMonthWithAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "AdditionalCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AdditionalCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentalDeposit",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentalDeposit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentPerMonthPerParking",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentPerMonthPerParking",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentPerMonthNoAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentPerMonthNoAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HeatingCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "HeatingCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HeatingCostsIncludedInAdditionalCosts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HeatingCostsIncludedInAdditionalCosts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CountryId",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CountryId",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "LocationAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LocationAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Lon",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Lon",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Lat",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Lat",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "CityId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Stadtteil",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stadtteil",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stadtbezirk",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stadtbezirk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Street",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Street",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StadtteilId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StadtteilId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HouseNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HouseNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StadtbezirkId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StadtbezirkId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KreisId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "KreisId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Kreis",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Kreis",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationHierarchy_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LocationHierarchy_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ConstructionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ConstructionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Brokers_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Brokers_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FirstSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FirstSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DaysOnline",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DaysOnline",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PreisPerSqm",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PreisPerSqm",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_PerSqm",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "GeoMap_MarketRent_PerSqm",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_RegionalLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeoMap_MarketRent_RegionalLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeoMap_Yield_Average",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "GeoMap_Yield_Average",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_Yield_Source",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeoMap_Yield_Source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeoMap_Return",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "GeoMap_Return",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_Period_LT",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "GeoMap_MarketRent_Period_LT",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_Period_GTE",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "GeoMap_MarketRent_Period_GTE",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_NumberOfOffers",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GeoMap_MarketRent_NumberOfOffers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OnlineRanges_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "OnlineRanges_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CrawlerEntryIds_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CrawlerEntryIds_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScrapingDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "ScrapingDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "AskingPrice",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AskingPrice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "IsOnline",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsOnline",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "LastSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "UsableArea",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UsableArea",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeomapId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GeomapId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataPipelineTest_GeomapRawInput",
								"type": "DatasetReference",
								"parameters": {
									"sinkTableName": "GeoMapRawImport"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DataPipelineTest_GeomapRawInput",
								"type": "DatasetReference",
								"parameters": {
									"sinkTableName": "GeoMapRawImport"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-15T16:54:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testfundaupload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['objectID']"
										},
										"sink": {
											"name": "objectID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['objectUrl']"
										},
										"sink": {
											"name": "objectUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address']"
										},
										"sink": {
											"name": "address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_address_street']"
										},
										"sink": {
											"name": "jsondata_address_street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_zipcode']"
										},
										"sink": {
											"name": "jsondata_zipcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_city']"
										},
										"sink": {
											"name": "jsondata_city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_province']"
										},
										"sink": {
											"name": "jsondata_province",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_address_housenumber']"
										},
										"sink": {
											"name": "jsondata_address_housenumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_address_housenumber_extension']"
										},
										"sink": {
											"name": "jsondata_address_housenumber_extension",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_price_buy']"
										},
										"sink": {
											"name": "jsondata_price_buy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_price_rental']"
										},
										"sink": {
											"name": "jsondata_price_rental",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['jsondata_squaremeters']"
										},
										"sink": {
											"name": "jsondata_squaremeters",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['jsondata_energieklasse']"
										},
										"sink": {
											"name": "jsondata_energieklasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['zipCode']"
										},
										"sink": {
											"name": "zipCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['omschrijving']"
										},
										"sink": {
											"name": "omschrijving",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isExternal']"
										},
										"sink": {
											"name": "isExternal",
											"type": "Byte"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_priceString']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_priceString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_price']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_price",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_firstPrice']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_firstPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_aangebodenSinds']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_aangebodenSinds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_status']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_acceptatie']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_acceptatie",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortWoonhuis']"
										},
										"sink": {
											"name": "bouw_soortWoonhuis",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortAppartement']"
										},
										"sink": {
											"name": "bouw_soortAppartement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortBouw']"
										},
										"sink": {
											"name": "bouw_soortBouw",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_bouwjaar']"
										},
										"sink": {
											"name": "bouw_bouwjaar",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortDak']"
										},
										"sink": {
											"name": "bouw_soortDak",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_specifiek']"
										},
										"sink": {
											"name": "bouw_specifiek",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_woonoppervlakte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_woonoppervlakte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_overigeInpandigeRuimte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_overigeInpandigeRuimte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_externeBergRuimte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_externeBergRuimte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_perceelOppervlakte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_perceelOppervlakte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_inhoud']"
										},
										"sink": {
											"name": "oppervlakteInhoud_inhoud",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['indeling_aantalKamersString']"
										},
										"sink": {
											"name": "indeling_aantalKamersString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalkamers']"
										},
										"sink": {
											"name": "Indeling_aantalkamers",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalSlaapkamers']"
										},
										"sink": {
											"name": "Indeling_aantalSlaapkamers",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalBadkamers']"
										},
										"sink": {
											"name": "Indeling_aantalBadkamers",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_badkamerVoorzieningen']"
										},
										"sink": {
											"name": "Indeling_badkamerVoorzieningen",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalWoonlagen']"
										},
										"sink": {
											"name": "Indeling_aantalWoonlagen",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_voorzieningen']"
										},
										"sink": {
											"name": "Indeling_voorzieningen",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVE_bijdrage']"
										},
										"sink": {
											"name": "VVE_bijdrage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_inschrijving']"
										},
										"sink": {
											"name": "VVEChecklist_inschrijving",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_jaarlijkseVergadering']"
										},
										"sink": {
											"name": "VVEChecklist_jaarlijkseVergadering",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_periodiekeBijdrage']"
										},
										"sink": {
											"name": "VVEChecklist_periodiekeBijdrage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_reservefondsAanwezig']"
										},
										"sink": {
											"name": "VVEChecklist_reservefondsAanwezig",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_onderhoudsplan']"
										},
										"sink": {
											"name": "VVEChecklist_onderhoudsplan",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_opstalverzekering']"
										},
										"sink": {
											"name": "VVEChecklist_opstalverzekering",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energie_voorlopigEnergieLabel']"
										},
										"sink": {
											"name": "Energie_voorlopigEnergieLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energie_isolatie']"
										},
										"sink": {
											"name": "Energie_isolatie",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energie_verwarming']"
										},
										"sink": {
											"name": "Energie_verwarming",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energy_warmWater']"
										},
										"sink": {
											"name": "Energy_warmWater",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kadastraleGegevens_oppervlakte']"
										},
										"sink": {
											"name": "kadastraleGegevens_oppervlakte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['kadastraleGegevens_eigendomsSituatie']"
										},
										"sink": {
											"name": "kadastraleGegevens_eigendomsSituatie",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kadastraleGegevens_lasten']"
										},
										"sink": {
											"name": "kadastraleGegevens_lasten",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_ligging']"
										},
										"sink": {
											"name": "buitenRuimte_ligging",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_tuin']"
										},
										"sink": {
											"name": "buitenRuimte_tuin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_achtertuin']"
										},
										"sink": {
											"name": "buitenRuimte_achtertuin",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_voorTuin']"
										},
										"sink": {
											"name": "buitenRuimte_voorTuin",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['Buitenruimte_liggingTuin']"
										},
										"sink": {
											"name": "Buitenruimte_liggingTuin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Buitenruimte_balkonDakterras']"
										},
										"sink": {
											"name": "Buitenruimte_balkonDakterras",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['parkeerGelegenheid_soortParkeerGelegenheid']"
										},
										"sink": {
											"name": "parkeerGelegenheid_soortParkeerGelegenheid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Garage_soortGarage']"
										},
										"sink": {
											"name": "Garage_soortGarage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isRental']"
										},
										"sink": {
											"name": "isRental",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['huur_huurPrijsString']"
										},
										"sink": {
											"name": "huur_huurPrijsString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_huurPrijs']"
										},
										"sink": {
											"name": "huur_huurPrijs",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['huur_waarborgSomString']"
										},
										"sink": {
											"name": "huur_waarborgSomString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortAppertement']"
										},
										"sink": {
											"name": "bouw_soortAppertement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energy_cvketel']"
										},
										"sink": {
											"name": "Energy_cvketel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_waarborgSom']"
										},
										"sink": {
											"name": "huur_waarborgSom",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['adjusted']"
										},
										"sink": {
											"name": "adjusted",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['priceHistory']"
										},
										"sink": {
											"name": "priceHistory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['statusHistory']"
										},
										"sink": {
											"name": "statusHistory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_kostenHuurderString']"
										},
										"sink": {
											"name": "huur_kostenHuurderString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_huurOvereenkomst']"
										},
										"sink": {
											"name": "huur_huurOvereenkomst",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['realEstateAgent_name']"
										},
										"sink": {
											"name": "realEstateAgent_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['realEstateAgent_phone']"
										},
										"sink": {
											"name": "realEstateAgent_phone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['realEstateAgent_fundaUrl']"
										},
										"sink": {
											"name": "realEstateAgent_fundaUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['images']"
										},
										"sink": {
											"name": "images",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soldFirstForSaleDate']"
										},
										"sink": {
											"name": "soldFirstForSaleDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soldSoldDate']"
										},
										"sink": {
											"name": "soldSoldDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['itemCount']"
										},
										"sink": {
											"name": "itemCount",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['result']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "funda_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FundaTest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T12:53:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wh_data_loader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove last comma",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "CsvFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/Watson_Holmes/to_upload",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/nl/Watson_Holmes/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AanmeldDatum",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AanmeldDatum",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "AantalBadkamers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalBadkamers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AantalKamers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalKamers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AantalSlaapKamers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalSlaapKamers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AantalVerdiepingen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalVerdiepingen",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ActueleStatus",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActueleStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Adres",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Adres",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AdresId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdresId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AfwerkingGemeubileerd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfwerkingGemeubileerd",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AfwerkingGestoffeerd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfwerkingGestoffeerd",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AfwerkingKaleVerhuur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfwerkingKaleVerhuur",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Bouwjaar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwjaar",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Bouwnummer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwnummer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bouwperiode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwperiode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bouwvorm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwvorm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bron",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bron",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BuurtId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuurtId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BuurtNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuurtNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ConditieKostenKoper",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ConditieKostenKoper",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConditieVrijOpNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ConditieVrijOpNaam",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Energielabel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Energielabel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPacht",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPacht",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPachtAfgekochtTot",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPachtAfgekochtTot",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPachtDuur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPachtDuur",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPachtPerJaar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPachtPerJaar",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FotoUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FotoUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GebruiksOppervlakte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GebruiksOppervlakte",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GemeenteId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GemeenteId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GemeenteNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GemeenteNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Huisnummer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Huisnummer",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HuisnummerInclToevoegingen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HuisnummerInclToevoegingen",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HuurKoop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HuurKoop",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Inhoud",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inhoud",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsHuur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsHuur",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsKoop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsKoop",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsVertrouwelijk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsVertrouwelijk",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Looptijd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Looptijd",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Makelaar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Makelaar",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModelwaardeAVMM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelwaardeAVMM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModelwaardeGeindexeerdeM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelwaardeGeindexeerdeM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModelwaardeReferentiesM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelwaardeReferentiesM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifyDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModifyDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "NieuwbouwProjectID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NieuwbouwProjectID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NieuwbouwProjectNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NieuwbouwProjectNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OnderhoudsStaatBinnen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OnderhoudsStaatBinnen",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OnderhoudsStaatBuiten",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OnderhoudsStaatBuiten",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OppervlakteTuin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OppervlakteTuin",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Overbieden",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overbieden",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PandId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PandId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Parkeer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parkeer",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PerceelOppervlakte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PerceelOppervlakte",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ServiceKosten",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiceKosten",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StatusActueelInAanbod",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusActueelInAanbod",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusIngetrokken",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusIngetrokken",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusOnderOptie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusOnderOptie",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusTransactie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusTransactie",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusTransactieBekend",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusTransactieBekend",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusTransactieOnderVoorbehoud",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusTransactieOnderVoorbehoud",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Straatnaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Straatnaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactieConditie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieConditie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactiedatumOndertekeningAkte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactiedatumOndertekeningAkte",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "TransactiedatumOnderVoorbehoud",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactiedatumOnderVoorbehoud",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "TransactiedatumTransport",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactiedatumTransport",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "TransactieId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Transactieprijs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transactieprijs",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TransactieprijsM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieprijsM2",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TransactieprijsM2Huur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieprijsM2Huur",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TransactieprijsM2Koop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieprijsM2Koop",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TransactieSpecificatie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieSpecificatie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tuin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Tuin",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "VerblijfsobjectId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VerblijfsobjectId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vraagprijs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vraagprijs",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "VraagprijsConditie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsConditie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VraagprijsM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsM2",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsM2Huur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsM2Huur",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsM2Koop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsM2Koop",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsOorspronkelijk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsOorspronkelijk",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "VraagprijsOorspronkelijkM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsOorspronkelijkM2",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsSpecificatie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsSpecificatie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WijkId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WijkId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WijkNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WijkNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WoningSubType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WoningSubType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WoningType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WoningType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CsvFilePath",
											"type": "String"
										},
										"sink": {
											"name": "CsvFilePath",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WH_input_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQL_WH_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_files_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/Watson_Holmes/to_upload",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WH_input_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WH_archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete_from_input_folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy_files_to_archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WH_input_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WH_archive",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "get-FTP-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WH_FTP_csv_file",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-FTP-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-FTP-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-FTP-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ""
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "data-pipeline-input-files/de/geomap/logs"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "WH_FTP_csv_file",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "WH_input_csv",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "ForEachIncominFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WH_input_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Uploaded Filenames').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remove last comma",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload-Data').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data').output.errors[0].Code",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-06-29T14:40:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/yanport-data-loader_manual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Knibber Research loader",
				"activities": [
					{
						"name": "Upload-Data-to-DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove last comma",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "fr/yanport/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/fr/yanport/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['programId']"
										},
										"sink": {
											"name": "programId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['externalProperties']"
										},
										"sink": {
											"name": "externalProperties",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['quality']['anomaly']['level']"
										},
										"sink": {
											"name": "quality_anomaly_level",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['quality']['anomaly']['causes']"
										},
										"sink": {
											"name": "quality_anomaly_causes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['quality']['anomaly']['value']"
										},
										"sink": {
											"name": "quality_anomaly_value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['investment']['rental']['monthlyPrice']"
										},
										"sink": {
											"name": "investment_rental_monthlyPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['investment']['rental']['yield']['gross']"
										},
										"sink": {
											"name": "investment_rental_yield_gross",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['features']['descriptive']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['descriptive']['pros']"
										},
										"sink": {
											"name": "pros",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['descriptive']['cons']"
										},
										"sink": {
											"name": "cons",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['descriptive']['generalState']"
										},
										"sink": {
											"name": "generalState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['descriptive']['equipments']['FURNITURE']"
										},
										"sink": {
											"name": "equipments_furniture",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['features']['descriptive']['services']"
										},
										"sink": {
											"name": "services",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['geometry']['surface']"
										},
										"sink": {
											"name": "surface",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['features']['geometry']['roomCount']"
										},
										"sink": {
											"name": "roomCount",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['geometry']['areas']"
										},
										"sink": {
											"name": "areas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['geometry']['floors']"
										},
										"sink": {
											"name": "floors",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['geometry']['floorCount']"
										},
										"sink": {
											"name": "floorCount",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['geometry']['areaCount']"
										},
										"sink": {
											"name": "areaCount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['construction']['newBuild']"
										},
										"sink": {
											"name": "construction_newBuild",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['features']['construction']['forBuild']"
										},
										"sink": {
											"name": "construction_forBuild",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['features']['construction']['year']"
										},
										"sink": {
											"name": "construction_year",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['construction']['urbanismRules']"
										},
										"sink": {
											"name": "construction_urbanismRules",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['heatingMode']"
										},
										"sink": {
											"name": "energy_heatingMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['heatingTypes']"
										},
										"sink": {
											"name": "energy_heatingTypes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['waterHeatingTypes']"
										},
										"sink": {
											"name": "energy_waterHeatingTypes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['diagnosisVersion']"
										},
										"sink": {
											"name": "energy_diagnosisVersion",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['consumption']"
										},
										"sink": {
											"name": "energy_consumption",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['consumptionLetter']"
										},
										"sink": {
											"name": "energy_consumptionLetter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['consumptionRange']['lowerEndpoint']"
										},
										"sink": {
											"name": "energy_consumptionRange_lowerEndpoint",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['consumptionRange']['upperEndpoint']"
										},
										"sink": {
											"name": "energy_consumptionRange_upperEndpoint",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['greenhouseGasConsumption']"
										},
										"sink": {
											"name": "energy_greenhouseGasConsumption",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['greenhouseGasConsumptionLetter']"
										},
										"sink": {
											"name": "energy_greenhouseGasConsumptionLetter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['greenhouseGasConsumptionRange']['lowerEndpoint']"
										},
										"sink": {
											"name": "energy_greenhouseGasConsumptionRange_lowerEndpoint",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['energy']['greenhouseGasConsumptionRange']['upperEndpoint']"
										},
										"sink": {
											"name": "energy_greenhouseGasConsumptionRange_upperEndpoint",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['features']['condominium']"
										},
										"sink": {
											"name": "condominium",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['features']['visual']['images']"
										},
										"sink": {
											"name": "visual_images"
										}
									},
									{
										"source": {
											"path": "$['features']['visual']['orientations']"
										},
										"sink": {
											"name": "visual_orientations"
										}
									},
									{
										"source": {
											"path": "$['features']['visual']['views']"
										},
										"sink": {
											"name": "visual_views"
										}
									},
									{
										"source": {
											"path": "$['features']['additionalFeatures']"
										},
										"sink": {
											"name": "additionalFeatures",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['marketing']['price']"
										},
										"sink": {
											"name": "price",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceEvents']"
										},
										"sink": {
											"name": "priceEvents",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['marketing']['publicationStartDate']"
										},
										"sink": {
											"name": "publicationStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['marketing']['publicationEndDate']"
										},
										"sink": {
											"name": "publicationEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['marketing']['exclusiveMandate']"
										},
										"sink": {
											"name": "exclusiveMandate",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['marketing']['rentalExpenses']"
										},
										"sink": {
											"name": "rentalExpenses",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['rentalExpensesIncluded']"
										},
										"sink": {
											"name": "rentalExpensesIncluded",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['marketing']['type']"
										},
										"sink": {
											"name": "marketing_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceM2']"
										},
										"sink": {
											"name": "priceM2",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceCC']"
										},
										"sink": {
											"name": "priceCC",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceHC']"
										},
										"sink": {
											"name": "priceHC",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['relevantPrice']"
										},
										"sink": {
											"name": "relevantPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceM2CC']"
										},
										"sink": {
											"name": "priceM2CC",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceM2HC']"
										},
										"sink": {
											"name": "priceM2HC",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['marketing']['publicationDays']"
										},
										"sink": {
											"name": "publicationDays",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['marketing']['active']"
										},
										"sink": {
											"name": "active",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceEventsCount']"
										},
										"sink": {
											"name": "priceEventsCount",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['marketing']['priceEventsRange']"
										},
										"sink": {
											"name": "priceEventsRange",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['cityId']"
										},
										"sink": {
											"name": "cityId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['quarterId']"
										},
										"sink": {
											"name": "quarterId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['irisIds']"
										},
										"sink": {
											"name": "irisIds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['parcelIds']"
										},
										"sink": {
											"name": "parcelIds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['agglomerationId']"
										},
										"sink": {
											"name": "agglomerationId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['street']"
										},
										"sink": {
											"name": "street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['zipCode']"
										},
										"sink": {
											"name": "zipCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['address']['deptCode']"
										},
										"sink": {
											"name": "deptCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['address']['location']['lat']"
										},
										"sink": {
											"name": "latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['address']['location']['lon']"
										},
										"sink": {
											"name": "longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['address']['formatted']"
										},
										"sink": {
											"name": "address_formatted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ads']"
										},
										"sink": {
											"name": "ads",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['creationDate']"
										},
										"sink": {
											"name": "creationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['updateDate']"
										},
										"sink": {
											"name": "updateDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['type']"
										},
										"sink": {
											"name": "dwelling_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "yanport_to_be_uplod_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Yanport_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "fr/yanport/to_upload",
									"wildcardFileName": "*.gz",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "yanport_to_be_upload_files_gz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "yanport_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "yanport_to_be_uplod_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Uploaded Filenames').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remove last comma",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"af": {
						"type": "String"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/yanport_to_be_uplod_folder')]",
				"[concat(variables('factoryId'), '/datasets/yanport_to_be_upload_files_gz')]",
				"[concat(variables('factoryId'), '/datasets/yanport_uploaded_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OV20')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "datapipeline_blob_storage",
								"type": "LinkedServiceReference"
							},
							"name": "ov20csv",
							"description": "Import OV20 csv"
						},
						{
							"linkedService": {
								"referenceName": "datapipeline_blob_storage",
								"type": "LinkedServiceReference"
							},
							"name": "ov15csv2",
							"description": "Import OV15 csv from datapipeline_blob_storage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSql_Kadaster_Input_Table",
								"type": "DatasetReference"
							},
							"name": "KadasterSQLTable",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorageLogs",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1",
							"description": "Select necessary columns only"
						},
						{
							"name": "CreateColumn",
							"description": "Create House_number_add column"
						},
						{
							"name": "WonenDwellingType",
							"description": "Filtering WONEN assets"
						},
						{
							"name": "union1"
						},
						{
							"name": "window1"
						},
						{
							"name": "EditColumns",
							"description": "Edit coordinates, add Source column"
						},
						{
							"name": "select3",
							"description": "Select necessary columns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OVER_BEW_K as string,",
						"          STUK_ONTV_DATUM as string,",
						"          OVER_STUK as string,",
						"          VV_NAAM as string,",
						"          VV_WOONPLAATS as string,",
						"          NNP_VV_K as string,",
						"          VK_NAAM as string,",
						"          VK_WOONPLAATS as string,",
						"          NNP_VK_K as string,",
						"          OBJE_MUT_SRT_K as string,",
						"          IND_FAM_TRANS as string,",
						"          OBJE_OBJEKT as string,",
						"          KAD_GEM as string,",
						"          SECTIE as string,",
						"          PERCEELNR as string,",
						"          INDEXLT as string,",
						"          INDEXNR as string,",
						"          OBJE_GROOTTE as integer,",
						"          OBJE_KOOP_SOM as integer,",
						"          OBJE_IND_MEER_O_G as string,",
						"          OBJE_BURG_GEM_NR as string,",
						"          OBJE_BURG_GEM_NAAM as string,",
						"          OBJE_KULT_ONGEB_K as string,",
						"          ZAKR_ZR_K as string,",
						"          OBJB_OBJ_BEL_K as string,",
						"          OBJE_X_COORD as float,",
						"          OBJE_Y_COORD as float,",
						"          OBJE_KULT_TEXT as string,",
						"          OBJA_KULT_GEB_K as string,",
						"          OBJA_PLTS_NAAM as string,",
						"          OBJA_STRAAT as string,",
						"          OBJA_HUIS_NR as integer,",
						"          OBJA_HUIS_LR as string,",
						"          OBJA_TOEVOEGING as string,",
						"          OBJA_PTT_K as string,",
						"          PHT as string,",
						"          OVER_ID as string,",
						"          BAG_ID as string",
						"     ),",
						"     useSchema: true,",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     limit: 1000,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     container: 'data-pipeline-input-files',",
						"     columnDelimiter: ';',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     wildcardPaths:['nl/kadaster/to_upload/Catella_OV20*.csv']) ~> ov20csv",
						"source(output(",
						"          DATUM as string,",
						"          PTT_K as string,",
						"          PLTSNAAM as string,",
						"          STRAAT as string,",
						"          HUISNR as integer,",
						"          TOEV as string,",
						"          WONINGTYPE as string,",
						"          X_COORD as float,",
						"          Y_COORD as float,",
						"          KULT_GEB_K as string,",
						"          GROOTTE as integer,",
						"          K_SOM as integer,",
						"          IND_M_O_G as string,",
						"          ZAK_R as string,",
						"          KULT_TEKST as string,",
						"          OBJ_BEL as string,",
						"          ERFDIENSTBH as string,",
						"          KULT_GEB_K1 as string,",
						"          KULT_ONGEB_K1 as string,",
						"          INDEX_LR1 as string,",
						"          GROOTTE1 as string,",
						"          PTT_K1 as string,",
						"          PLTSNAAM1 as string,",
						"          STRAAT1 as string,",
						"          HUISNR1 as string,",
						"          TOEV1 as string,",
						"          KULT_GEB_K2 as string,",
						"          KULT_ONGEB_K2 as string,",
						"          INDEX_LR2 as string,",
						"          GROOTTE2 as string,",
						"          PTT_K2 as string,",
						"          PLTSNAAM2 as string,",
						"          STRAAT2 as string,",
						"          HUISNR2 as string,",
						"          TOEV2 as string,",
						"          KULT_GEB_K3 as string,",
						"          KULT_ONGEB_K3 as string,",
						"          INDEX_LR3 as string,",
						"          GROOTTE3 as string,",
						"          PTT_K3 as string,",
						"          PLTSNAAM3 as string,",
						"          STRAAT3 as string,",
						"          HUISNR3 as string,",
						"          TOEV3 as string,",
						"          KULT_GEB_K4 as string,",
						"          KULT_ONGEB_K4 as string,",
						"          INDEX_LR4 as string,",
						"          GROOTTE4 as string,",
						"          PTT_K4 as string,",
						"          PLTSNAAM4 as string,",
						"          STRAAT4 as string,",
						"          HUISNR4 as string,",
						"          TOEV4 as string,",
						"          IND_HUURDER as string,",
						"          BEWARINGKODE as string,",
						"          STUK_ID as string,",
						"          MUT_SRT as string,",
						"          BURGEM_NR as string,",
						"          OBJECT as string,",
						"          NNP_1E_VERKR as string,",
						"          NNP_1E_VERVR as string,",
						"          FAM_TRANS as string,",
						"          PHT as string,",
						"          KAD_GEM as string,",
						"          SECTIE as string,",
						"          BAG_ID as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 1000,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     container: 'data-pipeline-input-files',",
						"     columnDelimiter: ';',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     wildcardPaths:['nl/kadaster/to_upload/Catella_OV15_*.csv']) ~> ov15csv2",
						"CreateColumn select(mapColumn(",
						"          Date = STUK_ONTV_DATUM,",
						"          Area = OBJE_GROOTTE,",
						"          Price = OBJE_KOOP_SOM,",
						"          Latitude = OBJE_X_COORD,",
						"          Longitude = OBJE_Y_COORD,",
						"          Object_description = OBJE_KULT_TEXT,",
						"          Object = OBJE_OBJEKT,",
						"          City = OBJA_PLTS_NAAM,",
						"          Street = OBJA_STRAAT,",
						"          House_number = OBJA_HUIS_NR,",
						"          House_number_add,",
						"          Postcode = OBJA_PTT_K,",
						"          BAG_ID,",
						"          Source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"WonenDwellingType derive(House_number_add = iifNull(OBJA_TOEVOEGING, OBJA_HUIS_LR),",
						"          OBJE_X_COORD = OBJE_X_COORD / 10000,",
						"          OBJE_Y_COORD = OBJE_Y_COORD / 10000,",
						"          Source = \"OV20\") ~> CreateColumn",
						"ov20csv filter(regexMatch(OBJE_KULT_TEXT, 'WONEN')) ~> WonenDwellingType",
						"select1, select3 union(byName: true)~> union1",
						"union1 window(over(BAG_ID),",
						"     asc(Area, false),",
						"     BAG_ID_rank = rank()) ~> window1",
						"ov15csv2 derive(X_COORD = X_COORD / 10000,",
						"          Y_COORD = Y_COORD / 10000,",
						"          Source = \"OV15\") ~> EditColumns",
						"EditColumns select(mapColumn(",
						"          Date = DATUM,",
						"          Area = GROOTTE,",
						"          Price = K_SOM,",
						"          Latitude = X_COORD,",
						"          Longitude = Y_COORD,",
						"          Object_description = KULT_TEKST,",
						"          Object = OBJECT,",
						"          City = PLTSNAAM,",
						"          Street = STRAAT,",
						"          House_number = HUISNR,",
						"          House_number_add = TOEV,",
						"          Postcode = PTT_K,",
						"          BAG_ID,",
						"          Source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"window1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          OVER_BEW_K as string,",
						"          STUK_ONTV_DATUM as string,",
						"          OVER_STUK as string,",
						"          VV_NAAM as string,",
						"          VV_WOONPLAATS as string,",
						"          NNP_VV_K as string,",
						"          VK_NAAM as string,",
						"          VK_WOONPLAATS as string,",
						"          NNP_VK_K as string,",
						"          OBJE_MUT_SRT_K as string,",
						"          IND_FAM_TRANS as string,",
						"          OBJE_OBJEKT as string,",
						"          KAD_GEM as string,",
						"          SECTIE as string,",
						"          PERCEELNR as string,",
						"          INDEXLT as string,",
						"          INDEXNR as string,",
						"          OBJE_GROOTTE as string,",
						"          OBJE_KOOP_SOM as string,",
						"          OBJE_IND_MEER_O_G as string,",
						"          OBJE_BURG_GEM_NR as string,",
						"          OBJE_BURG_GEM_NAAM as string,",
						"          OBJE_KULT_ONGEB_K as string,",
						"          ZAKR_ZR_K as string,",
						"          OBJB_OBJ_BEL_K as string,",
						"          OBJE_X_COORD as string,",
						"          OBJE_Y_COORD as string,",
						"          OBJE_KULT_TEXT as string,",
						"          OBJA_KULT_GEB_K as string,",
						"          OBJA_PLTS_NAAM as string,",
						"          OBJA_STRAAT as string,",
						"          OBJA_HUIS_NR as string,",
						"          OBJA_HUIS_LR as string,",
						"          OBJA_TOEVOEGING as string,",
						"          OBJA_PTT_K as string,",
						"          PHT as string,",
						"          OVER_ID as string,",
						"          BAG_ID as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'data-pipeline-input-files',",
						"     rejectedData_folderPath: 'nl/kadaster/logs',",
						"     transactionCommit: 'batch',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          AanmeldDatum = Date,",
						"          Area,",
						"          Price,",
						"          Latitude,",
						"          Longitude,",
						"          Object_description,",
						"          City,",
						"          Street,",
						"          HouseNumber = House_number,",
						"          HouseNumberAddition = House_number_add,",
						"          ZipCode = Postcode,",
						"          BAG_ID,",
						"          BAG_ID_rank,",
						"          Object,",
						"          Source",
						"     )) ~> KadasterSQLTable"
					]
				}
			},
			"dependsOn": []
		}
	]
}