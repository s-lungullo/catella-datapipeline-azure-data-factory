{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pipeline-data-factory-instance"
		},
		"AzureBlobStorageLogs_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageLogs'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"Catella_DataPipeline_AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Catella_DataPipeline_AzureDataLakeStorage'"
		},
		"Catella_DataPipeline_AzureSQLStorage_Test_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Catella_DataPipeline_AzureSQLStorage_Test'"
		},
		"DataFactoryBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataFactoryBlobStorage'"
		},
		"DataPipelineSQLDev_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataPipelineSQLDev'"
		},
		"DataPipelineSQLTest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataPipelineSQLTest'"
		},
		"GeoMapFtpServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'GeoMapFtpServer'"
		},
		"WHSftpServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WHSftpServer'"
		},
		"catella_hot_storage_accept_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'catella_hot_storage_accept'"
		},
		"datapipeline_blob_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'datapipeline_blob_storage'"
		},
		"datapipeline_dev_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'datapipeline_dev_db'"
		},
		"datapipeline_sql_server_test_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'datapipeline_sql_server_test'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"Catella_DataPipeline_AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://catellahotstorageaccept.dfs.core.windows.net/"
		},
		"GeoMapFtpServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "ftp://ftp.geomap.immo"
		},
		"GeoMapFtpServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "teamproqftp8"
		},
		"WHSftpServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "sftp.watsonholmes.nl"
		},
		"WHSftpServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "catella-netherlands@watsonholmes.local"
		},
		"catella_hot_storage_accept_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://catellahotstorageaccept.dfs.core.windows.net/"
		},
		"trigger_when_new_file_added_geomap_blob_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ede35011-9140-4789-8f52-93ff0cb2098c/resourceGroups/DataPipeline/providers/Microsoft.Storage/storageAccounts/catellahotstorageaccept"
		},
		"trigger_when_new_files_added_kadaster_blob_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ede35011-9140-4789-8f52-93ff0cb2098c/resourceGroups/DataPipeline/providers/Microsoft.Storage/storageAccounts/catellahotstorageaccept"
		},
		"catella_datapipeline_azuresql_server_private_endpoint_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/ede35011-9140-4789-8f52-93ff0cb2098c/resourceGroups/DataPipeline/providers/Microsoft.Sql/servers/catella-datapipeline"
		},
		"catella_datapipeline_azuresql_server_private_endpoint_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"catella_datapipeline_azuresql_server_private_endpoint_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"catella-datapipeline.database.windows.net"
			]
		},
		"catellahotstorageaccept_privateendpoint_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/ede35011-9140-4789-8f52-93ff0cb2098c/resourceGroups/DataPipeline/providers/Microsoft.Storage/storageAccounts/catellahotstorageaccept"
		},
		"catellahotstorageaccept_privateendpoint_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"catellahotstorageaccept_privateendpoint_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"catellahotstorageaccept.blob.core.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_GeoMapBigFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_taf",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "data/de/geomap-raw/results_2020-01-01_2020-04-01.json"
							},
							{
								"name": "Destination",
								"value": "GeoMapTest.results_2020-01-01_2020-04-01"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchTimeout": "10:00:00",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "DataFactoryBlobStorage",
										"type": "LinkedServiceReference"
									},
									"path": "logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "RentOrPurchase",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['ort']"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['landName']"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLongitude']"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLatitude']"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['bundesland']"
										},
										"sink": {
											"name": "Bundesland",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['land']"
										},
										"sink": {
											"name": "District",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['plz']"
										},
										"sink": {
											"name": "PostCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['strasse']"
										},
										"sink": {
											"name": "Street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['stadtteilOrtsteil']"
										},
										"sink": {
											"name": "stadtteilOrtsteil",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter'][0]['name']"
										},
										"sink": {
											"name": "Broker1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter'][0]['anbieterGewerblich']"
										},
										"sink": {
											"name": "anbieterGewerblich",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['titel']"
										},
										"sink": {
											"name": "Titel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['onlineSeitLautPortalText']"
										},
										"sink": {
											"name": "OnlineSince",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
										},
										"sink": {
											"name": "DetailURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['onlineSeitLautPortal']"
										},
										"sink": {
											"name": "OnlineSince",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['BESCHREIBUNG']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['LAGE']"
										},
										"sink": {
											"name": "DescriptionLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['SONSTIGES']"
										},
										"sink": {
											"name": "DescriptionOther",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['AUSSTATTUNG']"
										},
										"sink": {
											"name": "DescriptionFurnishing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['verfugbarAbText']"
										},
										"sink": {
											"name": "Availability",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['medien'][0]['mediaArt']"
										},
										"sink": {
											"name": "TypeOfImage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['medien'][0]['originUrl']"
										},
										"sink": {
											"name": "ImageURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['medien'][0]['mediaTyp'][0]"
										},
										"sink": {
											"name": "TypeOfImage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['verfugbarAb']"
										},
										"sink": {
											"name": "AvailabilityText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
										},
										"sink": {
											"name": "NumberOfRooms",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
										},
										"sink": {
											"name": "NumberOfBathroom",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
										},
										"sink": {
											"name": "NumberOfBedroom",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
										},
										"sink": {
											"name": "FloorNumber",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Wohnflaeche']"
										},
										"sink": {
											"name": "LivingArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Grundstuecksflaeche']"
										},
										"sink": {
											"name": "LandArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sonstiges'][0]"
										},
										"sink": {
											"name": "OtherParticularities",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['heizungsart'][0]"
										},
										"sink": {
											"name": "TypeOfHeating",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etageText']"
										},
										"sink": {
											"name": "MetaFloorText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['stellplatz'][0]"
										},
										"sink": {
											"name": "MetaParkingSpace",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieträger'][0]"
										},
										"sink": {
											"name": "EnergySource",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
										},
										"sink": {
											"name": "ObjectProperties_Sanitiezed",
											"type": "Byte"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisTyp']"
										},
										"sink": {
											"name": "EnergyCertificateType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisInfo']"
										},
										"sink": {
											"name": "EnergyCertificateInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
										},
										"sink": {
											"name": "EnergyClass",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
										},
										"sink": {
											"name": "EnergyValue",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasseText']"
										},
										"sink": {
											"name": "EnergyLabelText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etage']"
										},
										"sink": {
											"name": "FloorNumber",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['lageEinheit'][0]"
										},
										"sink": {
											"name": "UnitLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['küche'][0]"
										},
										"sink": {
											"name": "KitchenType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['balkonTerrasse'][0]"
										},
										"sink": {
											"name": "BalconyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
										},
										"sink": {
											"name": "RenovationYear",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
										},
										"sink": {
											"name": "ConstructioYear",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['keller'][0]"
										},
										"sink": {
											"name": "ObjectPropertiesKeller",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['aufzug'][0]"
										},
										"sink": {
											"name": "ObjectPropertiesElevator",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sanitär'][0]"
										},
										"sink": {
											"name": "ObjectPropertiesCV",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['möbliert'][0]"
										},
										"sink": {
											"name": "Furnishing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektArt']"
										},
										"sink": {
											"name": "PropertyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisTexte']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "MetaMieteProMonatOhneNebenkosten",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisTexte']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "MetaMieteProMonatMitNebenkosten",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisTexte']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "MetaNebenkostenProMonat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisTexte']['MietKaution']"
										},
										"sink": {
											"name": "MetaMietKaution",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisTexte']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "MetaHeizkostenProMonat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisTexte']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "MetaMieteProMonatProStellplatz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "RentPerMonthWithoutAdditionalCosts",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "RentPerMonthWithAdditionalCosts",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "ExtraCostsPerMonth",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "RentPerMonthPerPitch",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
										},
										"sink": {
											"name": "RentalDeposit",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "HeatingCostsPerMonth",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
										},
										"sink": {
											"name": "IncludingHeatingCosts",
											"type": "Byte"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ort']"
										},
										"sink": {
											"name": "ORT",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreisId']"
										},
										"sink": {
											"name": "KreisID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreis']"
										},
										"sink": {
											"name": "Kreis",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['landId']"
										},
										"sink": {
											"name": "CountryID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['parentIds'][0]"
										},
										"sink": {
											"name": "LocationParedID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['accuracy']"
										},
										"sink": {
											"name": "LocationAccuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['location']['lon']"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['location']['lat']"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ortId']"
										},
										"sink": {
											"name": "OrtId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['plz']"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteil']"
										},
										"sink": {
											"name": "Stadtteil",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirk']"
										},
										"sink": {
											"name": "Stadtbezirk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['strasse']"
										},
										"sink": {
											"name": "Street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteilId']"
										},
										"sink": {
											"name": "stadtteilId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['hausnummer']"
										},
										"sink": {
											"name": "HouseNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirkId']"
										},
										"sink": {
											"name": "LocationId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTyp']"
										},
										"sink": {
											"name": "PropertyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTypText']"
										},
										"sink": {
											"name": "MetaObjectTypeText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSeenDay']"
										},
										"sink": {
											"name": "FirstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['daysOnline']"
										},
										"sink": {
											"name": "DaysOnline",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['preisProQm']"
										},
										"sink": {
											"name": "PricePerSQM",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['onlineRanges'][0]['lt']"
										},
										"sink": {
											"name": "OnlineRange_LT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['onlineRanges'][0]['gte']"
										},
										"sink": {
											"name": "OnlineRange_GTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['crawlerIdsEntryIds'][0]['firstSeenDay']"
										},
										"sink": {
											"name": "MetaFirstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['crawlerIdsEntryIds'][0]['portalUrl']"
										},
										"sink": {
											"name": "MetaDetailUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerIdsEntryIds'][0]['state']"
										},
										"sink": {
											"name": "MetaStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerIdsEntryIds'][0]['lastUpdatedDay']"
										},
										"sink": {
											"name": "LastUpdatedDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['eventDay']"
										},
										"sink": {
											"name": "ScrapingDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['preis']"
										},
										"sink": {
											"name": "AskingPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['online']"
										},
										"sink": {
											"name": "IsOnline",
											"type": "Byte"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastSeenDay']"
										},
										"sink": {
											"name": "LastSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['nutzflaeche']"
										},
										"sink": {
											"name": "UsableArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "GeoMapID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nebenkosten']['Nebenkosten']"
										},
										"sink": {
											"name": "ExtraCosts",
											"type": "Double"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_taf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_taf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T16:03:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_taf')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_taf')]",
				"[concat(variables('factoryId'), '/linkedServices/DataFactoryBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kadaster_data_loader_data_flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Loading Kadaster data form Azure blob storage: data-pipeline-input-files/nl/kadaster to Azure database: datapipeline-dev/dbo.KadasterInput",
				"activities": [
					{
						"name": "Upload data",
						"description": "Processing OV15 and OV20 Kadaster files",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "OV20",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ov20csv": {},
									"ov15csv2": {},
									"KadasterSQLTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Copy_files_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV20_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Kadaster_archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/OV20')]",
				"[concat(variables('factoryId'), '/datasets/OV20_Input_files')]",
				"[concat(variables('factoryId'), '/datasets/Kadaster_archive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kadaster_loader_OV15')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upload OV15 data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV15*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/nl/kadaster/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DATUM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WONINGTYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WONINGTYPE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "X_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "X_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Y_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Y_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "K_SOM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "K_SOM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IND_M_O_G",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IND_M_O_G",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ZAK_R",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZAK_R",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_TEKST",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_TEKST",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJ_BEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJ_BEL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ERFDIENSTBH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ERFDIENSTBH",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_GEB_K4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_GEB_K4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KULT_ONGEB_K4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KULT_ONGEB_K4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEX_LR4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEX_LR4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GROOTTE4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROOTTE4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PTT_K4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PTT_K4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PLTSNAAM4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PLTSNAAM4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRAAT4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRAAT4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HUISNR4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HUISNR4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOEV4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOEV4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IND_HUURDER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IND_HUURDER",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BEWARINGKODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BEWARINGKODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STUK_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STUK_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MUT_SRT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MUT_SRT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BURGEM_NR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BURGEM_NR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJECT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJECT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_1E_VERKR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_1E_VERKR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_1E_VERVR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_1E_VERVR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FAM_TRANS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FAM_TRANS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PHT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PHT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV15_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Kadaster_OV15_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy OV15 from staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV15*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV15_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Kadaster_archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete_from_toUpload_folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file_to_archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "Catella_OV15*.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy OV15 from staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV15 data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_copykadaster_OV15data_from_staging]"
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OV15_Input_files')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_Kadaster_OV15_Table')]",
				"[concat(variables('factoryId'), '/datasets/Kadaster_archive')]",
				"[concat(variables('factoryId'), '/datasets/kadaster_to_be_uploaded')]",
				"[concat(variables('factoryId'), '/linkedServices/DataPipelineSQLDev')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kadaster_loader_OV20')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upload OV20 data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV20*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/nl/kadaster/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OVER_BEW_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OVER_BEW_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STUK_ONTV_DATUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STUK_ONTV_DATUM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OVER_STUK",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OVER_STUK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VV_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VV_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VV_WOONPLAATS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VV_WOONPLAATS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_VV_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_VV_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VK_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VK_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VK_WOONPLAATS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VK_WOONPLAATS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NNP_VK_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NNP_VK_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IND_FAM_TRANS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IND_FAM_TRANS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_OBJEKT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_OBJEKT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KAD_GEM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SECTIE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PERCEELNR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PERCEELNR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEXLT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEXLT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INDEXNR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INDEXNR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_GROOTTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_GROOTTE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_KOOP_SOM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_KOOP_SOM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ZAKR_ZR_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZAKR_ZR_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_X_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_X_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_Y_COORD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_Y_COORD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_TEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJE_KULT_TEXT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_STRAAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_STRAAT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_NR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_NR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_LR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_LR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_TOEVOEGING",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_TOEVOEGING",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OBJA_PTT_K",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OBJA_PTT_K",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PHT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PHT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OVER_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OVER_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BAG_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV20_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Kadaster_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy OV20 from staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/kadaster/to_upload",
									"wildcardFileName": "Catella_OV20*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OV20_Input_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Kadaster_archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete_from_toUpload_folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file_to_archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "Catella_OV20*.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy OV20 from staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload OV20 data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_copykadaster_OV20data_from_staging]"
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OV20_Input_files')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_Kadaster_Input_Table')]",
				"[concat(variables('factoryId'), '/datasets/Kadaster_archive')]",
				"[concat(variables('factoryId'), '/datasets/kadaster_to_be_uploaded')]",
				"[concat(variables('factoryId'), '/linkedServices/DataPipelineSQLDev')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/debug')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "reset-to-be-uploaded-folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "get-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "reset-to-be-uploaded-folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "zip_geomap_ftp_server",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FtpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"useBinaryTransfer": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "logs/geomapupload"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "zip_geomap_ftp_server",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "geomap_to_be_uploaded_zip_folder",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "old_geomap_data_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_to_be_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "reset-to-be-uploaded-folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy-files-to-archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorageLogs",
									"type": "LinkedServiceReference"
								},
								"path": "logs/geomapupload"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "copy-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "nl/kadaster/to_upload/ov20",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kadaster_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T14:49:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/geomap_uploaded_zip_folder')]",
				"[concat(variables('factoryId'), '/datasets/zip_geomap_ftp_server')]",
				"[concat(variables('factoryId'), '/datasets/old_geomap_data_zip')]",
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_zip_folder')]",
				"[concat(variables('factoryId'), '/datasets/kadaster_to_be_uploaded')]",
				"[concat(variables('factoryId'), '/datasets/kadaster_uploaded')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap-data-loader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to laod all geomap files to the database",
				"activities": [
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If Clean Upload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "logs/geomapupload"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "RentOrSale",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['land']"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['titel']"
										},
										"sink": {
											"name": "Titel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
										},
										"sink": {
											"name": "DetailedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['BESCHREIBUNG']"
										},
										"sink": {
											"name": "Description_Main",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['LAGE']"
										},
										"sink": {
											"name": "Description_Location",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['SONSTIGES']"
										},
										"sink": {
											"name": "Description_Other",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['AUSSTATTUNG']"
										},
										"sink": {
											"name": "Description_Furnishing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['verfugbarAb']"
										},
										"sink": {
											"name": "AvailableFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
										},
										"sink": {
											"name": "NumberOfRooms",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
										},
										"sink": {
											"name": "NumberOfBathrooms",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
										},
										"sink": {
											"name": "NumberOfBedRooms",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
										},
										"sink": {
											"name": "NumberOfFloors",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Wohnflaeche']"
										},
										"sink": {
											"name": "LivingArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Grundstuecksflaeche']"
										},
										"sink": {
											"name": "LandArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
										},
										"sink": {
											"name": "IsSanitized",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
										},
										"sink": {
											"name": "EnergyLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
										},
										"sink": {
											"name": "EnergyValue",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etage']"
										},
										"sink": {
											"name": "Floor",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
										},
										"sink": {
											"name": "RenovationYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
										},
										"sink": {
											"name": "ConstructionYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektArt']"
										},
										"sink": {
											"name": "PropertyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "RentPerMonthNoAdditionalCosts",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "RentPerMonthWithAdditionalCosts",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "AdditionalCostsPerMonth",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "RentPerMonthPerParking",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
										},
										"sink": {
											"name": "RentalDeposit",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "HeatingCostsPerMonth",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
										},
										"sink": {
											"name": "HeatingCostsIncludedInAdditionalCosts",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ort']"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreis']"
										},
										"sink": {
											"name": "District",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['accuracy']"
										},
										"sink": {
											"name": "LocationAccuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['location']['lon']"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['location']['lat']"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['plz']"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteil']"
										},
										"sink": {
											"name": "CityDistrict2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirk']"
										},
										"sink": {
											"name": "CityDistrict1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['strasse']"
										},
										"sink": {
											"name": "Street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['hausnummer']"
										},
										"sink": {
											"name": "HouseNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTyp']"
										},
										"sink": {
											"name": "DwellingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter']"
										},
										"sink": {
											"name": "Brokers_JsonArray",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSeenDay']"
										},
										"sink": {
											"name": "FirstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['daysOnline']"
										},
										"sink": {
											"name": "DaysOnline",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['preisProQm']"
										},
										"sink": {
											"name": "PricePerSqm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['eventDay']"
										},
										"sink": {
											"name": "ScrapingDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['preis']"
										},
										"sink": {
											"name": "AskingPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['online']"
										},
										"sink": {
											"name": "IsOnline",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastSeenDay']"
										},
										"sink": {
											"name": "LastSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['nutzflaeche']"
										},
										"sink": {
											"name": "UsableArea",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "GeomapId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataPipelineTest_GeomapRawInput",
								"type": "DatasetReference",
								"parameters": {
									"sinkTableName": "GeoMapRawImport"
								}
							}
						]
					},
					{
						"name": "If Clean Upload",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEachIncominFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('varCleanUpload')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Drop and recreate GeomapRawInputTable_copy1_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('varStoredProcedureForTableReset')",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "DataPipelineSQLTest",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SetCleanUploadToFalse_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Drop and recreate GeomapRawInputTable_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varCleanUpload",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "move-files-from archive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetCleanUploadToFalse_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "de/geomap/uploaded",
												"wildcardFileName": "*.zip",
												"deleteFilesAfterCompletion": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "geomap_uploaded_files_zip",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "geomap_uploaded_zip_folder",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "SP_Pipeline_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_LogTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"rowsCopied": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataRead": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsRead}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"copyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"effectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].start}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_End_Time": {
									"value": {
										"value": "@{utcnow()}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_queuingDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.queuingDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_transferDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_Pipeline_Error",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_ErrorsTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"EffectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorCode": {
									"value": {
										"value": "@{activity('Upload-Data').error.errorCode}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorDescription": {
									"value": {
										"value": "@{activity('Upload-Data').error.message}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorLoggedTIme": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "String"
								},
								"FailureType": {
									"value": {
										"value": "@concat(activity('Upload-Data').error.message,'failureType:',activity('Upload-Data').error.failureType)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PipelineThrow",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "SP_Pipeline_Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data').error.message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data').error.errorCode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "get-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "zip_geomap_ftp_server",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FtpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"useBinaryTransfer": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "logs/geomapupload"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "zip_geomap_ftp_server",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "geomap_to_be_uploaded_zip_folder",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"varCleanUpload": {
						"type": "Boolean",
						"defaultValue": false
					},
					"varStoredProcedureForTableReset": {
						"type": "String",
						"defaultValue": "[[dbo].[sp_dropand_recreate_geomap_raw_input_table]"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T17:43:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_folder')]",
				"[concat(variables('factoryId'), '/datasets/DataPipelineTest_GeomapRawInput')]",
				"[concat(variables('factoryId'), '/linkedServices/DataPipelineSQLTest')]",
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_files_zip')]",
				"[concat(variables('factoryId'), '/datasets/geomap_uploaded_zip_folder')]",
				"[concat(variables('factoryId'), '/datasets/zip_geomap_ftp_server')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]",
				"[concat(variables('factoryId'), '/datasets/geomap_uploaded_files_zip')]",
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_zip_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap-data-loader_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to load all geomap files to the database",
				"activities": [
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "get-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "zip_geomap_ftp_server",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FtpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"useBinaryTransfer": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "data-pipeline-input-files/de/geomap/logs"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "zip_geomap_ftp_server",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "geomap_to_be_uploaded_zip_folder",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Upload-Data-to-DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEachIncominFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/de/geomap/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "kaufMiete",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLongitude']"
										},
										"sink": {
											"name": "geoLongitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLatitude']"
										},
										"sink": {
											"name": "geoLatitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['land']"
										},
										"sink": {
											"name": "land",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTyp']"
										},
										"sink": {
											"name": "objektTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter']"
										},
										"sink": {
											"name": "anbieter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['titel']"
										},
										"sink": {
											"name": "titel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
										},
										"sink": {
											"name": "portalUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTypText']"
										},
										"sink": {
											"name": "objektTypText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
										},
										"sink": {
											"name": "saniert",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['heizungsart']"
										},
										"sink": {
											"name": "heizungsart",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sanitär']"
										},
										"sink": {
											"name": "sanitar",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisTyp']"
										},
										"sink": {
											"name": "ausweisTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisInfo']"
										},
										"sink": {
											"name": "ausweisInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
										},
										"sink": {
											"name": "KennwertKlasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
										},
										"sink": {
											"name": "kennwert",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Grundstuecksflaeche']"
										},
										"sink": {
											"name": "Grundstuecksflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Wohnflaeche']"
										},
										"sink": {
											"name": "Wohnflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Nutzflaeche']"
										},
										"sink": {
											"name": "Nutzflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['zustand']"
										},
										"sink": {
											"name": "zustand",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['ausstattungsQualität']"
										},
										"sink": {
											"name": "ausstattungsQualitat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etage']"
										},
										"sink": {
											"name": "etage",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
										},
										"sink": {
											"name": "ZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
										},
										"sink": {
											"name": "ETAGEN",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
										},
										"sink": {
											"name": "BADEZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
										},
										"sink": {
											"name": "SCHLAFZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['STELLPLAETZE']"
										},
										"sink": {
											"name": "STELLPLAETZE",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
										},
										"sink": {
											"name": "BAUJAHR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
										},
										"sink": {
											"name": "SANIERUNG",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['küche']"
										},
										"sink": {
											"name": "kuche",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['balkonTerrasse']"
										},
										"sink": {
											"name": "balkonTerrasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['keller']"
										},
										"sink": {
											"name": "keller",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['kommunikation']"
										},
										"sink": {
											"name": "kommunikation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['boden']"
										},
										"sink": {
											"name": "boden",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieträger']"
										},
										"sink": {
											"name": "energietrager",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['aufzug']"
										},
										"sink": {
											"name": "aufzug",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['stellplatz']"
										},
										"sink": {
											"name": "stellplatz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['lageEinheit']"
										},
										"sink": {
											"name": "lageEinheit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sonstiges']"
										},
										"sink": {
											"name": "sonstiges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektArt']"
										},
										"sink": {
											"name": "objektArt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['provisionsfrei']"
										},
										"sink": {
											"name": "provisionsfrei",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
										},
										"sink": {
											"name": "heizkostenInNebenkostenEnthalten",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['currency']"
										},
										"sink": {
											"name": "currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatOhneNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatMitNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "NebenkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
										},
										"sink": {
											"name": "MietKaution",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "HeizkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "MieteProMonatProStellplatz",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['Kaufpreis']"
										},
										"sink": {
											"name": "Kaufpreis",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HausgeldProMonat']"
										},
										"sink": {
											"name": "HausgeldProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteil']"
										},
										"sink": {
											"name": "stadtteil",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirk']"
										},
										"sink": {
											"name": "stadtbezirk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreis']"
										},
										"sink": {
											"name": "kreis",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['accuracy']"
										},
										"sink": {
											"name": "accuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ort']"
										},
										"sink": {
											"name": "ort",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['bundesland']"
										},
										"sink": {
											"name": "bundesland",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['plz']"
										},
										"sink": {
											"name": "plz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['strasse']"
										},
										"sink": {
											"name": "strasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['hausnummer']"
										},
										"sink": {
											"name": "hausnummer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSeenDay']"
										},
										"sink": {
											"name": "firstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['daysOnline']"
										},
										"sink": {
											"name": "daysOnline",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['preisProQm']"
										},
										"sink": {
											"name": "preisProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['onlineRanges']"
										},
										"sink": {
											"name": "onlineRanges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteProQm']"
										},
										"sink": {
											"name": "marktmieteProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteGebiet']"
										},
										"sink": {
											"name": "marktmieteGebiet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeAvg']"
										},
										"sink": {
											"name": "renditeAvg",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeQuelle']"
										},
										"sink": {
											"name": "renditeQuelle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktRendite']"
										},
										"sink": {
											"name": "marktRendite",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['lt']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_lt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['gte']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_gte",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['anzahlAngeboteMarktmiete']"
										},
										"sink": {
											"name": "anzahlAngeboteMarktmiete",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['eventDay']"
										},
										"sink": {
											"name": "eventDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['online']"
										},
										"sink": {
											"name": "online",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['lastOfflineDay']"
										},
										"sink": {
											"name": "lastOfflineDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['lastSeenDay']"
										},
										"sink": {
											"name": "lastSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "groupId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Geomap_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_files_zip')]",
				"[concat(variables('factoryId'), '/datasets/geomap_uploaded_zip_folder')]",
				"[concat(variables('factoryId'), '/datasets/zip_geomap_ftp_server')]",
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_folder')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_Geomap_Input_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]",
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_zip_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap-data-loader_2_manual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to load all geomap files to the database",
				"activities": [
					{
						"name": "Upload-Data-to-DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set filenames string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/de/geomap/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['crawlerObject']['kaufMiete']"
										},
										"sink": {
											"name": "kaufMiete",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLongitude']"
										},
										"sink": {
											"name": "geoLongitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['geoLatitude']"
										},
										"sink": {
											"name": "geoLatitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['lage']['land']"
										},
										"sink": {
											"name": "land",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTyp']"
										},
										"sink": {
											"name": "objektTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['anbieter']"
										},
										"sink": {
											"name": "anbieter",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['titel']"
										},
										"sink": {
											"name": "titel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
										},
										"sink": {
											"name": "portalUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektTypText']"
										},
										"sink": {
											"name": "objektTypText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
										},
										"sink": {
											"name": "saniert",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['heizungsart']"
										},
										"sink": {
											"name": "heizungsart",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sanitär']"
										},
										"sink": {
											"name": "sanitar",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisTyp']"
										},
										"sink": {
											"name": "ausweisTyp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['ausweisInfo']"
										},
										"sink": {
											"name": "ausweisInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
										},
										"sink": {
											"name": "KennwertKlasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
										},
										"sink": {
											"name": "kennwert",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Grundstuecksflaeche']"
										},
										"sink": {
											"name": "Grundstuecksflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Wohnflaeche']"
										},
										"sink": {
											"name": "Wohnflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['flächen']['flächeValues']['Nutzflaeche']"
										},
										"sink": {
											"name": "Nutzflaeche",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['zustand']"
										},
										"sink": {
											"name": "zustand",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['ausstattungsQualität']"
										},
										"sink": {
											"name": "ausstattungsQualitat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['etage']"
										},
										"sink": {
											"name": "etage",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
										},
										"sink": {
											"name": "ZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
										},
										"sink": {
											"name": "ETAGEN",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
										},
										"sink": {
											"name": "BADEZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
										},
										"sink": {
											"name": "SCHLAFZIMMER",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['STELLPLAETZE']"
										},
										"sink": {
											"name": "STELLPLAETZE",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
										},
										"sink": {
											"name": "BAUJAHR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
										},
										"sink": {
											"name": "SANIERUNG",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['küche']"
										},
										"sink": {
											"name": "kuche",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['balkonTerrasse']"
										},
										"sink": {
											"name": "balkonTerrasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['keller']"
										},
										"sink": {
											"name": "keller",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['kommunikation']"
										},
										"sink": {
											"name": "kommunikation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['boden']"
										},
										"sink": {
											"name": "boden",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['energieträger']"
										},
										"sink": {
											"name": "energietrager",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['aufzug']"
										},
										"sink": {
											"name": "aufzug",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['stellplatz']"
										},
										"sink": {
											"name": "stellplatz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['lageEinheit']"
										},
										"sink": {
											"name": "lageEinheit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektEigenschaften']['sonstiges']"
										},
										"sink": {
											"name": "sonstiges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['objektArt']"
										},
										"sink": {
											"name": "objektArt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['provisionsfrei']"
										},
										"sink": {
											"name": "provisionsfrei",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
										},
										"sink": {
											"name": "heizkostenInNebenkostenEnthalten",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['currency']"
										},
										"sink": {
											"name": "currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatOhneNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
										},
										"sink": {
											"name": "MieteProMonatMitNebenkosten",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
										},
										"sink": {
											"name": "NebenkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
										},
										"sink": {
											"name": "MietKaution",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
										},
										"sink": {
											"name": "HeizkostenProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
										},
										"sink": {
											"name": "MieteProMonatProStellplatz",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['Kaufpreis']"
										},
										"sink": {
											"name": "Kaufpreis",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['preise']['preisValues']['HausgeldProMonat']"
										},
										"sink": {
											"name": "HausgeldProMonat",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtteil']"
										},
										"sink": {
											"name": "stadtteil",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['stadtbezirk']"
										},
										"sink": {
											"name": "stadtbezirk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['kreis']"
										},
										"sink": {
											"name": "kreis",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['accuracy']"
										},
										"sink": {
											"name": "accuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['ort']"
										},
										"sink": {
											"name": "ort",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['bundesland']"
										},
										"sink": {
											"name": "bundesland",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['plz']"
										},
										"sink": {
											"name": "plz",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['strasse']"
										},
										"sink": {
											"name": "strasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['crawlerObject']['addr']['hausnummer']"
										},
										"sink": {
											"name": "hausnummer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSeenDay']"
										},
										"sink": {
											"name": "firstSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['daysOnline']"
										},
										"sink": {
											"name": "daysOnline",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['preisProQm']"
										},
										"sink": {
											"name": "preisProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['onlineRanges']"
										},
										"sink": {
											"name": "onlineRanges",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteProQm']"
										},
										"sink": {
											"name": "marktmieteProQm",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktmieteGebiet']"
										},
										"sink": {
											"name": "marktmieteGebiet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeAvg']"
										},
										"sink": {
											"name": "renditeAvg",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['renditeQuelle']"
										},
										"sink": {
											"name": "renditeQuelle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rendite']['marktRendite']"
										},
										"sink": {
											"name": "marktRendite",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['lt']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_lt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['zeitraumMarktmiete']['gte']"
										},
										"sink": {
											"name": "zeitraumMarktmiete_gte",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['rendite']['anzahlAngeboteMarktmiete']"
										},
										"sink": {
											"name": "anzahlAngeboteMarktmiete",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['eventDay']"
										},
										"sink": {
											"name": "eventDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['online']"
										},
										"sink": {
											"name": "online",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['lastOfflineDay']"
										},
										"sink": {
											"name": "lastOfflineDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['lastSeenDay']"
										},
										"sink": {
											"name": "lastSeenDay",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['groupId']"
										},
										"sink": {
											"name": "groupId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['JsonFilePath']"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_Geomap_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "move-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "de/geomap/to_upload",
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "geomap_to_be_uploaded_files_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geomap_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Insert_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@variables('filenames_str')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Insert_Error_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data-to-DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Insert_ADF_Logs]",
							"storedProcedureParameters": {
								"CopyActivityRunID": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').ActivityRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"Filenames": {
									"value": {
										"value": "@activity('Get Uploaded Filenames').output.childItems",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Rows_skipped": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Rows_written": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StatusMessage": {
									"value": {
										"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datapipeline_dev_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Uploaded Filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "geomap_to_be_uploaded_zip_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Raise_Failed",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Insert_Error_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Convert output to array",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Uploaded Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "af",
							"value": {
								"value": "@split(replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Uploaded Filenames').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',','),',')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set filenames string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Convert output to array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filenames_str",
							"value": {
								"value": "@join(take(variables('af'),add(length(variables('af')),-1)),',')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"af": {
						"type": "Array"
					},
					"filenames_lst": {
						"type": "Array"
					},
					"filenames_str": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-18T20:44:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_folder')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_Geomap_Input_Table')]",
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_files_zip')]",
				"[concat(variables('factoryId'), '/datasets/geomap_uploaded_zip_folder')]",
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_dev_db')]",
				"[concat(variables('factoryId'), '/datasets/geomap_to_be_uploaded_zip_folder')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/kadaster-data-loader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data pipeline to load all kadaster files to the database",
				"activities": [
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If Reupload 2019",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "JsonFilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "nl/kadaster/to_upload/ov20",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "logs/kadasterupload"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OVER_BEW_K",
											"type": "String"
										},
										"sink": {
											"name": "OVER_BEW_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "STUK_ONTV_DATUM",
											"type": "String"
										},
										"sink": {
											"name": "STUK_ONTV_DATUM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OVER_STUK",
											"type": "String"
										},
										"sink": {
											"name": "OVER_STUK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VV_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "VV_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VV_WOONPLAATS",
											"type": "String"
										},
										"sink": {
											"name": "VV_WOONPLAATS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NNP_VV_K",
											"type": "String"
										},
										"sink": {
											"name": "NNP_VV_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VK_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "VK_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VK_WOONPLAATS",
											"type": "String"
										},
										"sink": {
											"name": "VK_WOONPLAATS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NNP_VK_K",
											"type": "String"
										},
										"sink": {
											"name": "NNP_VK_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_MUT_SRT_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IND_FAM_TRANS",
											"type": "String"
										},
										"sink": {
											"name": "IND_FAM_TRANS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_OBJEKT",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_OBJEKT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "KAD_GEM",
											"type": "String"
										},
										"sink": {
											"name": "KAD_GEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SECTIE",
											"type": "String"
										},
										"sink": {
											"name": "SECTIE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PERCEELNR",
											"type": "String"
										},
										"sink": {
											"name": "PERCEELNR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INDEXLT",
											"type": "String"
										},
										"sink": {
											"name": "INDEXLT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INDEXNR",
											"type": "String"
										},
										"sink": {
											"name": "INDEXNR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_GROOTTE",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_GROOTTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_KOOP_SOM",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_KOOP_SOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_IND_MEER_O_G",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_BURG_GEM_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_KULT_ONGEB_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ZAKR_ZR_K",
											"type": "String"
										},
										"sink": {
											"name": "ZAKR_ZR_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJB_OBJ_BEL_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_X_COORD",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_X_COORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_Y_COORD",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_Y_COORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJE_KULT_TEXT",
											"type": "String"
										},
										"sink": {
											"name": "OBJE_KULT_TEXT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_KULT_GEB_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_PLTS_NAAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_STRAAT",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_STRAAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_NR",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_NR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_HUIS_LR",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_HUIS_LR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_TOEVOEGING",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_TOEVOEGING",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBJA_PTT_K",
											"type": "String"
										},
										"sink": {
											"name": "OBJA_PTT_K",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PHT",
											"type": "String"
										},
										"sink": {
											"name": "PHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OVER_ID",
											"type": "String"
										},
										"sink": {
											"name": "OVER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BAG_ID",
											"type": "String"
										},
										"sink": {
											"name": "BAG_ID",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataPipelineTest_KadasterRawInputStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP_Pipeline_Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy from staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_LogTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataRead": {
									"value": {
										"value": "@{activity('Upload-Data').output.rowsRead}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"copyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"effectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].start}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_End_Time": {
									"value": {
										"value": "@{utcnow()}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_queuingDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.queuingDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_transferDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_Pipeline_Error",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Copy from staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateCatellaDataPipeline_ErrorsTable]",
							"storedProcedureParameters": {
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Upload-Data').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyDuration_in_secs": {
									"value": {
										"value": "@{activity('Upload-Data').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"EffectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorCode": {
									"value": {
										"value": "@{activity('Upload-Data').error.errorCode}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorDescription": {
									"value": {
										"value": "@{activity('Upload-Data').error.message}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorLoggedTIme": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "String"
								},
								"FailureType": {
									"value": {
										"value": "@concat(activity('Upload-Data').error.message,'failureType:',activity('Upload-Data').error.failureType)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PipelineThrow",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "SP_Pipeline_Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@activity('Upload-Data').error.message",
								"type": "Expression"
							},
							"errorCode": {
								"value": "@activity('Upload-Data').error.errorCode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy from staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_copykadaster_data_from_staging]"
						},
						"linkedServiceName": {
							"referenceName": "DataPipelineSQLTest",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Reupload 2019",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('reupload-2019')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Upload-Kadaster-2019 to staging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Reset Kadaster Raw Input",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "JsonFilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": true,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobStorageLogs",
													"type": "LinkedServiceReference"
												},
												"path": "logs/kadasterupload"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "BEWARINGKODE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OVER_BEW_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "DATUM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "STUK_ONTV_DATUM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "STUK_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OVER_STUK",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "MUT_SRT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_MUT_SRT_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "FAM_TRANS",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IND_FAM_TRANS",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "OBJECT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_OBJEKT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KAD_GEM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "KAD_GEM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "SECTIE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SECTIE",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "INDEX_LR1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "INDEXLT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "GROOTTE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_GROOTTE",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "K_SOM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_KOOP_SOM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "BURGEM_NR",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_BURG_GEM_NR",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KULT_GEB_K1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_KULT_ONGEB_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "ZAK_R",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ZAKR_ZR_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "OBJ_BEL",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJB_OBJ_BEL_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "X_COORD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_X_COORD",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Y_COORD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_Y_COORD",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KULT_TEKST",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJE_KULT_TEXT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "KULT_GEB_K",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_KULT_GEB_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "PLTSNAAM",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_PLTS_NAAM",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "STRAAT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_STRAAT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "HUISNR",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_HUIS_NR",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "TOEV",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_TOEVOEGING",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "PTT_K",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OBJA_PTT_K",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "PHT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "PHT",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "CADOV_CADOI_ADRESSEERBR_OBJ_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "BAG_ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Kadaster2019",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DataPipelineTest_KadasterRawInputStaging",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Set reupload 2019 to false",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "copy-files-from-archive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "reupload-2019",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Reset Kadaster Raw Input",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_reset_kadsater_raw_input]"
									},
									"linkedServiceName": {
										"referenceName": "DataPipelineSQLTest",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "copy-files-from-archive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Upload-Kadaster-2019 to staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFolderPath": "nl/kadaster/uploaded",
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "kadaster_uploaded",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "kadaster_to_be_uploaded",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "reset-to-be-uploaded-folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy-files-to-archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorageLogs",
									"type": "LinkedServiceReference"
								},
								"path": "logs/geomapupload"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "copy-files-to-archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "nl/kadaster/to_upload/ov20",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kadaster_to_be_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kadaster_uploaded",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"reupload-2019": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T12:57:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/kadaster_to_be_uploaded')]",
				"[concat(variables('factoryId'), '/datasets/DataPipelineTest_KadasterRawInputStaging')]",
				"[concat(variables('factoryId'), '/linkedServices/DataPipelineSQLTest')]",
				"[concat(variables('factoryId'), '/datasets/kadaster_uploaded')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]",
				"[concat(variables('factoryId'), '/datasets/Kadaster2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/move_data_from_sources_to_adress_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transfer And Load GeoMap Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * FROM [dbo].[GeoMapRawImport]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[sp_transform_and_load_geomap_data]",
								"sqlWriterTableType": "GeoMapRawInputType",
								"storedProcedureTableTypeParameterName": "GeoMapInput",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JsonFilePath",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "JsonFilePath",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RentOrSale",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RentOrSale",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "FederalState",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "FederalState",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "District",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "District",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "StadOrOrtsTeil",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StadOrOrtsTeil",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plz",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Plz",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Strasse",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Strasse",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Titel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Titel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_Availability",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_Availability",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DetailedUrl",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DetailedUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Main",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Main",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Other",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Other",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description_Furnishing",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_Furnishing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AvailableFrom",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "AvailableFrom",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ImageUrls_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ImageUrls_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_DwellingType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_Floor",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_Floor",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WhiteGoodsQuality",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WhiteGoodsQuality",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Floor",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Floor",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfRooms",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfRooms",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfFloors",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfFloors",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfBathrooms",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfBathrooms",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfParkingSpots",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfParkingSpots",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NumberOfBedRooms",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NumberOfBedRooms",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ConstructionYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ConstructionYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RenovationYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RenovationYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LivingArea",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LivingArea",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LandArea",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LandArea",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Condition",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Condition",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnergyIdInfo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnergyIdInfo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsSanitized",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSanitized",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsRented",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRented",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ParkingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ParkingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SanitaryTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SanitaryTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ElevatorTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ElevatorTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BasementTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BasementTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BalconyTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalconyTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnergySources_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnergySources_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KitchenTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "KitchenTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UnitLocations_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UnitLocations_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Details_Other_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Details_Other_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HeatingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HeatingTypes_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PropertyType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PropertyType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsCommisionFree",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsCommisionFree",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Raw_Commision",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_Commision",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_AskingPrise",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_AskingPrise",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_AskingPricePerParking",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_AskingPricePerParking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentPerMonth_AdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentPerMonth_AdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_AdditionalCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_AdditionalCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentalDeposit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentalDeposit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_HeatingCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_HeatingCostsPerMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentPerMonthPerParking",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentPerMonthPerParking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raw_RentPerMonthNoAdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Raw_RentPerMonthNoAdditionalCosts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Currency",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Currency",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "PurchasePrice",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PurchasePrice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PurchasePricePerParking",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PurchasePricePerParking",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentPerMonthWithAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentPerMonthWithAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "AdditionalCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AdditionalCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentalDeposit",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentalDeposit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentPerMonthPerParking",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentPerMonthPerParking",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "RentPerMonthNoAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "RentPerMonthNoAdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HeatingCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "HeatingCostsPerMonth",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HeatingCostsIncludedInAdditionalCosts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HeatingCostsIncludedInAdditionalCosts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CountryId",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CountryId",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "LocationAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LocationAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Lon",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Lon",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Lat",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Lat",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "CityId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Stadtteil",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stadtteil",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stadtbezirk",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stadtbezirk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Street",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Street",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StadtteilId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StadtteilId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HouseNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HouseNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StadtbezirkId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StadtbezirkId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KreisId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "KreisId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Kreis",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Kreis",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationHierarchy_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LocationHierarchy_StringArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ConstructionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ConstructionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Brokers_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Brokers_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FirstSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FirstSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DaysOnline",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DaysOnline",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PreisPerSqm",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PreisPerSqm",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_PerSqm",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "GeoMap_MarketRent_PerSqm",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_RegionalLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeoMap_MarketRent_RegionalLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeoMap_Yield_Average",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "GeoMap_Yield_Average",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_Yield_Source",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeoMap_Yield_Source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeoMap_Return",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "GeoMap_Return",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_Period_LT",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "GeoMap_MarketRent_Period_LT",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_Period_GTE",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "GeoMap_MarketRent_Period_GTE",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "GeoMap_MarketRent_NumberOfOffers",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GeoMap_MarketRent_NumberOfOffers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OnlineRanges_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "OnlineRanges_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CrawlerEntryIds_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CrawlerEntryIds_JsonArray",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScrapingDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "ScrapingDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "AskingPrice",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AskingPrice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "IsOnline",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsOnline",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "LastSeenDay",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "UsableArea",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UsableArea",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeomapId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GeomapId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AdditionalCosts",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataPipelineTest_GeomapRawInput",
								"type": "DatasetReference",
								"parameters": {
									"sinkTableName": "GeoMapRawImport"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DataPipelineTest_GeomapRawInput",
								"type": "DatasetReference",
								"parameters": {
									"sinkTableName": "GeoMapRawImport"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-15T16:54:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataPipelineTest_GeomapRawInput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testfundaupload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['objectID']"
										},
										"sink": {
											"name": "objectID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['objectUrl']"
										},
										"sink": {
											"name": "objectUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address']"
										},
										"sink": {
											"name": "address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_address_street']"
										},
										"sink": {
											"name": "jsondata_address_street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_zipcode']"
										},
										"sink": {
											"name": "jsondata_zipcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_city']"
										},
										"sink": {
											"name": "jsondata_city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_province']"
										},
										"sink": {
											"name": "jsondata_province",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_address_housenumber']"
										},
										"sink": {
											"name": "jsondata_address_housenumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_address_housenumber_extension']"
										},
										"sink": {
											"name": "jsondata_address_housenumber_extension",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_price_buy']"
										},
										"sink": {
											"name": "jsondata_price_buy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jsondata_price_rental']"
										},
										"sink": {
											"name": "jsondata_price_rental",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['jsondata_squaremeters']"
										},
										"sink": {
											"name": "jsondata_squaremeters",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['jsondata_energieklasse']"
										},
										"sink": {
											"name": "jsondata_energieklasse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['zipCode']"
										},
										"sink": {
											"name": "zipCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['omschrijving']"
										},
										"sink": {
											"name": "omschrijving",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isExternal']"
										},
										"sink": {
											"name": "isExternal",
											"type": "Byte"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_priceString']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_priceString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_price']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_price",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_firstPrice']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_firstPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_aangebodenSinds']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_aangebodenSinds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_status']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kenmerkenOverdracht_acceptatie']"
										},
										"sink": {
											"name": "kenmerkenOverdracht_acceptatie",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortWoonhuis']"
										},
										"sink": {
											"name": "bouw_soortWoonhuis",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortAppartement']"
										},
										"sink": {
											"name": "bouw_soortAppartement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortBouw']"
										},
										"sink": {
											"name": "bouw_soortBouw",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_bouwjaar']"
										},
										"sink": {
											"name": "bouw_bouwjaar",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortDak']"
										},
										"sink": {
											"name": "bouw_soortDak",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_specifiek']"
										},
										"sink": {
											"name": "bouw_specifiek",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_woonoppervlakte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_woonoppervlakte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_overigeInpandigeRuimte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_overigeInpandigeRuimte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_externeBergRuimte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_externeBergRuimte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_perceelOppervlakte']"
										},
										"sink": {
											"name": "oppervlakteInhoud_perceelOppervlakte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['oppervlakteInhoud_inhoud']"
										},
										"sink": {
											"name": "oppervlakteInhoud_inhoud",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['indeling_aantalKamersString']"
										},
										"sink": {
											"name": "indeling_aantalKamersString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalkamers']"
										},
										"sink": {
											"name": "Indeling_aantalkamers",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalSlaapkamers']"
										},
										"sink": {
											"name": "Indeling_aantalSlaapkamers",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalBadkamers']"
										},
										"sink": {
											"name": "Indeling_aantalBadkamers",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_badkamerVoorzieningen']"
										},
										"sink": {
											"name": "Indeling_badkamerVoorzieningen",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Indeling_aantalWoonlagen']"
										},
										"sink": {
											"name": "Indeling_aantalWoonlagen",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Indeling_voorzieningen']"
										},
										"sink": {
											"name": "Indeling_voorzieningen",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVE_bijdrage']"
										},
										"sink": {
											"name": "VVE_bijdrage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_inschrijving']"
										},
										"sink": {
											"name": "VVEChecklist_inschrijving",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_jaarlijkseVergadering']"
										},
										"sink": {
											"name": "VVEChecklist_jaarlijkseVergadering",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_periodiekeBijdrage']"
										},
										"sink": {
											"name": "VVEChecklist_periodiekeBijdrage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_reservefondsAanwezig']"
										},
										"sink": {
											"name": "VVEChecklist_reservefondsAanwezig",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_onderhoudsplan']"
										},
										"sink": {
											"name": "VVEChecklist_onderhoudsplan",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VVEChecklist_opstalverzekering']"
										},
										"sink": {
											"name": "VVEChecklist_opstalverzekering",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energie_voorlopigEnergieLabel']"
										},
										"sink": {
											"name": "Energie_voorlopigEnergieLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energie_isolatie']"
										},
										"sink": {
											"name": "Energie_isolatie",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energie_verwarming']"
										},
										"sink": {
											"name": "Energie_verwarming",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energy_warmWater']"
										},
										"sink": {
											"name": "Energy_warmWater",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kadastraleGegevens_oppervlakte']"
										},
										"sink": {
											"name": "kadastraleGegevens_oppervlakte",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['kadastraleGegevens_eigendomsSituatie']"
										},
										"sink": {
											"name": "kadastraleGegevens_eigendomsSituatie",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['kadastraleGegevens_lasten']"
										},
										"sink": {
											"name": "kadastraleGegevens_lasten",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_ligging']"
										},
										"sink": {
											"name": "buitenRuimte_ligging",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_tuin']"
										},
										"sink": {
											"name": "buitenRuimte_tuin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_achtertuin']"
										},
										"sink": {
											"name": "buitenRuimte_achtertuin",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['buitenRuimte_voorTuin']"
										},
										"sink": {
											"name": "buitenRuimte_voorTuin",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['Buitenruimte_liggingTuin']"
										},
										"sink": {
											"name": "Buitenruimte_liggingTuin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Buitenruimte_balkonDakterras']"
										},
										"sink": {
											"name": "Buitenruimte_balkonDakterras",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['parkeerGelegenheid_soortParkeerGelegenheid']"
										},
										"sink": {
											"name": "parkeerGelegenheid_soortParkeerGelegenheid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Garage_soortGarage']"
										},
										"sink": {
											"name": "Garage_soortGarage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isRental']"
										},
										"sink": {
											"name": "isRental",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['huur_huurPrijsString']"
										},
										"sink": {
											"name": "huur_huurPrijsString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_huurPrijs']"
										},
										"sink": {
											"name": "huur_huurPrijs",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['huur_waarborgSomString']"
										},
										"sink": {
											"name": "huur_waarborgSomString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bouw_soortAppertement']"
										},
										"sink": {
											"name": "bouw_soortAppertement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Energy_cvketel']"
										},
										"sink": {
											"name": "Energy_cvketel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_waarborgSom']"
										},
										"sink": {
											"name": "huur_waarborgSom",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['adjusted']"
										},
										"sink": {
											"name": "adjusted",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['priceHistory']"
										},
										"sink": {
											"name": "priceHistory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['statusHistory']"
										},
										"sink": {
											"name": "statusHistory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_kostenHuurderString']"
										},
										"sink": {
											"name": "huur_kostenHuurderString",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['huur_huurOvereenkomst']"
										},
										"sink": {
											"name": "huur_huurOvereenkomst",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['realEstateAgent_name']"
										},
										"sink": {
											"name": "realEstateAgent_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['realEstateAgent_phone']"
										},
										"sink": {
											"name": "realEstateAgent_phone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['realEstateAgent_fundaUrl']"
										},
										"sink": {
											"name": "realEstateAgent_fundaUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['images']"
										},
										"sink": {
											"name": "images",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soldFirstForSaleDate']"
										},
										"sink": {
											"name": "soldFirstForSaleDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soldSoldDate']"
										},
										"sink": {
											"name": "soldSoldDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['itemCount']"
										},
										"sink": {
											"name": "itemCount",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['result']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "funda_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FundaTest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T12:53:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/funda_test')]",
				"[concat(variables('factoryId'), '/datasets/FundaTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wh_data_loader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upload-Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEachIncominFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/Watson_Holmes/to_upload",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorageLogs",
										"type": "LinkedServiceReference"
									},
									"path": "data-pipeline-input-files/nl/Watson_Holmes/logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AanmeldDatum",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AanmeldDatum",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "AantalBadkamers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalBadkamers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AantalKamers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalKamers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AantalSlaapKamers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalSlaapKamers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AantalVerdiepingen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AantalVerdiepingen",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ActueleStatus",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActueleStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Adres",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Adres",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AdresId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdresId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AfwerkingGemeubileerd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfwerkingGemeubileerd",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AfwerkingGestoffeerd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfwerkingGestoffeerd",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AfwerkingKaleVerhuur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfwerkingKaleVerhuur",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Bouwjaar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwjaar",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Bouwnummer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwnummer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bouwperiode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwperiode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bouwvorm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bouwvorm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bron",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bron",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BuurtId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuurtId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BuurtNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuurtNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ConditieKostenKoper",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ConditieKostenKoper",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConditieVrijOpNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ConditieVrijOpNaam",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Energielabel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Energielabel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPacht",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPacht",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPachtAfgekochtTot",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPachtAfgekochtTot",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPachtDuur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPachtDuur",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ErfPachtPerJaar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ErfPachtPerJaar",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FotoUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FotoUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GebruiksOppervlakte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GebruiksOppervlakte",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GemeenteId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GemeenteId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GemeenteNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GemeenteNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Huisnummer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Huisnummer",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HuisnummerInclToevoegingen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HuisnummerInclToevoegingen",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HuurKoop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HuurKoop",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Inhoud",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inhoud",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsHuur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsHuur",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsKoop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsKoop",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsVertrouwelijk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsVertrouwelijk",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Looptijd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Looptijd",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Makelaar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Makelaar",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModelwaardeAVMM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelwaardeAVMM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModelwaardeGeindexeerdeM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelwaardeGeindexeerdeM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModelwaardeReferentiesM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelwaardeReferentiesM2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifyDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModifyDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "NieuwbouwProjectID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NieuwbouwProjectID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NieuwbouwProjectNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NieuwbouwProjectNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OnderhoudsStaatBinnen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OnderhoudsStaatBinnen",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OnderhoudsStaatBuiten",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OnderhoudsStaatBuiten",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OppervlakteTuin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OppervlakteTuin",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Overbieden",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overbieden",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PandId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PandId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Parkeer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parkeer",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PerceelOppervlakte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PerceelOppervlakte",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ServiceKosten",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiceKosten",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StatusActueelInAanbod",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusActueelInAanbod",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusIngetrokken",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusIngetrokken",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusOnderOptie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusOnderOptie",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusTransactie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusTransactie",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusTransactieBekend",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusTransactieBekend",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "StatusTransactieOnderVoorbehoud",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StatusTransactieOnderVoorbehoud",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Straatnaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Straatnaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactieConditie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieConditie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactiedatumOndertekeningAkte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactiedatumOndertekeningAkte",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "TransactiedatumOnderVoorbehoud",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactiedatumOnderVoorbehoud",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "TransactiedatumTransport",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactiedatumTransport",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "TransactieId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Transactieprijs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transactieprijs",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TransactieprijsM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieprijsM2",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TransactieprijsM2Huur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieprijsM2Huur",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TransactieprijsM2Koop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieprijsM2Koop",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TransactieSpecificatie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TransactieSpecificatie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tuin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Tuin",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "VerblijfsobjectId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VerblijfsobjectId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vraagprijs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vraagprijs",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "VraagprijsConditie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsConditie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VraagprijsM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsM2",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsM2Huur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsM2Huur",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsM2Koop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsM2Koop",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsOorspronkelijk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsOorspronkelijk",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "VraagprijsOorspronkelijkM2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsOorspronkelijkM2",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "VraagprijsSpecificatie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VraagprijsSpecificatie",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WijkId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WijkId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WijkNaam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WijkNaam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WoningSubType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WoningSubType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WoningType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WoningType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WH_input_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQL_WH_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_files_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upload-Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nl/Watson_Holmes/to_upload",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WH_input_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WH_archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete_from_input_folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy_files_to_archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WH_input_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "get-uploaded-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WH_archive",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "get-FTP-incoming-filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "WH_FTP_csv_file",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachIncominFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get-uploaded-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get-FTP-incoming-filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get-FTP-incoming-filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "if-file-is-not-uploaded",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy-incoming-FTP-files",
												"description": "",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.01:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ""
														}
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "AzureBlobStorageLogs",
																"type": "LinkedServiceReference"
															},
															"path": "data-pipeline-input-files/de/geomap/logs"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "WH_FTP_csv_file",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "WH_input_csv",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-06-29T14:40:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WH_input_csv')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQL_WH_Input_Table')]",
				"[concat(variables('factoryId'), '/datasets/WH_archive')]",
				"[concat(variables('factoryId'), '/datasets/WH_FTP_csv_file')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_WH_Input_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_dev_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AanmeldDatum",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "AantalBadkamers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AantalKamers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AantalSlaapKamers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AantalVerdiepingen",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActueleStatus",
						"type": "nvarchar"
					},
					{
						"name": "Adres",
						"type": "nvarchar"
					},
					{
						"name": "AdresId",
						"type": "nvarchar"
					},
					{
						"name": "AfwerkingGemeubileerd",
						"type": "bit"
					},
					{
						"name": "AfwerkingGestoffeerd",
						"type": "bit"
					},
					{
						"name": "AfwerkingKaleVerhuur",
						"type": "bit"
					},
					{
						"name": "Bouwjaar",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Bouwnummer",
						"type": "nvarchar"
					},
					{
						"name": "Bouwperiode",
						"type": "nvarchar"
					},
					{
						"name": "Bouwvorm",
						"type": "nvarchar"
					},
					{
						"name": "Bron",
						"type": "nvarchar"
					},
					{
						"name": "BuurtId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BuurtNaam",
						"type": "nvarchar"
					},
					{
						"name": "ConditieKostenKoper",
						"type": "bit"
					},
					{
						"name": "ConditieVrijOpNaam",
						"type": "bit"
					},
					{
						"name": "Energielabel",
						"type": "nvarchar"
					},
					{
						"name": "ErfPacht",
						"type": "nvarchar"
					},
					{
						"name": "ErfPachtAfgekochtTot",
						"type": "nvarchar"
					},
					{
						"name": "ErfPachtDuur",
						"type": "nvarchar"
					},
					{
						"name": "ErfPachtPerJaar",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FotoUrl",
						"type": "nvarchar"
					},
					{
						"name": "GebruiksOppervlakte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GemeenteId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GemeenteNaam",
						"type": "nvarchar"
					},
					{
						"name": "Huisnummer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HuisnummerInclToevoegingen",
						"type": "nvarchar"
					},
					{
						"name": "HuurKoop",
						"type": "nvarchar"
					},
					{
						"name": "Inhoud",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsHuur",
						"type": "bit"
					},
					{
						"name": "IsKoop",
						"type": "bit"
					},
					{
						"name": "IsVertrouwelijk",
						"type": "bit"
					},
					{
						"name": "Latitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Longitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Looptijd",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Makelaar",
						"type": "nvarchar"
					},
					{
						"name": "ModelwaardeAVMM2",
						"type": "nvarchar"
					},
					{
						"name": "ModelwaardeGeindexeerdeM2",
						"type": "nvarchar"
					},
					{
						"name": "ModelwaardeReferentiesM2",
						"type": "nvarchar"
					},
					{
						"name": "ModifyDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "NieuwbouwProjectID",
						"type": "nvarchar"
					},
					{
						"name": "NieuwbouwProjectNaam",
						"type": "nvarchar"
					},
					{
						"name": "OnderhoudsStaatBinnen",
						"type": "nvarchar"
					},
					{
						"name": "OnderhoudsStaatBuiten",
						"type": "nvarchar"
					},
					{
						"name": "OppervlakteTuin",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Overbieden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PandId",
						"type": "nvarchar"
					},
					{
						"name": "Parkeer",
						"type": "bit"
					},
					{
						"name": "PerceelOppervlakte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Postcode",
						"type": "nvarchar"
					},
					{
						"name": "ServiceKosten",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StatusActueelInAanbod",
						"type": "bit"
					},
					{
						"name": "StatusIngetrokken",
						"type": "bit"
					},
					{
						"name": "StatusOnderOptie",
						"type": "bit"
					},
					{
						"name": "StatusTransactie",
						"type": "bit"
					},
					{
						"name": "StatusTransactieBekend",
						"type": "bit"
					},
					{
						"name": "StatusTransactieOnderVoorbehoud",
						"type": "bit"
					},
					{
						"name": "Straatnaam",
						"type": "nvarchar"
					},
					{
						"name": "TransactieConditie",
						"type": "nvarchar"
					},
					{
						"name": "TransactiedatumOndertekeningAkte",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TransactiedatumOnderVoorbehoud",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TransactiedatumTransport",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TransactieId",
						"type": "nvarchar"
					},
					{
						"name": "Transactieprijs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactieprijsM2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransactieprijsM2Huur",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransactieprijsM2Koop",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransactieSpecificatie",
						"type": "nvarchar"
					},
					{
						"name": "Tuin",
						"type": "bit"
					},
					{
						"name": "VerblijfsobjectId",
						"type": "nvarchar"
					},
					{
						"name": "Vraagprijs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VraagprijsConditie",
						"type": "nvarchar"
					},
					{
						"name": "VraagprijsM2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsM2Huur",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsM2Koop",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsOorspronkelijk",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VraagprijsOorspronkelijkM2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsSpecificatie",
						"type": "nvarchar"
					},
					{
						"name": "WijkId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WijkNaam",
						"type": "nvarchar"
					},
					{
						"name": "WoningSubType",
						"type": "nvarchar"
					},
					{
						"name": "WoningType",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WH_RawInput"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_dev_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTestTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DB: datapipeline-test\nTable: dbo.WH_RawInput_test",
				"linkedServiceName": {
					"referenceName": "datapipeline_sql_server_test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AanmeldDatum",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "AantalBadkamers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AantalKamers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AantalSlaapKamers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AantalVerdiepingen",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActueleStatus",
						"type": "nvarchar"
					},
					{
						"name": "Adres",
						"type": "nvarchar"
					},
					{
						"name": "AdresId",
						"type": "nvarchar"
					},
					{
						"name": "AfwerkingGemeubileerd",
						"type": "bit"
					},
					{
						"name": "AfwerkingGestoffeerd",
						"type": "bit"
					},
					{
						"name": "AfwerkingKaleVerhuur",
						"type": "bit"
					},
					{
						"name": "Bouwjaar",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Bouwnummer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Bouwperiode",
						"type": "nvarchar"
					},
					{
						"name": "Bouwvorm",
						"type": "nvarchar"
					},
					{
						"name": "Bron",
						"type": "nvarchar"
					},
					{
						"name": "BuurtId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BuurtNaam",
						"type": "nvarchar"
					},
					{
						"name": "ConditieKostenKoper",
						"type": "bit"
					},
					{
						"name": "ConditieVrijOpNaam",
						"type": "bit"
					},
					{
						"name": "Energielabel",
						"type": "nvarchar"
					},
					{
						"name": "ErfPacht",
						"type": "nvarchar"
					},
					{
						"name": "ErfPachtAfgekochtTot",
						"type": "nvarchar"
					},
					{
						"name": "ErfPachtDuur",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ErfPachtPerJaar",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FotoUrl",
						"type": "nvarchar"
					},
					{
						"name": "GebruiksOppervlakte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GemeenteId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GemeenteNaam",
						"type": "nvarchar"
					},
					{
						"name": "Huisnummer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HuisnummerInclToevoegingen",
						"type": "nvarchar"
					},
					{
						"name": "HuurKoop",
						"type": "nvarchar"
					},
					{
						"name": "Inhoud",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsHuur",
						"type": "bit"
					},
					{
						"name": "IsKoop",
						"type": "bit"
					},
					{
						"name": "IsVertrouwelijk",
						"type": "bit"
					},
					{
						"name": "Latitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Longitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Looptijd",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Makelaar",
						"type": "nvarchar"
					},
					{
						"name": "ModelwaardeAVMM2",
						"type": "nvarchar"
					},
					{
						"name": "ModelwaardeGeindexeerdeM2",
						"type": "nvarchar"
					},
					{
						"name": "ModelwaardeReferentiesM2",
						"type": "nvarchar"
					},
					{
						"name": "ModifyDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "NieuwbouwProjectID",
						"type": "nvarchar"
					},
					{
						"name": "NieuwbouwProjectNaam",
						"type": "nvarchar"
					},
					{
						"name": "OnderhoudsStaatBinnen",
						"type": "nvarchar"
					},
					{
						"name": "OnderhoudsStaatBuiten",
						"type": "nvarchar"
					},
					{
						"name": "OppervlakteTuin",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Overbieden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PandId",
						"type": "nvarchar"
					},
					{
						"name": "Parkeer",
						"type": "bit"
					},
					{
						"name": "PerceelOppervlakte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Postcode",
						"type": "nvarchar"
					},
					{
						"name": "ServiceKosten",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StatusActueelInAanbod",
						"type": "bit"
					},
					{
						"name": "StatusIngetrokken",
						"type": "bit"
					},
					{
						"name": "StatusOnderOptie",
						"type": "bit"
					},
					{
						"name": "StatusTransactie",
						"type": "bit"
					},
					{
						"name": "StatusTransactieBekend",
						"type": "bit"
					},
					{
						"name": "StatusTransactieOnderVoorbehoud",
						"type": "bit"
					},
					{
						"name": "Straatnaam",
						"type": "nvarchar"
					},
					{
						"name": "TransactieConditie",
						"type": "nvarchar"
					},
					{
						"name": "TransactiedatumOndertekeningAkte",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TransactiedatumOnderVoorbehoud",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TransactiedatumTransport",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TransactieId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transactieprijs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactieprijsM2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransactieprijsM2Huur",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransactieprijsM2Koop",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransactieSpecificatie",
						"type": "nvarchar"
					},
					{
						"name": "Tuin",
						"type": "bit"
					},
					{
						"name": "VerblijfsobjectId",
						"type": "nvarchar"
					},
					{
						"name": "Vraagprijs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VraagprijsConditie",
						"type": "nvarchar"
					},
					{
						"name": "VraagprijsM2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsM2Huur",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsM2Koop",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsOorspronkelijk",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VraagprijsOorspronkelijkM2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VraagprijsSpecificatie",
						"type": "nvarchar"
					},
					{
						"name": "WijkId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WijkNaam",
						"type": "nvarchar"
					},
					{
						"name": "WoningSubType",
						"type": "nvarchar"
					},
					{
						"name": "WoningType",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WH_RawInput_test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_sql_server_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_Geomap_Input_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataPipelineSQLDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "kaufMiete",
						"type": "nvarchar"
					},
					{
						"name": "stadtteil",
						"type": "nvarchar"
					},
					{
						"name": "stadtbezirk",
						"type": "nvarchar"
					},
					{
						"name": "accuracy",
						"type": "nvarchar"
					},
					{
						"name": "ort",
						"type": "nvarchar"
					},
					{
						"name": "bundesland",
						"type": "nvarchar"
					},
					{
						"name": "kreis",
						"type": "nvarchar"
					},
					{
						"name": "strasse",
						"type": "nvarchar"
					},
					{
						"name": "hausnummer",
						"type": "nvarchar"
					},
					{
						"name": "land",
						"type": "nvarchar"
					},
					{
						"name": "plz",
						"type": "nvarchar"
					},
					{
						"name": "geoLongitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "geoLatitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "anbieter",
						"type": "nvarchar"
					},
					{
						"name": "objektTyp",
						"type": "nvarchar"
					},
					{
						"name": "titel",
						"type": "nvarchar"
					},
					{
						"name": "portalUrl",
						"type": "nvarchar"
					},
					{
						"name": "objektTypText",
						"type": "nvarchar"
					},
					{
						"name": "sonstiges",
						"type": "nvarchar"
					},
					{
						"name": "heizungsart",
						"type": "nvarchar"
					},
					{
						"name": "stellplatz",
						"type": "nvarchar"
					},
					{
						"name": "lageEinheit",
						"type": "nvarchar"
					},
					{
						"name": "sanitar",
						"type": "nvarchar"
					},
					{
						"name": "saniert",
						"type": "bit"
					},
					{
						"name": "Wohnflaeche",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Nutzflaeche",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Grundstuecksflaeche",
						"type": "float",
						"precision": 15
					},
					{
						"name": "zustand",
						"type": "nvarchar"
					},
					{
						"name": "ausstattungsQualitat",
						"type": "nvarchar"
					},
					{
						"name": "etage",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ZIMMER",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ETAGEN",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BADEZIMMER",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SCHLAFZIMMER",
						"type": "float",
						"precision": 15
					},
					{
						"name": "STELLPLAETZE",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BAUJAHR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SANIERUNG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ausweisInfo",
						"type": "nvarchar"
					},
					{
						"name": "ausweisTyp",
						"type": "nvarchar"
					},
					{
						"name": "kennwert",
						"type": "float",
						"precision": 15
					},
					{
						"name": "KennwertKlasse",
						"type": "nvarchar"
					},
					{
						"name": "kuche",
						"type": "nvarchar"
					},
					{
						"name": "balkonTerrasse",
						"type": "nvarchar"
					},
					{
						"name": "aufzug",
						"type": "nvarchar"
					},
					{
						"name": "keller",
						"type": "nvarchar"
					},
					{
						"name": "kommunikation",
						"type": "nvarchar"
					},
					{
						"name": "boden",
						"type": "nvarchar"
					},
					{
						"name": "energietrager",
						"type": "nvarchar"
					},
					{
						"name": "objektArt",
						"type": "nvarchar"
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "MieteProMonatOhneNebenkosten",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MieteProMonatMitNebenkosten",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NebenkostenProMonat",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MietKaution",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HeizkostenProMonat",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MieteProMonatProStellplatz",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Kaufpreis",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HausgeldProMonat",
						"type": "float",
						"precision": 15
					},
					{
						"name": "heizkostenInNebenkostenEnthalten",
						"type": "bit"
					},
					{
						"name": "provisionsfrei",
						"type": "bit"
					},
					{
						"name": "firstSeenDay",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "daysOnline",
						"type": "int",
						"precision": 10
					},
					{
						"name": "preisProQm",
						"type": "float",
						"precision": 15
					},
					{
						"name": "marktmieteProQm",
						"type": "float",
						"precision": 15
					},
					{
						"name": "marktmieteGebiet",
						"type": "nvarchar"
					},
					{
						"name": "renditeAvg",
						"type": "float",
						"precision": 15
					},
					{
						"name": "renditeQuelle",
						"type": "nvarchar"
					},
					{
						"name": "marktRendite",
						"type": "float",
						"precision": 15
					},
					{
						"name": "zeitraumMarktmiete_lt",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "zeitraumMarktmiete_gte",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "anzahlAngeboteMarktmiete",
						"type": "int",
						"precision": 10
					},
					{
						"name": "onlineRanges",
						"type": "nvarchar"
					},
					{
						"name": "eventDay",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "online",
						"type": "bit"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "lastOfflineDay",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "lastSeenDay",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "groupId",
						"type": "nvarchar"
					},
					{
						"name": "JsonFilePath",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GeoMapRawImport_2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataPipelineSQLDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_Kadaster_Input_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_dev_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OVER_BEW_K",
						"type": "nvarchar"
					},
					{
						"name": "STUK_ONTV_DATUM",
						"type": "nvarchar"
					},
					{
						"name": "OVER_STUK",
						"type": "nvarchar"
					},
					{
						"name": "VV_NAAM",
						"type": "nvarchar"
					},
					{
						"name": "VV_WOONPLAATS",
						"type": "nvarchar"
					},
					{
						"name": "NNP_VV_K",
						"type": "nvarchar"
					},
					{
						"name": "VK_NAAM",
						"type": "nvarchar"
					},
					{
						"name": "VK_WOONPLAATS",
						"type": "nvarchar"
					},
					{
						"name": "NNP_VK_K",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_MUT_SRT_K",
						"type": "nvarchar"
					},
					{
						"name": "IND_FAM_TRANS",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_OBJEKT",
						"type": "nvarchar"
					},
					{
						"name": "KAD_GEM",
						"type": "nvarchar"
					},
					{
						"name": "SECTIE",
						"type": "nvarchar"
					},
					{
						"name": "PERCEELNR",
						"type": "nvarchar"
					},
					{
						"name": "INDEXLT",
						"type": "nvarchar"
					},
					{
						"name": "INDEXNR",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_GROOTTE",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_KOOP_SOM",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_IND_MEER_O_G",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_BURG_GEM_NR",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_BURG_GEM_NAAM",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_KULT_ONGEB_K",
						"type": "nvarchar"
					},
					{
						"name": "ZAKR_ZR_K",
						"type": "nvarchar"
					},
					{
						"name": "OBJB_OBJ_BEL_K",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_X_COORD",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_Y_COORD",
						"type": "nvarchar"
					},
					{
						"name": "OBJE_KULT_TEXT",
						"type": "nvarchar"
					},
					{
						"name": "OBJA_KULT_GEB_K",
						"type": "nvarchar"
					},
					{
						"name": "OBJA_PLTS_NAAM",
						"type": "nvarchar"
					},
					{
						"name": "OBJA_STRAAT",
						"type": "nvarchar"
					},
					{
						"name": "OBJA_HUIS_NR",
						"type": "nvarchar"
					},
					{
						"name": "OBJA_HUIS_LR",
						"type": "nvarchar"
					},
					{
						"name": "OBJA_TOEVOEGING",
						"type": "nvarchar"
					},
					{
						"name": "OBJA_PTT_K",
						"type": "nvarchar"
					},
					{
						"name": "PHT",
						"type": "nvarchar"
					},
					{
						"name": "OVER_ID",
						"type": "nvarchar"
					},
					{
						"name": "BAG_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Kadaster_OV20_RawInput_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_dev_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_Kadaster_OV15_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_dev_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATUM",
						"type": "nvarchar"
					},
					{
						"name": "PTT_K",
						"type": "nvarchar"
					},
					{
						"name": "PLTSNAAM",
						"type": "nvarchar"
					},
					{
						"name": "STRAAT",
						"type": "nvarchar"
					},
					{
						"name": "HUISNR",
						"type": "nvarchar"
					},
					{
						"name": "TOEV",
						"type": "nvarchar"
					},
					{
						"name": "WONINGTYPE",
						"type": "nvarchar"
					},
					{
						"name": "X_COORD",
						"type": "nvarchar"
					},
					{
						"name": "Y_COORD",
						"type": "nvarchar"
					},
					{
						"name": "KULT_GEB_K",
						"type": "nvarchar"
					},
					{
						"name": "GROOTTE",
						"type": "nvarchar"
					},
					{
						"name": "K_SOM",
						"type": "nvarchar"
					},
					{
						"name": "IND_M_O_G",
						"type": "nvarchar"
					},
					{
						"name": "ZAK_R",
						"type": "nvarchar"
					},
					{
						"name": "KULT_TEKST",
						"type": "nvarchar"
					},
					{
						"name": "OBJ_BEL",
						"type": "nvarchar"
					},
					{
						"name": "ERFDIENSTBH",
						"type": "nvarchar"
					},
					{
						"name": "KULT_GEB_K1",
						"type": "nvarchar"
					},
					{
						"name": "KULT_ONGEB_K1",
						"type": "nvarchar"
					},
					{
						"name": "INDEX_LR1",
						"type": "nvarchar"
					},
					{
						"name": "GROOTTE1",
						"type": "nvarchar"
					},
					{
						"name": "PTT_K1",
						"type": "nvarchar"
					},
					{
						"name": "PLTSNAAM1",
						"type": "nvarchar"
					},
					{
						"name": "STRAAT1",
						"type": "nvarchar"
					},
					{
						"name": "HUISNR1",
						"type": "nvarchar"
					},
					{
						"name": "TOEV1",
						"type": "nvarchar"
					},
					{
						"name": "KULT_GEB_K2",
						"type": "nvarchar"
					},
					{
						"name": "KULT_ONGEB_K2",
						"type": "nvarchar"
					},
					{
						"name": "INDEX_LR2",
						"type": "nvarchar"
					},
					{
						"name": "GROOTTE2",
						"type": "nvarchar"
					},
					{
						"name": "PTT_K2",
						"type": "nvarchar"
					},
					{
						"name": "PLTSNAAM2",
						"type": "nvarchar"
					},
					{
						"name": "STRAAT2",
						"type": "nvarchar"
					},
					{
						"name": "HUISNR2",
						"type": "nvarchar"
					},
					{
						"name": "TOEV2",
						"type": "nvarchar"
					},
					{
						"name": "KULT_GEB_K3",
						"type": "nvarchar"
					},
					{
						"name": "KULT_ONGEB_K3",
						"type": "nvarchar"
					},
					{
						"name": "INDEX_LR3",
						"type": "nvarchar"
					},
					{
						"name": "GROOTTE3",
						"type": "nvarchar"
					},
					{
						"name": "PTT_K3",
						"type": "nvarchar"
					},
					{
						"name": "PLTSNAAM3",
						"type": "nvarchar"
					},
					{
						"name": "STRAAT3",
						"type": "nvarchar"
					},
					{
						"name": "HUISNR3",
						"type": "nvarchar"
					},
					{
						"name": "TOEV3",
						"type": "nvarchar"
					},
					{
						"name": "KULT_GEB_K4",
						"type": "nvarchar"
					},
					{
						"name": "KULT_ONGEB_K4",
						"type": "nvarchar"
					},
					{
						"name": "INDEX_LR4",
						"type": "nvarchar"
					},
					{
						"name": "GROOTTE4",
						"type": "nvarchar"
					},
					{
						"name": "PTT_K4",
						"type": "nvarchar"
					},
					{
						"name": "PLTSNAAM4",
						"type": "nvarchar"
					},
					{
						"name": "STRAAT4",
						"type": "nvarchar"
					},
					{
						"name": "HUISNR4",
						"type": "nvarchar"
					},
					{
						"name": "TOEV4",
						"type": "nvarchar"
					},
					{
						"name": "IND_HUURDER",
						"type": "nvarchar"
					},
					{
						"name": "BEWARINGKODE",
						"type": "nvarchar"
					},
					{
						"name": "STUK_ID",
						"type": "nvarchar"
					},
					{
						"name": "MUT_SRT",
						"type": "nvarchar"
					},
					{
						"name": "BURGEM_NR",
						"type": "nvarchar"
					},
					{
						"name": "OBJECT",
						"type": "nvarchar"
					},
					{
						"name": "NNP_1E_VERKR",
						"type": "nvarchar"
					},
					{
						"name": "NNP_1E_VERVR",
						"type": "nvarchar"
					},
					{
						"name": "FAM_TRANS",
						"type": "nvarchar"
					},
					{
						"name": "PHT",
						"type": "nvarchar"
					},
					{
						"name": "KAD_GEM",
						"type": "nvarchar"
					},
					{
						"name": "SECTIE",
						"type": "nvarchar"
					},
					{
						"name": "BAG_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Kadaster_OV15_RawInput_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_dev_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataPipelineTest_GeomapRawInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "DataPipelineSQLTest",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkTableName": {
						"type": "string",
						"defaultValue": "GeoMapRawImport"
					}
				},
				"folder": {
					"name": "Geomap"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "JsonFilePath",
						"type": "nvarchar"
					},
					{
						"name": "RentOrSale",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Longitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Latitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FederalState",
						"type": "nchar"
					},
					{
						"name": "District",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nchar"
					},
					{
						"name": "StadOrOrtsTeil",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nchar"
					},
					{
						"name": "Street",
						"type": "nvarchar"
					},
					{
						"name": "DwellingType",
						"type": "nvarchar"
					},
					{
						"name": "Titel",
						"type": "nvarchar"
					},
					{
						"name": "ResourceId",
						"type": "nvarchar"
					},
					{
						"name": "DetailedUrl",
						"type": "nvarchar"
					},
					{
						"name": "Description_Location",
						"type": "nvarchar"
					},
					{
						"name": "Description_Main",
						"type": "nvarchar"
					},
					{
						"name": "Description_Other",
						"type": "nvarchar"
					},
					{
						"name": "Description_Furnishing",
						"type": "nvarchar"
					},
					{
						"name": "AvailableFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ImageUrls_JsonArray",
						"type": "nvarchar"
					},
					{
						"name": "WhiteGoodsQuality",
						"type": "nvarchar"
					},
					{
						"name": "Floor",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NumberOfRooms",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NumberOfFloors",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NumberOfBathrooms",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NumberOfParkingSpots",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NumberOfBedRooms",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NumberOfBalconies",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BalconyType",
						"type": "nvarchar"
					},
					{
						"name": "ConstructionYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnergySource",
						"type": "nvarchar"
					},
					{
						"name": "RenovationYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LivingArea",
						"type": "float",
						"precision": 15
					},
					{
						"name": "LandArea",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Condition",
						"type": "nvarchar"
					},
					{
						"name": "EnergyLabel",
						"type": "nvarchar"
					},
					{
						"name": "EnergyValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IsSanitized",
						"type": "bit"
					},
					{
						"name": "IsRented",
						"type": "bit"
					},
					{
						"name": "IsMonument",
						"type": "bit"
					},
					{
						"name": "IsFirstOccupancy",
						"type": "bit"
					},
					{
						"name": "PropertyType",
						"type": "nvarchar"
					},
					{
						"name": "IsCommisionFree",
						"type": "bit"
					},
					{
						"name": "Currency",
						"type": "nchar"
					},
					{
						"name": "PurchasePrice",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PurchasePricePerParking",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RentPerMonthWithAdditionalCosts",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AdditionalCostsPerMonth",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RentalDeposit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RentPerMonthPerParking",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RentPerMonthNoAdditionalCosts",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HeatingCostsPerMonth",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HeatingCostsIncludedInAdditionalCosts",
						"type": "bit"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "CountryId",
						"type": "nchar"
					},
					{
						"name": "LocationAccuracy",
						"type": "nvarchar"
					},
					{
						"name": "CityDistrict1",
						"type": "nvarchar"
					},
					{
						"name": "CityDistrict2",
						"type": "nvarchar"
					},
					{
						"name": "Stadtteil",
						"type": "nvarchar"
					},
					{
						"name": "Stadtbezirk",
						"type": "nvarchar"
					},
					{
						"name": "StadtteilId",
						"type": "nvarchar"
					},
					{
						"name": "HouseNumber",
						"type": "nvarchar"
					},
					{
						"name": "StadtbezirkId",
						"type": "nvarchar"
					},
					{
						"name": "KreisId",
						"type": "nvarchar"
					},
					{
						"name": "Kreis",
						"type": "nvarchar"
					},
					{
						"name": "LocationHierarchy_StringArray",
						"type": "nvarchar"
					},
					{
						"name": "ConstructionStatus",
						"type": "nvarchar"
					},
					{
						"name": "Brokers_JsonArray",
						"type": "nvarchar"
					},
					{
						"name": "FirstSeenDay",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DaysOnline",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PricePerSqm",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Commision",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GeoMap_MarketRent_PerSqm",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GeoMap_MarketRent_RegionalLevel",
						"type": "nvarchar"
					},
					{
						"name": "GeoMap_Yield_Average",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GeoMap_Yield_Source",
						"type": "nvarchar"
					},
					{
						"name": "GeoMap_Return",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GeoMap_MarketRent_Period_LT",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "GeoMap_MarketRent_Period_GTE",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "GeoMap_MarketRent_NumberOfOffers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CrawlerEntryIds_JsonArray",
						"type": "nvarchar"
					},
					{
						"name": "ScrapingDay",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "AskingPrice",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IsOnline",
						"type": "bit"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "LastSeenDay",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UsableArea",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GeomapId",
						"type": "varchar"
					},
					{
						"name": "AdditionalCosts",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().sinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataPipelineSQLTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataPipelineTest_KadasterRawInputStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataPipelineSQLTest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "KadasterRawInputStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataPipelineSQLTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_taf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "GeoMapTest",
					"table": "results_2020-01-01_2020-04-01"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FundaTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_sql_server_test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FundaTest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_sql_server_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeoMapRawInput_DataPipelineTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_sql_server_test",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geomap"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "GeoMapRawImport"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_sql_server_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeomapJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geomap"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.zip",
						"container": "geomap-data"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"crawlerObject": {
							"type": "object",
							"properties": {
								"kaufMiete": {
									"type": "string"
								},
								"lage": {
									"type": "object",
									"properties": {
										"ort": {
											"type": "string"
										},
										"geoLongitude": {
											"type": "number"
										},
										"geoLatitude": {
											"type": "number"
										},
										"strasse": {
											"type": "string"
										},
										"bundesland": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"stadtteilOrtsteil": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"bezirk": {
											"type": "string"
										}
									}
								},
								"anbieter": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"kontaktEmail": {
												"type": "string"
											},
											"strasse": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"anbieterGewerblich": {
												"type": "boolean"
											},
											"stadt": {
												"type": "string"
											},
											"fax": {
												"type": "string"
											},
											"kontaktUrl": {
												"type": "string"
											},
											"firma": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"telefon1": {
												"type": "string"
											},
											"plz": {
												"type": "string"
											}
										}
									}
								},
								"objektTyp": {
									"type": "string"
								},
								"angebotsInformationen": {
									"type": "object",
									"properties": {
										"titel": {
											"type": "string"
										},
										"verfugbarAbText": {
											"type": "string"
										},
										"portalUrl": {
											"type": "string"
										},
										"medien": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"mediaArt": {
														"type": "string"
													},
													"originUrl": {
														"type": "string"
													},
													"mediaTyp": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"verfugbarAb": {
											"type": "string"
										},
										"anbieterObjektId": {
											"type": "string"
										},
										"onlineSeitLautPortal": {
											"type": "string"
										},
										"beschreibungen": {
											"type": "object",
											"properties": {
												"LAGE": {
													"type": "string"
												},
												"BESCHREIBUNG": {
													"type": "string"
												},
												"AUSSTATTUNG": {
													"type": "string"
												},
												"SONSTIGES": {
													"type": "string"
												}
											}
										}
									}
								},
								"objektTypText": {
									"type": "string"
								},
								"objektEigenschaften": {
									"type": "object",
									"properties": {
										"heizungsart": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"energieausweis": {
											"type": "object",
											"properties": {
												"ausweisTyp": {
													"type": "string"
												},
												"energieKennwerte": {
													"type": "object",
													"properties": {
														"ENERGIEKENNWERT": {
															"type": "object",
															"properties": {
																"KennwertKlasse": {
																	"type": "string"
																},
																"kennwert": {
																	"type": "number"
																},
																"KennwertKlasseText": {
																	"type": "string"
																}
															}
														}
													}
												},
												"ausweisInfo": {
													"type": "string"
												}
											}
										},
										"anzahlen": {
											"type": "object",
											"properties": {
												"ZIMMER": {
													"type": "number"
												},
												"ETAGEN": {
													"type": "number"
												},
												"BADEZIMMER": {
													"type": "number"
												},
												"STELLPLAETZE": {
													"type": "number"
												},
												"SCHLAFZIMMER": {
													"type": "number"
												}
											}
										},
										"boden": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"energieträger": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"denkmalschutz": {
											"type": "boolean"
										},
										"flächen": {
											"type": "object",
											"properties": {
												"flächeValues": {
													"type": "object",
													"properties": {
														"Wohnflaeche": {
															"type": "number"
														},
														"Nutzflaeche": {
															"type": "number"
														},
														"Grundstuecksflaeche": {
															"type": "number"
														}
													}
												}
											}
										},
										"sonstiges": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"etageText": {
											"type": "string"
										},
										"stellplatz": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"möbliert": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"saniert": {
											"type": "boolean"
										},
										"zustand": {
											"type": "string"
										},
										"ausstattungsQualität": {
											"type": "string"
										},
										"etage": {
											"type": "number"
										},
										"küche": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"balkonTerrasse": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"jahreszahlen": {
											"type": "object",
											"properties": {
												"SANIERUNG": {
													"type": "integer"
												},
												"BAUJAHR": {
													"type": "integer"
												}
											}
										},
										"keller": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"aufzug": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"lageEinheit": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"erstbezug": {
											"type": "boolean"
										},
										"sanitär": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"objektArt": {
									"type": "string"
								},
								"preise": {
									"type": "object",
									"properties": {
										"preisTexte": {
											"type": "object",
											"properties": {
												"NebenkostenProMonat": {
													"type": "string"
												},
												"MieteProMonatOhneNebenkosten": {
													"type": "string"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "string"
												},
												"MietKaution": {
													"type": "string"
												},
												"HeizkostenProMonat": {
													"type": "string"
												},
												"MieteProMonatProStellplatz": {
													"type": "string"
												}
											}
										},
										"currency": {
											"type": "string"
										},
										"preisValues": {
											"type": "object",
											"properties": {
												"NebenkostenProMonat": {
													"type": "number"
												},
												"MietKaution": {
													"type": "number"
												},
												"MieteProMonatOhneNebenkosten": {
													"type": "number"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "number"
												},
												"HeizkostenProMonat": {
													"type": "number"
												},
												"MieteProMonatProStellplatz": {
													"type": "number"
												}
											}
										},
										"heizkostenInNebenkostenEnthalten": {
											"type": "boolean"
										}
									}
								},
								"addr": {
									"type": "object",
									"properties": {
										"stadtteil": {
											"type": "string"
										},
										"stadtbezirk": {
											"type": "string"
										},
										"strasse": {
											"type": "string"
										},
										"parentIds": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"accuracy": {
											"type": "string"
										},
										"ort": {
											"type": "string"
										},
										"stadtteilId": {
											"type": "string"
										},
										"landId": {
											"type": "string"
										},
										"bundesland": {
											"type": "string"
										},
										"bundeslandId": {
											"type": "string"
										},
										"hausnummer": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"location": {
											"type": "object",
											"properties": {
												"lon": {
													"type": "number"
												},
												"lat": {
													"type": "number"
												}
											}
										},
										"ortId": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"stadtbezirkId": {
											"type": "string"
										},
										"kreisId": {
											"type": "string"
										},
										"kreis": {
											"type": "string"
										},
										"ortsteilId": {
											"type": "string"
										},
										"ortsteil": {
											"type": "string"
										}
									}
								}
							}
						},
						"firstSeenDay": {
							"type": "string"
						},
						"daysOnline": {
							"type": "integer"
						},
						"preisProQm": {
							"type": "number"
						},
						"onlineRanges": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"lt": {
										"type": "string"
									},
									"gte": {
										"type": "string"
									}
								}
							}
						},
						"crawlerIdsEntryIds": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"firstSeenDay": {
										"type": "string"
									},
									"portalUrl": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"lastUpdatedDay": {
										"type": "string"
									}
								}
							}
						},
						"eventDay": {
							"type": "string"
						},
						"preis": {
							"type": "number"
						},
						"online": {
							"type": "boolean"
						},
						"state": {
							"type": "string"
						},
						"lastSeenDay": {
							"type": "string"
						},
						"nutzflaeche": {
							"type": "number"
						},
						"nebenkosten": {
							"type": "object",
							"properties": {
								"Nebenkosten": {
									"type": "number"
								}
							}
						},
						"groupId": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeomapJson_Generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceContainer": {
						"type": "string",
						"defaultValue": "geomap-data"
					},
					"SourceFileName": {
						"type": "string",
						"defaultValue": "*.zip"
					}
				},
				"folder": {
					"name": "Geomap"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().SourceFileName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"crawlerObject": {
							"type": "object",
							"properties": {
								"kaufMiete": {
									"type": "string"
								},
								"lage": {
									"type": "object",
									"properties": {
										"ort": {
											"type": "string"
										},
										"geoLongitude": {
											"type": "number"
										},
										"geoLatitude": {
											"type": "number"
										},
										"strasse": {
											"type": "string"
										},
										"bundesland": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"stadtteilOrtsteil": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"bezirk": {
											"type": "string"
										}
									}
								},
								"anbieter": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"kontaktEmail": {
												"type": "string"
											},
											"strasse": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"anbieterGewerblich": {
												"type": "boolean"
											},
											"stadt": {
												"type": "string"
											},
											"fax": {
												"type": "string"
											},
											"kontaktUrl": {
												"type": "string"
											},
											"firma": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"telefon1": {
												"type": "string"
											},
											"plz": {
												"type": "string"
											}
										}
									}
								},
								"objektTyp": {
									"type": "string"
								},
								"angebotsInformationen": {
									"type": "object",
									"properties": {
										"titel": {
											"type": "string"
										},
										"verfugbarAbText": {
											"type": "string"
										},
										"portalUrl": {
											"type": "string"
										},
										"medien": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"mediaArt": {
														"type": "string"
													},
													"originUrl": {
														"type": "string"
													},
													"mediaTyp": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"verfugbarAb": {
											"type": "string"
										},
										"anbieterObjektId": {
											"type": "string"
										},
										"onlineSeitLautPortal": {
											"type": "string"
										},
										"beschreibungen": {
											"type": "object",
											"properties": {
												"LAGE": {
													"type": "string"
												},
												"BESCHREIBUNG": {
													"type": "string"
												},
												"AUSSTATTUNG": {
													"type": "string"
												},
												"SONSTIGES": {
													"type": "string"
												}
											}
										}
									}
								},
								"objektTypText": {
									"type": "string"
								},
								"objektEigenschaften": {
									"type": "object",
									"properties": {
										"heizungsart": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"energieausweis": {
											"type": "object",
											"properties": {
												"ausweisTyp": {
													"type": "string"
												},
												"energieKennwerte": {
													"type": "object",
													"properties": {
														"ENERGIEKENNWERT": {
															"type": "object",
															"properties": {
																"KennwertKlasse": {
																	"type": "string"
																},
																"kennwert": {
																	"type": "number"
																},
																"KennwertKlasseText": {
																	"type": "string"
																}
															}
														}
													}
												},
												"ausweisInfo": {
													"type": "string"
												}
											}
										},
										"anzahlen": {
											"type": "object",
											"properties": {
												"ZIMMER": {
													"type": "number"
												},
												"ETAGEN": {
													"type": "number"
												},
												"BADEZIMMER": {
													"type": "number"
												},
												"STELLPLAETZE": {
													"type": "number"
												},
												"SCHLAFZIMMER": {
													"type": "number"
												}
											}
										},
										"boden": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"energieträger": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"denkmalschutz": {
											"type": "boolean"
										},
										"flächen": {
											"type": "object",
											"properties": {
												"flächeValues": {
													"type": "object",
													"properties": {
														"Wohnflaeche": {
															"type": "number"
														},
														"Nutzflaeche": {
															"type": "number"
														},
														"Grundstuecksflaeche": {
															"type": "number"
														}
													}
												}
											}
										},
										"sonstiges": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"etageText": {
											"type": "string"
										},
										"stellplatz": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"möbliert": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"saniert": {
											"type": "boolean"
										},
										"zustand": {
											"type": "string"
										},
										"ausstattungsQualität": {
											"type": "string"
										},
										"etage": {
											"type": "number"
										},
										"küche": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"balkonTerrasse": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"jahreszahlen": {
											"type": "object",
											"properties": {
												"SANIERUNG": {
													"type": "integer"
												},
												"BAUJAHR": {
													"type": "integer"
												}
											}
										},
										"keller": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"aufzug": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"lageEinheit": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"erstbezug": {
											"type": "boolean"
										},
										"sanitär": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"objektArt": {
									"type": "string"
								},
								"preise": {
									"type": "object",
									"properties": {
										"preisTexte": {
											"type": "object",
											"properties": {
												"NebenkostenProMonat": {
													"type": "string"
												},
												"MieteProMonatOhneNebenkosten": {
													"type": "string"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "string"
												},
												"MietKaution": {
													"type": "string"
												},
												"HeizkostenProMonat": {
													"type": "string"
												},
												"MieteProMonatProStellplatz": {
													"type": "string"
												}
											}
										},
										"currency": {
											"type": "string"
										},
										"preisValues": {
											"type": "object",
											"properties": {
												"NebenkostenProMonat": {
													"type": "number"
												},
												"MietKaution": {
													"type": "number"
												},
												"MieteProMonatOhneNebenkosten": {
													"type": "number"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "number"
												},
												"HeizkostenProMonat": {
													"type": "number"
												},
												"MieteProMonatProStellplatz": {
													"type": "number"
												}
											}
										},
										"heizkostenInNebenkostenEnthalten": {
											"type": "boolean"
										}
									}
								},
								"addr": {
									"type": "object",
									"properties": {
										"stadtteil": {
											"type": "string"
										},
										"stadtbezirk": {
											"type": "string"
										},
										"strasse": {
											"type": "string"
										},
										"parentIds": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"accuracy": {
											"type": "string"
										},
										"ort": {
											"type": "string"
										},
										"stadtteilId": {
											"type": "string"
										},
										"landId": {
											"type": "string"
										},
										"bundesland": {
											"type": "string"
										},
										"bundeslandId": {
											"type": "string"
										},
										"hausnummer": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"location": {
											"type": "object",
											"properties": {
												"lon": {
													"type": "number"
												},
												"lat": {
													"type": "number"
												}
											}
										},
										"ortId": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"stadtbezirkId": {
											"type": "string"
										},
										"kreisId": {
											"type": "string"
										},
										"kreis": {
											"type": "string"
										},
										"ortsteilId": {
											"type": "string"
										},
										"ortsteil": {
											"type": "string"
										}
									}
								}
							}
						},
						"firstSeenDay": {
							"type": "string"
						},
						"daysOnline": {
							"type": "integer"
						},
						"preisProQm": {
							"type": "number"
						},
						"onlineRanges": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"lt": {
										"type": "string"
									},
									"gte": {
										"type": "string"
									}
								}
							}
						},
						"crawlerIdsEntryIds": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"firstSeenDay": {
										"type": "string"
									},
									"portalUrl": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"lastUpdatedDay": {
										"type": "string"
									}
								}
							}
						},
						"eventDay": {
							"type": "string"
						},
						"preis": {
							"type": "number"
						},
						"online": {
							"type": "boolean"
						},
						"state": {
							"type": "string"
						},
						"lastSeenDay": {
							"type": "string"
						},
						"nutzflaeche": {
							"type": "number"
						},
						"nebenkosten": {
							"type": "object",
							"properties": {
								"Nebenkosten": {
									"type": "number"
								}
							}
						},
						"groupId": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kadaster2019')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Kadaster Helper.xlsx",
						"folderPath": "nl/kadaster/to_upload/k2019",
						"container": "data-pipeline-input-files"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "CADOV_CADOI_ADRESSEERBR_OBJ_ID",
						"type": "String"
					},
					{
						"name": "DATUM",
						"type": "String"
					},
					{
						"name": "PTT_K",
						"type": "String"
					},
					{
						"name": "PLTSNAAM",
						"type": "String"
					},
					{
						"name": "STRAAT",
						"type": "String"
					},
					{
						"name": "HUISNR",
						"type": "String"
					},
					{
						"name": "TOEV",
						"type": "String"
					},
					{
						"name": "WONINGTYPE",
						"type": "String"
					},
					{
						"name": "X_COORD",
						"type": "String"
					},
					{
						"name": "Y_COORD",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K",
						"type": "String"
					},
					{
						"name": "GROOTTE",
						"type": "String"
					},
					{
						"name": "K_SOM",
						"type": "String"
					},
					{
						"name": "IND_M_O_G",
						"type": "String"
					},
					{
						"name": "ZAK_R",
						"type": "String"
					},
					{
						"name": "KULT_TEKST",
						"type": "String"
					},
					{
						"name": "OBJ_BEL",
						"type": "String"
					},
					{
						"name": "ERFDIENSTBH",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K1",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K1",
						"type": "String"
					},
					{
						"name": "INDEX_LR1",
						"type": "String"
					},
					{
						"name": "GROOTTE1",
						"type": "String"
					},
					{
						"name": "PTT_K1",
						"type": "String"
					},
					{
						"name": "PLTSNAAM1",
						"type": "String"
					},
					{
						"name": "STRAAT1",
						"type": "String"
					},
					{
						"name": "HUISNR1",
						"type": "String"
					},
					{
						"name": "TOEV1",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K2",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K2",
						"type": "String"
					},
					{
						"name": "INDEX_LR2",
						"type": "String"
					},
					{
						"name": "GROOTTE2",
						"type": "String"
					},
					{
						"name": "PTT_K2",
						"type": "String"
					},
					{
						"name": "PLTSNAAM2",
						"type": "String"
					},
					{
						"name": "STRAAT2",
						"type": "String"
					},
					{
						"name": "HUISNR2",
						"type": "String"
					},
					{
						"name": "TOEV2",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K3",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K3",
						"type": "String"
					},
					{
						"name": "INDEX_LR3",
						"type": "String"
					},
					{
						"name": "GROOTTE3",
						"type": "String"
					},
					{
						"name": "PTT_K3",
						"type": "String"
					},
					{
						"name": "PLTSNAAM3",
						"type": "String"
					},
					{
						"name": "STRAAT3",
						"type": "String"
					},
					{
						"name": "HUISNR3",
						"type": "String"
					},
					{
						"name": "TOEV3",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K4",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K4",
						"type": "String"
					},
					{
						"name": "INDEX_LR4",
						"type": "String"
					},
					{
						"name": "GROOTTE4",
						"type": "String"
					},
					{
						"name": "PTT_K4",
						"type": "String"
					},
					{
						"name": "PLTSNAAM4",
						"type": "String"
					},
					{
						"name": "STRAAT4",
						"type": "String"
					},
					{
						"name": "HUISNR4",
						"type": "String"
					},
					{
						"name": "TOEV4",
						"type": "String"
					},
					{
						"name": "IND_HUURDER",
						"type": "String"
					},
					{
						"name": "BEWARINGKODE",
						"type": "String"
					},
					{
						"name": "STUK_ID",
						"type": "String"
					},
					{
						"name": "MUT_SRT",
						"type": "String"
					},
					{
						"name": "BURGEM_NR",
						"type": "String"
					},
					{
						"name": "OBJECT",
						"type": "String"
					},
					{
						"name": "NNP_1E_VERKR",
						"type": "String"
					},
					{
						"name": "NNP_1E_VERVR",
						"type": "String"
					},
					{
						"name": "FAM_TRANS",
						"type": "String"
					},
					{
						"name": "PHT",
						"type": "String"
					},
					{
						"name": "KAD_GEM",
						"type": "String"
					},
					{
						"name": "SECTIE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kadaster_archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "nl/kadaster/uploaded",
						"container": "data-pipeline-input-files"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OV15_Input_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Catella_OV15*.csv",
						"folderPath": "nl/kadaster/to_upload",
						"container": "data-pipeline-input-files"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\"\"",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATUM",
						"type": "String"
					},
					{
						"name": "PTT_K",
						"type": "String"
					},
					{
						"name": "PLTSNAAM",
						"type": "String"
					},
					{
						"name": "STRAAT",
						"type": "String"
					},
					{
						"name": "HUISNR",
						"type": "String"
					},
					{
						"name": "TOEV",
						"type": "String"
					},
					{
						"name": "WONINGTYPE",
						"type": "String"
					},
					{
						"name": "X_COORD",
						"type": "String"
					},
					{
						"name": "Y_COORD",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K",
						"type": "String"
					},
					{
						"name": "GROOTTE",
						"type": "String"
					},
					{
						"name": "K_SOM",
						"type": "String"
					},
					{
						"name": "IND_M_O_G",
						"type": "String"
					},
					{
						"name": "ZAK_R",
						"type": "String"
					},
					{
						"name": "KULT_TEKST",
						"type": "String"
					},
					{
						"name": "OBJ_BEL",
						"type": "String"
					},
					{
						"name": "ERFDIENSTBH",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K1",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K1",
						"type": "String"
					},
					{
						"name": "INDEX_LR1",
						"type": "String"
					},
					{
						"name": "GROOTTE1",
						"type": "String"
					},
					{
						"name": "PTT_K1",
						"type": "String"
					},
					{
						"name": "PLTSNAAM1",
						"type": "String"
					},
					{
						"name": "STRAAT1",
						"type": "String"
					},
					{
						"name": "HUISNR1",
						"type": "String"
					},
					{
						"name": "TOEV1",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K2",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K2",
						"type": "String"
					},
					{
						"name": "INDEX_LR2",
						"type": "String"
					},
					{
						"name": "GROOTTE2",
						"type": "String"
					},
					{
						"name": "PTT_K2",
						"type": "String"
					},
					{
						"name": "PLTSNAAM2",
						"type": "String"
					},
					{
						"name": "STRAAT2",
						"type": "String"
					},
					{
						"name": "HUISNR2",
						"type": "String"
					},
					{
						"name": "TOEV2",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K3",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K3",
						"type": "String"
					},
					{
						"name": "INDEX_LR3",
						"type": "String"
					},
					{
						"name": "GROOTTE3",
						"type": "String"
					},
					{
						"name": "PTT_K3",
						"type": "String"
					},
					{
						"name": "PLTSNAAM3",
						"type": "String"
					},
					{
						"name": "STRAAT3",
						"type": "String"
					},
					{
						"name": "HUISNR3",
						"type": "String"
					},
					{
						"name": "TOEV3",
						"type": "String"
					},
					{
						"name": "KULT_GEB_K4",
						"type": "String"
					},
					{
						"name": "KULT_ONGEB_K4",
						"type": "String"
					},
					{
						"name": "INDEX_LR4",
						"type": "String"
					},
					{
						"name": "GROOTTE4",
						"type": "String"
					},
					{
						"name": "PTT_K4",
						"type": "String"
					},
					{
						"name": "PLTSNAAM4",
						"type": "String"
					},
					{
						"name": "STRAAT4",
						"type": "String"
					},
					{
						"name": "HUISNR4",
						"type": "String"
					},
					{
						"name": "TOEV4",
						"type": "String"
					},
					{
						"name": "IND_HUURDER",
						"type": "String"
					},
					{
						"name": "BEWARINGKODE",
						"type": "String"
					},
					{
						"name": "STUK_ID",
						"type": "String"
					},
					{
						"name": "MUT_SRT",
						"type": "String"
					},
					{
						"name": "BURGEM_NR",
						"type": "String"
					},
					{
						"name": "OBJECT",
						"type": "String"
					},
					{
						"name": "NNP_1E_VERKR",
						"type": "String"
					},
					{
						"name": "NNP_1E_VERVR",
						"type": "String"
					},
					{
						"name": "FAM_TRANS",
						"type": "String"
					},
					{
						"name": "PHT",
						"type": "String"
					},
					{
						"name": "KAD_GEM",
						"type": "String"
					},
					{
						"name": "SECTIE",
						"type": "String"
					},
					{
						"name": "BAG_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OV20_Input_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Catella_OV20*.csv",
						"folderPath": "nl/kadaster/to_upload",
						"container": "data-pipeline-input-files"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OVER_BEW_K",
						"type": "String"
					},
					{
						"name": "STUK_ONTV_DATUM",
						"type": "String"
					},
					{
						"name": "OVER_STUK",
						"type": "String"
					},
					{
						"name": "VV_NAAM",
						"type": "String"
					},
					{
						"name": "VV_WOONPLAATS",
						"type": "String"
					},
					{
						"name": "NNP_VV_K",
						"type": "String"
					},
					{
						"name": "VK_NAAM",
						"type": "String"
					},
					{
						"name": "VK_WOONPLAATS",
						"type": "String"
					},
					{
						"name": "NNP_VK_K",
						"type": "String"
					},
					{
						"name": "OBJE_MUT_SRT_K",
						"type": "String"
					},
					{
						"name": "IND_FAM_TRANS",
						"type": "String"
					},
					{
						"name": "OBJE_OBJEKT",
						"type": "String"
					},
					{
						"name": "KAD_GEM",
						"type": "String"
					},
					{
						"name": "SECTIE",
						"type": "String"
					},
					{
						"name": "PERCEELNR",
						"type": "String"
					},
					{
						"name": "INDEXLT",
						"type": "String"
					},
					{
						"name": "INDEXNR",
						"type": "String"
					},
					{
						"name": "OBJE_GROOTTE",
						"type": "String"
					},
					{
						"name": "OBJE_KOOP_SOM",
						"type": "String"
					},
					{
						"name": "OBJE_IND_MEER_O_G",
						"type": "String"
					},
					{
						"name": "OBJE_BURG_GEM_NR",
						"type": "String"
					},
					{
						"name": "OBJE_BURG_GEM_NAAM",
						"type": "String"
					},
					{
						"name": "OBJE_KULT_ONGEB_K",
						"type": "String"
					},
					{
						"name": "ZAKR_ZR_K",
						"type": "String"
					},
					{
						"name": "OBJB_OBJ_BEL_K",
						"type": "String"
					},
					{
						"name": "OBJE_X_COORD",
						"type": "String"
					},
					{
						"name": "OBJE_Y_COORD",
						"type": "String"
					},
					{
						"name": "OBJE_KULT_TEXT",
						"type": "String"
					},
					{
						"name": "OBJA_KULT_GEB_K",
						"type": "String"
					},
					{
						"name": "OBJA_PLTS_NAAM",
						"type": "String"
					},
					{
						"name": "OBJA_STRAAT",
						"type": "String"
					},
					{
						"name": "OBJA_HUIS_NR",
						"type": "String"
					},
					{
						"name": "OBJA_HUIS_LR",
						"type": "String"
					},
					{
						"name": "OBJA_TOEVOEGING",
						"type": "String"
					},
					{
						"name": "OBJA_PTT_K",
						"type": "String"
					},
					{
						"name": "PHT",
						"type": "String"
					},
					{
						"name": "OVER_ID",
						"type": "String"
					},
					{
						"name": "BAG_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_taf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFactoryBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "results_2020-01-01_2020-04-01.json",
						"folderPath": "de/geomap-raw",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"crawlerObject": {
							"type": "object",
							"properties": {
								"kaufMiete": {
									"type": "string"
								},
								"lage": {
									"type": "object",
									"properties": {
										"ort": {
											"type": "string"
										},
										"landName": {
											"type": "string"
										},
										"geoLongitude": {
											"type": "number"
										},
										"geoLatitude": {
											"type": "number"
										},
										"bundesland": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"strasse": {
											"type": "string"
										},
										"stadtteilOrtsteil": {
											"type": "string"
										}
									}
								},
								"anbieter": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"anbieterGewerblich": {
												"type": "boolean"
											}
										}
									}
								},
								"angebotsInformationen": {
									"type": "object",
									"properties": {
										"titel": {
											"type": "string"
										},
										"onlineSeitLautPortalText": {
											"type": "string"
										},
										"portalUrl": {
											"type": "string"
										},
										"onlineSeitLautPortal": {
											"type": "string"
										},
										"beschreibungen": {
											"type": "object",
											"properties": {
												"BESCHREIBUNG": {
													"type": "string"
												},
												"LAGE": {
													"type": "string"
												},
												"SONSTIGES": {
													"type": "string"
												},
												"AUSSTATTUNG": {
													"type": "string"
												}
											}
										},
										"verfugbarAbText": {
											"type": "string"
										},
										"medien": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"mediaArt": {
														"type": "string"
													},
													"originUrl": {
														"type": "string"
													},
													"mediaTyp": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"verfugbarAb": {
											"type": "string"
										}
									}
								},
								"objektEigenschaften": {
									"type": "object",
									"properties": {
										"anzahlen": {
											"type": "object",
											"properties": {
												"ZIMMER": {
													"type": "number"
												},
												"BADEZIMMER": {
													"type": "number"
												},
												"SCHLAFZIMMER": {
													"type": "number"
												},
												"ETAGEN": {
													"type": "number"
												}
											}
										},
										"flächen": {
											"type": "object",
											"properties": {
												"flächeValues": {
													"type": "object",
													"properties": {
														"Wohnflaeche": {
															"type": "number"
														},
														"Grundstuecksflaeche": {
															"type": "number"
														}
													}
												}
											}
										},
										"sonstiges": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"heizungsart": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"etageText": {
											"type": "string"
										},
										"stellplatz": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"energieträger": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"saniert": {
											"type": "boolean"
										},
										"energieausweis": {
											"type": "object",
											"properties": {
												"ausweisTyp": {
													"type": "string"
												},
												"ausweisInfo": {
													"type": "string"
												},
												"energieKennwerte": {
													"type": "object",
													"properties": {
														"ENERGIEKENNWERT": {
															"type": "object",
															"properties": {
																"KennwertKlasse": {
																	"type": "string"
																},
																"kennwert": {
																	"type": "number"
																},
																"KennwertKlasseText": {
																	"type": "string"
																}
															}
														}
													}
												}
											}
										},
										"etage": {
											"type": "number"
										},
										"lageEinheit": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"küche": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"balkonTerrasse": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"jahreszahlen": {
											"type": "object",
											"properties": {
												"SANIERUNG": {
													"type": "integer"
												},
												"BAUJAHR": {
													"type": "integer"
												}
											}
										},
										"keller": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"aufzug": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"sanitär": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"möbliert": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"objektArt": {
									"type": "string"
								},
								"preise": {
									"type": "object",
									"properties": {
										"preisTexte": {
											"type": "object",
											"properties": {
												"MieteProMonatOhneNebenkosten": {
													"type": "string"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "string"
												},
												"NebenkostenProMonat": {
													"type": "string"
												},
												"MietKaution": {
													"type": "string"
												},
												"HeizkostenProMonat": {
													"type": "string"
												},
												"MieteProMonatProStellplatz": {
													"type": "string"
												}
											}
										},
										"currency": {
											"type": "string"
										},
										"preisValues": {
											"type": "object",
											"properties": {
												"MieteProMonatOhneNebenkosten": {
													"type": "number"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "number"
												},
												"NebenkostenProMonat": {
													"type": "number"
												},
												"MieteProMonatProStellplatz": {
													"type": "number"
												},
												"MietKaution": {
													"type": "number"
												},
												"HeizkostenProMonat": {
													"type": "number"
												}
											}
										},
										"heizkostenInNebenkostenEnthalten": {
											"type": "boolean"
										}
									}
								},
								"addr": {
									"type": "object",
									"properties": {
										"ort": {
											"type": "string"
										},
										"kreisId": {
											"type": "string"
										},
										"kreis": {
											"type": "string"
										},
										"landId": {
											"type": "string"
										},
										"parentIds": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"accuracy": {
											"type": "string"
										},
										"location": {
											"type": "object",
											"properties": {
												"lon": {
													"type": "number"
												},
												"lat": {
													"type": "number"
												}
											}
										},
										"ortId": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"stadtteil": {
											"type": "string"
										},
										"stadtbezirk": {
											"type": "string"
										},
										"strasse": {
											"type": "string"
										},
										"stadtteilId": {
											"type": "string"
										},
										"hausnummer": {
											"type": "string"
										},
										"stadtbezirkId": {
											"type": "string"
										}
									}
								},
								"objektTyp": {
									"type": "string"
								},
								"objektTypText": {
									"type": "string"
								}
							}
						},
						"firstSeenDay": {
							"type": "string"
						},
						"daysOnline": {
							"type": "integer"
						},
						"preisProQm": {
							"type": "number"
						},
						"onlineRanges": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"lt": {
										"type": "string"
									},
									"gte": {
										"type": "string"
									}
								}
							}
						},
						"crawlerIdsEntryIds": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"firstSeenDay": {
										"type": "string"
									},
									"portalUrl": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"lastUpdatedDay": {
										"type": "string"
									}
								}
							}
						},
						"eventDay": {
							"type": "string"
						},
						"preis": {
							"type": "number"
						},
						"online": {
							"type": "boolean"
						},
						"state": {
							"type": "string"
						},
						"lastSeenDay": {
							"type": "string"
						},
						"nutzflaeche": {
							"type": "number"
						},
						"groupId": {
							"type": "string"
						},
						"nebenkosten": {
							"type": "object",
							"properties": {
								"Nebenkosten": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFactoryBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WH_FTP_csv_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WHSftpServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/data/Input"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WHSftpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WH_archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "nl/Watson_Holmes/uploaded",
						"container": "data-pipeline-input-files"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WH_input_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CSV file with scrapped data from Watson and Holmes",
				"linkedServiceName": {
					"referenceName": "DataFactoryBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "nl/Watson_Holmes/to_upload",
						"container": "data-pipeline-input-files"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AanmeldDatum",
						"type": "String"
					},
					{
						"name": "AantalBadkamers",
						"type": "String"
					},
					{
						"name": "AantalKamers",
						"type": "String"
					},
					{
						"name": "AantalSlaapKamers",
						"type": "String"
					},
					{
						"name": "AantalVerdiepingen",
						"type": "String"
					},
					{
						"name": "ActueleStatus",
						"type": "String"
					},
					{
						"name": "Adres",
						"type": "String"
					},
					{
						"name": "AdresId",
						"type": "String"
					},
					{
						"name": "AfwerkingGemeubileerd",
						"type": "String"
					},
					{
						"name": "AfwerkingGestoffeerd",
						"type": "String"
					},
					{
						"name": "AfwerkingKaleVerhuur",
						"type": "String"
					},
					{
						"name": "Bouwjaar",
						"type": "String"
					},
					{
						"name": "Bouwnummer",
						"type": "String"
					},
					{
						"name": "Bouwperiode",
						"type": "String"
					},
					{
						"name": "Bouwvorm",
						"type": "String"
					},
					{
						"name": "Bron",
						"type": "String"
					},
					{
						"name": "BuurtId",
						"type": "String"
					},
					{
						"name": "BuurtNaam",
						"type": "String"
					},
					{
						"name": "ConditieKostenKoper",
						"type": "String"
					},
					{
						"name": "ConditieVrijOpNaam",
						"type": "String"
					},
					{
						"name": "Energielabel",
						"type": "String"
					},
					{
						"name": "ErfPacht",
						"type": "String"
					},
					{
						"name": "ErfPachtAfgekochtTot",
						"type": "String"
					},
					{
						"name": "ErfPachtDuur",
						"type": "String"
					},
					{
						"name": "ErfPachtPerJaar",
						"type": "String"
					},
					{
						"name": "FotoUrl",
						"type": "String"
					},
					{
						"name": "GebruiksOppervlakte",
						"type": "String"
					},
					{
						"name": "GemeenteId",
						"type": "String"
					},
					{
						"name": "GemeenteNaam",
						"type": "String"
					},
					{
						"name": "Huisnummer",
						"type": "String"
					},
					{
						"name": "HuisnummerInclToevoegingen",
						"type": "String"
					},
					{
						"name": "HuurKoop",
						"type": "String"
					},
					{
						"name": "Inhoud",
						"type": "String"
					},
					{
						"name": "IsHuur",
						"type": "String"
					},
					{
						"name": "IsKoop",
						"type": "String"
					},
					{
						"name": "IsVertrouwelijk",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					},
					{
						"name": "Looptijd",
						"type": "String"
					},
					{
						"name": "Makelaar",
						"type": "String"
					},
					{
						"name": "ModelwaardeAVMM2",
						"type": "String"
					},
					{
						"name": "ModelwaardeGeindexeerdeM2",
						"type": "String"
					},
					{
						"name": "ModelwaardeReferentiesM2",
						"type": "String"
					},
					{
						"name": "ModifyDate",
						"type": "String"
					},
					{
						"name": "NieuwbouwProjectID",
						"type": "String"
					},
					{
						"name": "NieuwbouwProjectNaam",
						"type": "String"
					},
					{
						"name": "OnderhoudsStaatBinnen",
						"type": "String"
					},
					{
						"name": "OnderhoudsStaatBuiten",
						"type": "String"
					},
					{
						"name": "OppervlakteTuin",
						"type": "String"
					},
					{
						"name": "Overbieden",
						"type": "String"
					},
					{
						"name": "PandId",
						"type": "String"
					},
					{
						"name": "Parkeer",
						"type": "String"
					},
					{
						"name": "PerceelOppervlakte",
						"type": "String"
					},
					{
						"name": "Postcode",
						"type": "String"
					},
					{
						"name": "ServiceKosten",
						"type": "String"
					},
					{
						"name": "StatusActueelInAanbod",
						"type": "String"
					},
					{
						"name": "StatusIngetrokken",
						"type": "String"
					},
					{
						"name": "StatusOnderOptie",
						"type": "String"
					},
					{
						"name": "StatusTransactie",
						"type": "String"
					},
					{
						"name": "StatusTransactieBekend",
						"type": "String"
					},
					{
						"name": "StatusTransactieOnderVoorbehoud",
						"type": "String"
					},
					{
						"name": "Straatnaam",
						"type": "String"
					},
					{
						"name": "TransactieConditie",
						"type": "String"
					},
					{
						"name": "TransactiedatumOndertekeningAkte",
						"type": "String"
					},
					{
						"name": "TransactiedatumOnderVoorbehoud",
						"type": "String"
					},
					{
						"name": "TransactiedatumTransport",
						"type": "String"
					},
					{
						"name": "TransactieId",
						"type": "String"
					},
					{
						"name": "Transactieprijs",
						"type": "String"
					},
					{
						"name": "TransactieprijsM2",
						"type": "String"
					},
					{
						"name": "TransactieprijsM2Huur",
						"type": "String"
					},
					{
						"name": "TransactieprijsM2Koop",
						"type": "String"
					},
					{
						"name": "TransactieSpecificatie",
						"type": "String"
					},
					{
						"name": "Tuin",
						"type": "String"
					},
					{
						"name": "VerblijfsobjectId",
						"type": "String"
					},
					{
						"name": "Vraagprijs",
						"type": "String"
					},
					{
						"name": "VraagprijsConditie",
						"type": "String"
					},
					{
						"name": "VraagprijsM2",
						"type": "String"
					},
					{
						"name": "VraagprijsM2Huur",
						"type": "String"
					},
					{
						"name": "VraagprijsM2Koop",
						"type": "String"
					},
					{
						"name": "VraagprijsOorspronkelijk",
						"type": "String"
					},
					{
						"name": "VraagprijsOorspronkelijkM2",
						"type": "String"
					},
					{
						"name": "VraagprijsSpecificatie",
						"type": "String"
					},
					{
						"name": "WijkId",
						"type": "String"
					},
					{
						"name": "WijkNaam",
						"type": "String"
					},
					{
						"name": "WoningSubType",
						"type": "String"
					},
					{
						"name": "WoningType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFactoryBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/funda_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "real_estate_sample.json",
						"folderPath": "nl",
						"container": "data-pipeline-input-files"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"description": {
							"type": "string"
						},
						"itemCount": {
							"type": "integer"
						},
						"result": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"objectID": {
										"type": "integer"
									},
									"objectUrl": {
										"type": "string"
									},
									"address": {
										"type": "string"
									},
									"jsondata_address_street": {
										"type": "null"
									},
									"jsondata_zipcode": {
										"type": "string"
									},
									"jsondata_city": {
										"type": "string"
									},
									"jsondata_province": {
										"type": "string"
									},
									"jsondata_address_housenumber": {
										"type": "string"
									},
									"jsondata_address_housenumber_extension": {
										"type": "string"
									},
									"jsondata_price_buy": {
										"type": "null"
									},
									"jsondata_price_rental": {
										"type": "number"
									},
									"jsondata_squaremeters": {
										"type": "null"
									},
									"jsondata_energieklasse": {
										"type": "null"
									},
									"zipCode": {
										"type": "string"
									},
									"city": {
										"type": "string"
									},
									"omschrijving": {
										"type": "string"
									},
									"isExternal": {
										"type": "integer"
									},
									"kenmerkenOverdracht_priceString": {
										"type": "string"
									},
									"kenmerkenOverdracht_price": {
										"type": "number"
									},
									"kenmerkenOverdracht_firstPrice": {
										"type": "null"
									},
									"kenmerkenOverdracht_aangebodenSinds": {
										"type": "string"
									},
									"kenmerkenOverdracht_status": {
										"type": "string"
									},
									"kenmerkenOverdracht_acceptatie": {
										"type": "string"
									},
									"bouw_soortWoonhuis": {
										"type": "string"
									},
									"bouw_soortAppartement": {
										"type": "string"
									},
									"bouw_soortBouw": {
										"type": "string"
									},
									"bouw_bouwjaar": {
										"type": "integer"
									},
									"bouw_soortDak": {
										"type": "string"
									},
									"bouw_specifiek": {
										"type": "string"
									},
									"oppervlakteInhoud_woonoppervlakte": {
										"type": "integer"
									},
									"oppervlakteInhoud_overigeInpandigeRuimte": {
										"type": "integer"
									},
									"oppervlakteInhoud_externeBergRuimte": {
										"type": "integer"
									},
									"oppervlakteInhoud_perceelOppervlakte": {
										"type": "integer"
									},
									"oppervlakteInhoud_inhoud": {
										"type": "integer"
									},
									"indeling_aantalKamersString": {
										"type": "string"
									},
									"Indeling_aantalkamers": {
										"type": "null"
									},
									"Indeling_aantalSlaapkamers": {
										"type": "null"
									},
									"Indeling_aantalBadkamers": {
										"type": "null"
									},
									"Indeling_badkamerVoorzieningen": {
										"type": "string"
									},
									"Indeling_aantalWoonlagen": {
										"type": "null"
									},
									"Indeling_voorzieningen": {
										"type": "string"
									},
									"VVE_bijdrage": {
										"type": "string"
									},
									"VVEChecklist_inschrijving": {
										"type": "string"
									},
									"VVEChecklist_jaarlijkseVergadering": {
										"type": "string"
									},
									"VVEChecklist_periodiekeBijdrage": {
										"type": "string"
									},
									"VVEChecklist_reservefondsAanwezig": {
										"type": "string"
									},
									"VVEChecklist_onderhoudsplan": {
										"type": "string"
									},
									"VVEChecklist_opstalverzekering": {
										"type": "string"
									},
									"Energie_voorlopigEnergieLabel": {
										"type": "string"
									},
									"Energie_isolatie": {
										"type": "string"
									},
									"Energie_verwarming": {
										"type": "string"
									},
									"Energy_warmWater": {
										"type": "string"
									},
									"kadastraleGegevens_oppervlakte": {
										"type": "integer"
									},
									"kadastraleGegevens_eigendomsSituatie": {
										"type": "string"
									},
									"kadastraleGegevens_lasten": {
										"type": "string"
									},
									"buitenRuimte_ligging": {
										"type": "string"
									},
									"buitenRuimte_tuin": {
										"type": "string"
									},
									"buitenRuimte_achtertuin": {
										"type": "integer"
									},
									"buitenRuimte_voorTuin": {
										"type": "integer"
									},
									"Buitenruimte_liggingTuin": {
										"type": "string"
									},
									"Buitenruimte_balkonDakterras": {
										"type": "string"
									},
									"parkeerGelegenheid_soortParkeerGelegenheid": {
										"type": "string"
									},
									"Garage_soortGarage": {
										"type": "string"
									},
									"isRental": {
										"type": "integer"
									},
									"huur_huurPrijsString": {
										"type": "string"
									},
									"huur_huurPrijs": {
										"type": "number"
									},
									"huur_waarborgSomString": {
										"type": "string"
									},
									"bouw_soortAppertement": {
										"type": "null"
									},
									"Energy_cvketel": {
										"type": "string"
									},
									"huur_waarborgSom": {
										"type": "integer"
									},
									"adjusted": {
										"type": "integer"
									},
									"priceHistory": {
										"type": "string"
									},
									"statusHistory": {
										"type": "string"
									},
									"huur_kostenHuurderString": {
										"type": "string"
									},
									"huur_huurOvereenkomst": {
										"type": "string"
									},
									"realEstateAgent_name": {
										"type": "string"
									},
									"realEstateAgent_phone": {
										"type": "string"
									},
									"realEstateAgent_fundaUrl": {
										"type": "string"
									},
									"images": {
										"type": "string"
									},
									"soldFirstForSaleDate": {
										"type": "string"
									},
									"soldSoldDate": {
										"type": "string"
									},
									"id": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap_to_be_uploaded_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.zip",
						"folderPath": "de/geomap/to_upload",
						"container": "data-pipeline-input-files"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"crawlerObject": {
							"type": "object",
							"properties": {
								"kaufMiete": {
									"type": "string"
								},
								"lage": {
									"type": "object",
									"properties": {
										"ort": {
											"type": "string"
										},
										"landName": {
											"type": "string"
										},
										"geoLongitude": {
											"type": "number"
										},
										"geoLatitude": {
											"type": "number"
										},
										"bundesland": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"strasse": {
											"type": "string"
										},
										"stadtteilOrtsteil": {
											"type": "string"
										}
									}
								},
								"anbieter": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"anbieterGewerblich": {
												"type": "boolean"
											}
										}
									}
								},
								"angebotsInformationen": {
									"type": "object",
									"properties": {
										"titel": {
											"type": "string"
										},
										"onlineSeitLautPortalText": {
											"type": "string"
										},
										"portalUrl": {
											"type": "string"
										},
										"onlineSeitLautPortal": {
											"type": "string"
										},
										"beschreibungen": {
											"type": "object",
											"properties": {
												"BESCHREIBUNG": {
													"type": "string"
												},
												"LAGE": {
													"type": "string"
												},
												"SONSTIGES": {
													"type": "string"
												},
												"AUSSTATTUNG": {
													"type": "string"
												}
											}
										},
										"verfugbarAbText": {
											"type": "string"
										},
										"medien": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"mediaArt": {
														"type": "string"
													},
													"originUrl": {
														"type": "string"
													},
													"mediaTyp": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"verfugbarAb": {
											"type": "string"
										}
									}
								},
								"objektEigenschaften": {
									"type": "object",
									"properties": {
										"anzahlen": {
											"type": "object",
											"properties": {
												"ZIMMER": {
													"type": "number"
												},
												"BADEZIMMER": {
													"type": "number"
												},
												"SCHLAFZIMMER": {
													"type": "number"
												},
												"ETAGEN": {
													"type": "number"
												}
											}
										},
										"flächen": {
											"type": "object",
											"properties": {
												"flächeValues": {
													"type": "object",
													"properties": {
														"Wohnflaeche": {
															"type": "number"
														},
														"Grundstuecksflaeche": {
															"type": "number"
														}
													}
												}
											}
										},
										"sonstiges": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"heizungsart": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"etageText": {
											"type": "string"
										},
										"stellplatz": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"energieträger": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"saniert": {
											"type": "boolean"
										},
										"energieausweis": {
											"type": "object",
											"properties": {
												"ausweisTyp": {
													"type": "string"
												},
												"ausweisInfo": {
													"type": "string"
												},
												"energieKennwerte": {
													"type": "object",
													"properties": {
														"ENERGIEKENNWERT": {
															"type": "object",
															"properties": {
																"KennwertKlasse": {
																	"type": "string"
																},
																"kennwert": {
																	"type": "number"
																},
																"KennwertKlasseText": {
																	"type": "string"
																}
															}
														}
													}
												}
											}
										},
										"etage": {
											"type": "number"
										},
										"lageEinheit": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"küche": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"balkonTerrasse": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"jahreszahlen": {
											"type": "object",
											"properties": {
												"SANIERUNG": {
													"type": "integer"
												},
												"BAUJAHR": {
													"type": "integer"
												}
											}
										},
										"keller": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"aufzug": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"sanitär": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"möbliert": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"objektArt": {
									"type": "string"
								},
								"preise": {
									"type": "object",
									"properties": {
										"preisTexte": {
											"type": "object",
											"properties": {
												"MieteProMonatOhneNebenkosten": {
													"type": "string"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "string"
												},
												"NebenkostenProMonat": {
													"type": "string"
												},
												"MietKaution": {
													"type": "string"
												},
												"HeizkostenProMonat": {
													"type": "string"
												},
												"MieteProMonatProStellplatz": {
													"type": "string"
												}
											}
										},
										"currency": {
											"type": "string"
										},
										"preisValues": {
											"type": "object",
											"properties": {
												"MieteProMonatOhneNebenkosten": {
													"type": "number"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "number"
												},
												"NebenkostenProMonat": {
													"type": "number"
												},
												"MieteProMonatProStellplatz": {
													"type": "number"
												},
												"MietKaution": {
													"type": "number"
												},
												"HeizkostenProMonat": {
													"type": "number"
												}
											}
										},
										"heizkostenInNebenkostenEnthalten": {
											"type": "boolean"
										}
									}
								},
								"addr": {
									"type": "object",
									"properties": {
										"ort": {
											"type": "string"
										},
										"kreisId": {
											"type": "string"
										},
										"kreis": {
											"type": "string"
										},
										"landId": {
											"type": "string"
										},
										"parentIds": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"accuracy": {
											"type": "string"
										},
										"location": {
											"type": "object",
											"properties": {
												"lon": {
													"type": "number"
												},
												"lat": {
													"type": "number"
												}
											}
										},
										"ortId": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"stadtteil": {
											"type": "string"
										},
										"stadtbezirk": {
											"type": "string"
										},
										"strasse": {
											"type": "string"
										},
										"stadtteilId": {
											"type": "string"
										},
										"hausnummer": {
											"type": "string"
										},
										"stadtbezirkId": {
											"type": "string"
										}
									}
								},
								"objektTyp": {
									"type": "string"
								},
								"objektTypText": {
									"type": "string"
								}
							}
						},
						"firstSeenDay": {
							"type": "string"
						},
						"daysOnline": {
							"type": "integer"
						},
						"preisProQm": {
							"type": "number"
						},
						"onlineRanges": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"lt": {
										"type": "string"
									},
									"gte": {
										"type": "string"
									}
								}
							}
						},
						"crawlerIdsEntryIds": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"firstSeenDay": {
										"type": "string"
									},
									"portalUrl": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"lastUpdatedDay": {
										"type": "string"
									}
								}
							}
						},
						"eventDay": {
							"type": "string"
						},
						"preis": {
							"type": "number"
						},
						"online": {
							"type": "boolean"
						},
						"state": {
							"type": "string"
						},
						"lastSeenDay": {
							"type": "string"
						},
						"nutzflaeche": {
							"type": "number"
						},
						"groupId": {
							"type": "string"
						},
						"nebenkosten": {
							"type": "object",
							"properties": {
								"Nebenkosten": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap_to_be_uploaded_files_zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.zip",
						"folderPath": "de/geomap/to_upload",
						"container": "data-pipeline-input-files"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap_to_be_uploaded_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geomap"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "de/geomap/to_upload",
						"container": "data-pipeline-input-files"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"crawlerObject": {
							"type": "object",
							"properties": {
								"kaufMiete": {
									"type": "string"
								},
								"lage": {
									"type": "object",
									"properties": {
										"ort": {
											"type": "string"
										},
										"geoLongitude": {
											"type": "number"
										},
										"geoLatitude": {
											"type": "number"
										},
										"bundesland": {
											"type": "string"
										},
										"bezirk": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"stadtteilOrtsteil": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										}
									}
								},
								"anbieter": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"anrede": {
												"type": "string"
											},
											"anbieterGewerblich": {
												"type": "boolean"
											}
										}
									}
								},
								"objektTyp": {
									"type": "string"
								},
								"angebotsInformationen": {
									"type": "object",
									"properties": {
										"titel": {
											"type": "string"
										},
										"portalUrl": {
											"type": "string"
										},
										"medien": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"mediaArt": {
														"type": "string"
													},
													"originUrl": {
														"type": "string"
													},
													"mediaTyp": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"beschreibungen": {
											"type": "object",
											"properties": {
												"LAGE": {
													"type": "string"
												},
												"BESCHREIBUNG": {
													"type": "string"
												},
												"SONSTIGES": {
													"type": "string"
												},
												"AUSSTATTUNG": {
													"type": "string"
												}
											}
										}
									}
								},
								"objektTypText": {
									"type": "string"
								},
								"objektEigenschaften": {
									"type": "object",
									"properties": {
										"heizungsart": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"sanitär": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"saniert": {
											"type": "boolean"
										},
										"energieausweis": {
											"type": "object",
											"properties": {
												"ausweisTyp": {
													"type": "string"
												},
												"ausweisInfo": {
													"type": "string"
												},
												"energieKennwerte": {
													"type": "object",
													"properties": {
														"ENERGIEKENNWERT": {
															"type": "object",
															"properties": {
																"KennwertKlasse": {
																	"type": "string"
																},
																"kennwert": {
																	"type": "number"
																},
																"KennwertKlasseText": {
																	"type": "string"
																}
															}
														}
													}
												}
											}
										},
										"flächen": {
											"type": "object",
											"properties": {
												"flächeValues": {
													"type": "object",
													"properties": {
														"Grundstuecksflaeche": {
															"type": "number"
														},
														"Wohnflaeche": {
															"type": "number"
														},
														"Nutzflaeche": {
															"type": "number"
														}
													}
												}
											}
										},
										"zustand": {
											"type": "string"
										},
										"ausstattungsQualität": {
											"type": "string"
										},
										"etage": {
											"type": "number"
										},
										"etageText": {
											"type": "string"
										},
										"anzahlen": {
											"type": "object",
											"properties": {
												"ZIMMER": {
													"type": "number"
												},
												"ETAGEN": {
													"type": "number"
												},
												"BADEZIMMER": {
													"type": "number"
												},
												"SCHLAFZIMMER": {
													"type": "number"
												},
												"STELLPLAETZE": {
													"type": "number"
												}
											}
										},
										"küche": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"balkonTerrasse": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"jahreszahlen": {
											"type": "object",
											"properties": {
												"BAUJAHR": {
													"type": "integer"
												},
												"SANIERUNG": {
													"type": "integer"
												}
											}
										},
										"keller": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"kommunikation": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"boden": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"aufzug": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"energieträger": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"stellplatz": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"möbliert": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"lageEinheit": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"sonstiges": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"objektArt": {
									"type": "string"
								},
								"preise": {
									"type": "object",
									"properties": {
										"provisionsfrei": {
											"type": "boolean"
										},
										"heizkostenInNebenkostenEnthalten": {
											"type": "boolean"
										},
										"preisTexte": {
											"type": "object",
											"properties": {
												"HeizkostenProMonat": {
													"type": "string"
												},
												"MieteProMonatOhneNebenkosten": {
													"type": "string"
												}
											}
										},
										"currency": {
											"type": "string"
										},
										"preisValues": {
											"type": "object",
											"properties": {
												"MieteProMonatOhneNebenkosten": {
													"type": "number"
												},
												"MieteProMonatMitNebenkosten": {
													"type": "number"
												},
												"NebenkostenProMonat": {
													"type": "number"
												},
												"MietKaution": {
													"type": "number"
												},
												"HeizkostenProMonat": {
													"type": "number"
												},
												"MieteProMonatProStellplatz": {
													"type": "number"
												},
												"Kaufpreis": {
													"type": "number"
												},
												"HausgeldProMonat": {
													"type": "number"
												}
											}
										}
									}
								},
								"addr": {
									"type": "object",
									"properties": {
										"stadtteil": {
											"type": "string"
										},
										"stadtbezirk": {
											"type": "string"
										},
										"kreis": {
											"type": "string"
										},
										"parentIds": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"accuracy": {
											"type": "string"
										},
										"ort": {
											"type": "string"
										},
										"stadtteilId": {
											"type": "string"
										},
										"landId": {
											"type": "string"
										},
										"bundesland": {
											"type": "string"
										},
										"bundeslandId": {
											"type": "string"
										},
										"land": {
											"type": "string"
										},
										"location": {
											"type": "object",
											"properties": {
												"lon": {
													"type": "number"
												},
												"lat": {
													"type": "number"
												}
											}
										},
										"ortId": {
											"type": "string"
										},
										"plz": {
											"type": "string"
										},
										"stadtbezirkId": {
											"type": "string"
										},
										"strasse": {
											"type": "string"
										},
										"hausnummer": {
											"type": "string"
										}
									}
								}
							}
						},
						"firstSeenDay": {
							"type": "string"
						},
						"daysOnline": {
							"type": "integer"
						},
						"preisProQm": {
							"type": "number"
						},
						"rendite": {
							"type": "object",
							"properties": {
								"marktmieteProQm": {
									"type": "number"
								},
								"marktmieteGebiet": {
									"type": "string"
								},
								"renditeAvg": {
									"type": "number"
								},
								"renditeQuelle": {
									"type": "string"
								},
								"marktRendite": {
									"type": "number"
								},
								"zeitraumMarktmiete": {
									"type": "object",
									"properties": {
										"lt": {
											"type": "string"
										},
										"gte": {
											"type": "string"
										}
									}
								},
								"anzahlAngeboteMarktmiete": {
									"type": "integer"
								}
							}
						},
						"onlineRanges": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"lt": {
										"type": "string"
									},
									"gte": {
										"type": "string"
									}
								}
							}
						},
						"crawlerIdsEntryIds": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"firstSeenDay": {
										"type": "string"
									},
									"portalUrl": {
										"type": "string"
									},
									"state": {
										"type": "string"
									}
								}
							}
						},
						"eventDay": {
							"type": "string"
						},
						"preis": {
							"type": "number"
						},
						"online": {
							"type": "boolean"
						},
						"lastOfflineDay": {
							"type": "string"
						},
						"state": {
							"type": "string"
						},
						"lastSeenDay": {
							"type": "string"
						},
						"nutzflaeche": {
							"type": "number"
						},
						"groupId": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap_to_be_uploaded_zip_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "de/geomap/to_upload",
						"container": "data-pipeline-input-files"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap_uploaded_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geomap"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "de/geomap/uploaded",
						"container": "data-pipeline-input-files"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap_uploaded_files_zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*zip",
						"folderPath": "de/geomap/uploaded",
						"container": "data-pipeline-input-files"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geomap_uploaded_zip_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "de/geomap/uploaded_2",
						"container": "data-pipeline-input-files"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_geomap_ftp_server')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GeoMapFtpServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Geomap"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GeoMapFtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/kadaster_to_be_uploaded')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "catella_hot_storage_accept",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kadaster"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "nl/kadaster/to_upload/",
						"fileSystem": "data-pipeline-input-files"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OVER_BEW_K",
						"type": "String"
					},
					{
						"name": "STUK_ONTV_DATUM",
						"type": "String"
					},
					{
						"name": "OVER_STUK",
						"type": "String"
					},
					{
						"name": "VV_NAAM",
						"type": "String"
					},
					{
						"name": "VV_WOONPLAATS",
						"type": "String"
					},
					{
						"name": "NNP_VV_K",
						"type": "String"
					},
					{
						"name": "VK_NAAM",
						"type": "String"
					},
					{
						"name": "VK_WOONPLAATS",
						"type": "String"
					},
					{
						"name": "NNP_VK_K",
						"type": "String"
					},
					{
						"name": "OBJE_MUT_SRT_K",
						"type": "String"
					},
					{
						"name": "IND_FAM_TRANS",
						"type": "String"
					},
					{
						"name": "OBJE_OBJEKT",
						"type": "String"
					},
					{
						"name": "KAD_GEM",
						"type": "String"
					},
					{
						"name": "SECTIE",
						"type": "String"
					},
					{
						"name": "PERCEELNR",
						"type": "String"
					},
					{
						"name": "INDEXLT",
						"type": "String"
					},
					{
						"name": "INDEXNR",
						"type": "String"
					},
					{
						"name": "OBJE_GROOTTE",
						"type": "String"
					},
					{
						"name": "OBJE_KOOP_SOM",
						"type": "String"
					},
					{
						"name": "OBJE_IND_MEER_O_G",
						"type": "String"
					},
					{
						"name": "OBJE_BURG_GEM_NR",
						"type": "String"
					},
					{
						"name": "OBJE_BURG_GEM_NAAM",
						"type": "String"
					},
					{
						"name": "OBJE_KULT_ONGEB_K",
						"type": "String"
					},
					{
						"name": "ZAKR_ZR_K",
						"type": "String"
					},
					{
						"name": "OBJB_OBJ_BEL_K",
						"type": "String"
					},
					{
						"name": "OBJE_X_COORD",
						"type": "String"
					},
					{
						"name": "OBJE_Y_COORD",
						"type": "String"
					},
					{
						"name": "OBJE_KULT_TEXT",
						"type": "String"
					},
					{
						"name": "OBJA_KULT_GEB_K",
						"type": "String"
					},
					{
						"name": "OBJA_PLTS_NAAM",
						"type": "String"
					},
					{
						"name": "OBJA_STRAAT",
						"type": "String"
					},
					{
						"name": "OBJA_HUIS_NR",
						"type": "String"
					},
					{
						"name": "OBJA_HUIS_LR",
						"type": "String"
					},
					{
						"name": "OBJA_TOEVOEGING",
						"type": "String"
					},
					{
						"name": "OBJA_PTT_K",
						"type": "String"
					},
					{
						"name": "PHT",
						"type": "String"
					},
					{
						"name": "OVER_ID",
						"type": "String"
					},
					{
						"name": "BAG_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/catella_hot_storage_accept')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/kadaster_uploaded')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "catella_hot_storage_accept",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kadaster"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "nl/kadaster/uploaded",
						"fileSystem": "data-pipeline-input-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/catella_hot_storage_accept')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/old_geomap_data_zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datapipeline_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.zip",
						"container": "geomap-data"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/zip_geomap_ftp_server')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GeoMapFtpServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GeoMapFtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageLogs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "container with logs",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageLogs_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Catella_DataPipeline_AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Blob storage from the DataPipeline",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Catella_DataPipeline_AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Catella_DataPipeline_AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Catella_DataPipeline_AzureSQLStorage_Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Elastic pool of SQL databases Test Environemnt",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Catella_DataPipeline_AzureSQLStorage_Test_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFactoryBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Blob Storage that contains  Jsons from GeoMap",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DataFactoryBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataPipelineSQLDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DataPipelineSQLDev_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimePrivate",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimePrivate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataPipelineSQLTest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DataPipelineSQLTest_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimePrivate",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimePrivate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeoMapFtpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Geomap Files ",
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('GeoMapFtpServer_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": true,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('GeoMapFtpServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('GeoMapFtpServer_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WHSftpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Watson&Holmes  SFTP Server\n",
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('WHSftpServer_properties_typeProperties_host')]",
					"port": "2220",
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('WHSftpServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WHSftpServer_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/catella_hot_storage_accept')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('catella_hot_storage_accept_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('catella_hot_storage_accept_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimePrivate",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimePrivate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datapipeline_blob_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('datapipeline_blob_storage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimePrivate",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimePrivate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datapipeline_dev_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure SQL database: datapipeline-dev",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('datapipeline_dev_db_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimePrivate",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimePrivate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datapipeline_sql_server_test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('datapipeline_sql_server_test_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimePrivate",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimePrivate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WH_tuesday_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "wh_data_loader",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-07-28T11:49:00",
						"timeZone": "W. Europe Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Tuesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/wh_data_loader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger-every-1stday-month')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "geomap-data-loader",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2023-02-01T11:10:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/geomap-data-loader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger-every-saturday-shedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "geomap-data-loader",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-02-04T11:15:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8
							],
							"weekDays": [
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/geomap-data-loader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger-every-saturday')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2023-02-04T12:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 2,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_when_new_file_added_geomap_blob')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Triggers  GeoMap Upload when the new file uploaded to the container",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/geomap-data/blobs/results_",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_when_new_file_added_geomap_blob_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_when_new_files_added_kadaster_blob')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "kadaster-data-loader",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/data-pipeline-input-files/blobs/nl/kadaster/to_upload",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_when_new_files_added_kadaster_blob_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/kadaster-data-loader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimePrivate')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 10
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OV20')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "datapipeline_blob_storage",
								"type": "LinkedServiceReference"
							},
							"name": "ov20csv",
							"description": "Import OV20 csv"
						},
						{
							"linkedService": {
								"referenceName": "datapipeline_blob_storage",
								"type": "LinkedServiceReference"
							},
							"name": "ov15csv2",
							"description": "Import OV15 csv from datapipeline_blob_storage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSql_Kadaster_Input_Table",
								"type": "DatasetReference"
							},
							"name": "KadasterSQLTable",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorageLogs",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1",
							"description": "Select necessary columns only"
						},
						{
							"name": "CreateColumn",
							"description": "Create House_number_add column"
						},
						{
							"name": "WonenDwellingType",
							"description": "Filtering WONEN assets"
						},
						{
							"name": "union1"
						},
						{
							"name": "window1"
						},
						{
							"name": "EditColumns",
							"description": "Edit coordinates, add Source column"
						},
						{
							"name": "select3",
							"description": "Select necessary columns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OVER_BEW_K as string,",
						"          STUK_ONTV_DATUM as string,",
						"          OVER_STUK as string,",
						"          VV_NAAM as string,",
						"          VV_WOONPLAATS as string,",
						"          NNP_VV_K as string,",
						"          VK_NAAM as string,",
						"          VK_WOONPLAATS as string,",
						"          NNP_VK_K as string,",
						"          OBJE_MUT_SRT_K as string,",
						"          IND_FAM_TRANS as string,",
						"          OBJE_OBJEKT as string,",
						"          KAD_GEM as string,",
						"          SECTIE as string,",
						"          PERCEELNR as string,",
						"          INDEXLT as string,",
						"          INDEXNR as string,",
						"          OBJE_GROOTTE as integer,",
						"          OBJE_KOOP_SOM as integer,",
						"          OBJE_IND_MEER_O_G as string,",
						"          OBJE_BURG_GEM_NR as string,",
						"          OBJE_BURG_GEM_NAAM as string,",
						"          OBJE_KULT_ONGEB_K as string,",
						"          ZAKR_ZR_K as string,",
						"          OBJB_OBJ_BEL_K as string,",
						"          OBJE_X_COORD as float,",
						"          OBJE_Y_COORD as float,",
						"          OBJE_KULT_TEXT as string,",
						"          OBJA_KULT_GEB_K as string,",
						"          OBJA_PLTS_NAAM as string,",
						"          OBJA_STRAAT as string,",
						"          OBJA_HUIS_NR as integer,",
						"          OBJA_HUIS_LR as string,",
						"          OBJA_TOEVOEGING as string,",
						"          OBJA_PTT_K as string,",
						"          PHT as string,",
						"          OVER_ID as string,",
						"          BAG_ID as string",
						"     ),",
						"     useSchema: true,",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     limit: 1000,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     container: 'data-pipeline-input-files',",
						"     columnDelimiter: ';',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     wildcardPaths:['nl/kadaster/to_upload/Catella_OV20*.csv']) ~> ov20csv",
						"source(output(",
						"          DATUM as string,",
						"          PTT_K as string,",
						"          PLTSNAAM as string,",
						"          STRAAT as string,",
						"          HUISNR as integer,",
						"          TOEV as string,",
						"          WONINGTYPE as string,",
						"          X_COORD as float,",
						"          Y_COORD as float,",
						"          KULT_GEB_K as string,",
						"          GROOTTE as integer,",
						"          K_SOM as integer,",
						"          IND_M_O_G as string,",
						"          ZAK_R as string,",
						"          KULT_TEKST as string,",
						"          OBJ_BEL as string,",
						"          ERFDIENSTBH as string,",
						"          KULT_GEB_K1 as string,",
						"          KULT_ONGEB_K1 as string,",
						"          INDEX_LR1 as string,",
						"          GROOTTE1 as string,",
						"          PTT_K1 as string,",
						"          PLTSNAAM1 as string,",
						"          STRAAT1 as string,",
						"          HUISNR1 as string,",
						"          TOEV1 as string,",
						"          KULT_GEB_K2 as string,",
						"          KULT_ONGEB_K2 as string,",
						"          INDEX_LR2 as string,",
						"          GROOTTE2 as string,",
						"          PTT_K2 as string,",
						"          PLTSNAAM2 as string,",
						"          STRAAT2 as string,",
						"          HUISNR2 as string,",
						"          TOEV2 as string,",
						"          KULT_GEB_K3 as string,",
						"          KULT_ONGEB_K3 as string,",
						"          INDEX_LR3 as string,",
						"          GROOTTE3 as string,",
						"          PTT_K3 as string,",
						"          PLTSNAAM3 as string,",
						"          STRAAT3 as string,",
						"          HUISNR3 as string,",
						"          TOEV3 as string,",
						"          KULT_GEB_K4 as string,",
						"          KULT_ONGEB_K4 as string,",
						"          INDEX_LR4 as string,",
						"          GROOTTE4 as string,",
						"          PTT_K4 as string,",
						"          PLTSNAAM4 as string,",
						"          STRAAT4 as string,",
						"          HUISNR4 as string,",
						"          TOEV4 as string,",
						"          IND_HUURDER as string,",
						"          BEWARINGKODE as string,",
						"          STUK_ID as string,",
						"          MUT_SRT as string,",
						"          BURGEM_NR as string,",
						"          OBJECT as string,",
						"          NNP_1E_VERKR as string,",
						"          NNP_1E_VERVR as string,",
						"          FAM_TRANS as string,",
						"          PHT as string,",
						"          KAD_GEM as string,",
						"          SECTIE as string,",
						"          BAG_ID as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 1000,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     container: 'data-pipeline-input-files',",
						"     columnDelimiter: ';',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     wildcardPaths:['nl/kadaster/to_upload/Catella_OV15_*.csv']) ~> ov15csv2",
						"CreateColumn select(mapColumn(",
						"          Date = STUK_ONTV_DATUM,",
						"          Area = OBJE_GROOTTE,",
						"          Price = OBJE_KOOP_SOM,",
						"          Latitude = OBJE_X_COORD,",
						"          Longitude = OBJE_Y_COORD,",
						"          Object_description = OBJE_KULT_TEXT,",
						"          Object = OBJE_OBJEKT,",
						"          City = OBJA_PLTS_NAAM,",
						"          Street = OBJA_STRAAT,",
						"          House_number = OBJA_HUIS_NR,",
						"          House_number_add,",
						"          Postcode = OBJA_PTT_K,",
						"          BAG_ID,",
						"          Source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"WonenDwellingType derive(House_number_add = iifNull(OBJA_TOEVOEGING, OBJA_HUIS_LR),",
						"          OBJE_X_COORD = OBJE_X_COORD / 10000,",
						"          OBJE_Y_COORD = OBJE_Y_COORD / 10000,",
						"          Source = \"OV20\") ~> CreateColumn",
						"ov20csv filter(regexMatch(OBJE_KULT_TEXT, 'WONEN')) ~> WonenDwellingType",
						"select1, select3 union(byName: true)~> union1",
						"union1 window(over(BAG_ID),",
						"     asc(Area, false),",
						"     BAG_ID_rank = rank()) ~> window1",
						"ov15csv2 derive(X_COORD = X_COORD / 10000,",
						"          Y_COORD = Y_COORD / 10000,",
						"          Source = \"OV15\") ~> EditColumns",
						"EditColumns select(mapColumn(",
						"          Date = DATUM,",
						"          Area = GROOTTE,",
						"          Price = K_SOM,",
						"          Latitude = X_COORD,",
						"          Longitude = Y_COORD,",
						"          Object_description = KULT_TEKST,",
						"          Object = OBJECT,",
						"          City = PLTSNAAM,",
						"          Street = STRAAT,",
						"          House_number = HUISNR,",
						"          House_number_add = TOEV,",
						"          Postcode = PTT_K,",
						"          BAG_ID,",
						"          Source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"window1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          OVER_BEW_K as string,",
						"          STUK_ONTV_DATUM as string,",
						"          OVER_STUK as string,",
						"          VV_NAAM as string,",
						"          VV_WOONPLAATS as string,",
						"          NNP_VV_K as string,",
						"          VK_NAAM as string,",
						"          VK_WOONPLAATS as string,",
						"          NNP_VK_K as string,",
						"          OBJE_MUT_SRT_K as string,",
						"          IND_FAM_TRANS as string,",
						"          OBJE_OBJEKT as string,",
						"          KAD_GEM as string,",
						"          SECTIE as string,",
						"          PERCEELNR as string,",
						"          INDEXLT as string,",
						"          INDEXNR as string,",
						"          OBJE_GROOTTE as string,",
						"          OBJE_KOOP_SOM as string,",
						"          OBJE_IND_MEER_O_G as string,",
						"          OBJE_BURG_GEM_NR as string,",
						"          OBJE_BURG_GEM_NAAM as string,",
						"          OBJE_KULT_ONGEB_K as string,",
						"          ZAKR_ZR_K as string,",
						"          OBJB_OBJ_BEL_K as string,",
						"          OBJE_X_COORD as string,",
						"          OBJE_Y_COORD as string,",
						"          OBJE_KULT_TEXT as string,",
						"          OBJA_KULT_GEB_K as string,",
						"          OBJA_PLTS_NAAM as string,",
						"          OBJA_STRAAT as string,",
						"          OBJA_HUIS_NR as string,",
						"          OBJA_HUIS_LR as string,",
						"          OBJA_TOEVOEGING as string,",
						"          OBJA_PTT_K as string,",
						"          PHT as string,",
						"          OVER_ID as string,",
						"          BAG_ID as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'data-pipeline-input-files',",
						"     rejectedData_folderPath: 'nl/kadaster/logs',",
						"     transactionCommit: 'batch',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          AanmeldDatum = Date,",
						"          Area,",
						"          Price,",
						"          Latitude,",
						"          Longitude,",
						"          Object_description,",
						"          City,",
						"          Street,",
						"          HouseNumber = House_number,",
						"          HouseNumberAddition = House_number_add,",
						"          ZipCode = Postcode,",
						"          BAG_ID,",
						"          BAG_ID_rank,",
						"          Object,",
						"          Source",
						"     )) ~> KadasterSQLTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datapipeline_blob_storage')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_Kadaster_Input_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/catella_datapipeline_azuresql_server_private_endpoint')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('catella_datapipeline_azuresql_server_private_endpoint_properties_privateLinkResourceId')]",
				"groupId": "[parameters('catella_datapipeline_azuresql_server_private_endpoint_properties_groupId')]",
				"fqdns": "[parameters('catella_datapipeline_azuresql_server_private_endpoint_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/catellahotstorageaccept_privateendpoint')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('catellahotstorageaccept_privateendpoint_properties_privateLinkResourceId')]",
				"groupId": "[parameters('catellahotstorageaccept_privateendpoint_properties_groupId')]",
				"fqdns": "[parameters('catellahotstorageaccept_privateendpoint_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}