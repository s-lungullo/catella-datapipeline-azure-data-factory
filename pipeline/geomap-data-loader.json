{
	"name": "geomap-data-loader",
	"properties": {
		"description": "Data pipeline to laod all geomap files to the database",
		"activities": [
			{
				"name": "Upload-Data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If Clean Upload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"additionalColumns": [
							{
								"name": "JsonFilePath",
								"value": "$$FILEPATH"
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"wildcardFolderPath": "de/geomap/to_upload",
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings",
							"compressionProperties": {
								"type": "ZipDeflateReadSettings"
							}
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": true,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorageLogs",
								"type": "LinkedServiceReference"
							},
							"path": "logs/geomapupload"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['crawlerObject']['kaufMiete']"
								},
								"sink": {
									"name": "RentOrSale",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['lage']['land']"
								},
								"sink": {
									"name": "Country",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['angebotsInformationen']['titel']"
								},
								"sink": {
									"name": "Titel",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['angebotsInformationen']['portalUrl']"
								},
								"sink": {
									"name": "DetailedUrl",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['BESCHREIBUNG']"
								},
								"sink": {
									"name": "Description_Main",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['LAGE']"
								},
								"sink": {
									"name": "Description_Location",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['SONSTIGES']"
								},
								"sink": {
									"name": "Description_Other",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['angebotsInformationen']['beschreibungen']['AUSSTATTUNG']"
								},
								"sink": {
									"name": "Description_Furnishing",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['angebotsInformationen']['verfugbarAb']"
								},
								"sink": {
									"name": "AvailableFrom",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ZIMMER']"
								},
								"sink": {
									"name": "NumberOfRooms",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['BADEZIMMER']"
								},
								"sink": {
									"name": "NumberOfBathrooms",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['SCHLAFZIMMER']"
								},
								"sink": {
									"name": "NumberOfBedRooms",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['anzahlen']['ETAGEN']"
								},
								"sink": {
									"name": "NumberOfFloors",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['fl채chen']['fl채cheValues']['Wohnflaeche']"
								},
								"sink": {
									"name": "LivingArea",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['fl채chen']['fl채cheValues']['Grundstuecksflaeche']"
								},
								"sink": {
									"name": "LandArea",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['saniert']"
								},
								"sink": {
									"name": "IsSanitized",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['KennwertKlasse']"
								},
								"sink": {
									"name": "EnergyLabel",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['energieausweis']['energieKennwerte']['ENERGIEKENNWERT']['kennwert']"
								},
								"sink": {
									"name": "EnergyValue",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['etage']"
								},
								"sink": {
									"name": "Floor",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['SANIERUNG']"
								},
								"sink": {
									"name": "RenovationYear",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektEigenschaften']['jahreszahlen']['BAUJAHR']"
								},
								"sink": {
									"name": "ConstructionYear",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektArt']"
								},
								"sink": {
									"name": "PropertyType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['currency']"
								},
								"sink": {
									"name": "Currency",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatOhneNebenkosten']"
								},
								"sink": {
									"name": "RentPerMonthNoAdditionalCosts",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatMitNebenkosten']"
								},
								"sink": {
									"name": "RentPerMonthWithAdditionalCosts",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['preisValues']['NebenkostenProMonat']"
								},
								"sink": {
									"name": "AdditionalCostsPerMonth",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['preisValues']['MieteProMonatProStellplatz']"
								},
								"sink": {
									"name": "RentPerMonthPerParking",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['preisValues']['MietKaution']"
								},
								"sink": {
									"name": "RentalDeposit",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['preisValues']['HeizkostenProMonat']"
								},
								"sink": {
									"name": "HeatingCostsPerMonth",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['preise']['heizkostenInNebenkostenEnthalten']"
								},
								"sink": {
									"name": "HeatingCostsIncludedInAdditionalCosts",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['ort']"
								},
								"sink": {
									"name": "City",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['kreis']"
								},
								"sink": {
									"name": "District",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['accuracy']"
								},
								"sink": {
									"name": "LocationAccuracy",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['location']['lon']"
								},
								"sink": {
									"name": "Longitude",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['location']['lat']"
								},
								"sink": {
									"name": "Latitude",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['plz']"
								},
								"sink": {
									"name": "PostalCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['stadtteil']"
								},
								"sink": {
									"name": "CityDistrict2",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['stadtbezirk']"
								},
								"sink": {
									"name": "CityDistrict1",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['strasse']"
								},
								"sink": {
									"name": "Street",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['addr']['hausnummer']"
								},
								"sink": {
									"name": "HouseNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['objektTyp']"
								},
								"sink": {
									"name": "DwellingType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['crawlerObject']['anbieter']"
								},
								"sink": {
									"name": "Brokers_JsonArray",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['firstSeenDay']"
								},
								"sink": {
									"name": "FirstSeenDay",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['daysOnline']"
								},
								"sink": {
									"name": "DaysOnline",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['preisProQm']"
								},
								"sink": {
									"name": "PricePerSqm",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['eventDay']"
								},
								"sink": {
									"name": "ScrapingDay",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['preis']"
								},
								"sink": {
									"name": "AskingPrice",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['online']"
								},
								"sink": {
									"name": "IsOnline",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['state']"
								},
								"sink": {
									"name": "Status",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastSeenDay']"
								},
								"sink": {
									"name": "LastSeenDay",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['nutzflaeche']"
								},
								"sink": {
									"name": "UsableArea",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['groupId']"
								},
								"sink": {
									"name": "GeomapId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['JsonFilePath']"
								},
								"sink": {
									"name": "JsonFilePath",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "geomap_to_be_uploaded_folder",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DataPipelineTest_GeomapRawInput",
						"type": "DatasetReference",
						"parameters": {
							"sinkTableName": "GeoMapRawImport"
						}
					}
				]
			},
			{
				"name": "If Clean Upload",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEachIncominFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('varCleanUpload')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Drop and recreate GeomapRawInputTable_copy1_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@variables('varStoredProcedureForTableReset')",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "DataPipelineSQLTest",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SetCleanUploadToFalse_copy1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Drop and recreate GeomapRawInputTable_copy1_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "varCleanUpload",
								"value": {
									"value": "@bool(0)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "move-files-from archive",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SetCleanUploadToFalse_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "de/geomap/uploaded",
										"wildcardFileName": "*.zip",
										"deleteFilesAfterCompletion": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "geomap_uploaded_files_zip",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "geomap_uploaded_zip_folder",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "SP_Pipeline_Log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Upload-Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_UpdateCatellaDataPipeline_LogTable]",
					"storedProcedureParameters": {
						"DataFactory_Name": {
							"value": {
								"value": "@{pipeline().DataFactory}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Pipeline_Name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Destination": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerType": {
							"value": {
								"value": "@{pipeline().TriggerType}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerId": {
							"value": {
								"value": "@{pipeline().TriggerId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@{pipeline().TriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"rowsCopied": {
							"value": {
								"value": "@{activity('Upload-Data').output.rowsCopied}",
								"type": "Expression"
							},
							"type": "String"
						},
						"DataRead": {
							"value": {
								"value": "@{activity('Upload-Data').output.rowsRead}",
								"type": "Expression"
							},
							"type": "String"
						},
						"No_ParallelCopies": {
							"value": {
								"value": "@{activity('Upload-Data').output.usedParallelCopies}",
								"type": "Expression"
							},
							"type": "String"
						},
						"copyDuration_in_secs": {
							"value": {
								"value": "@{activity('Upload-Data').output.copyDuration}",
								"type": "Expression"
							},
							"type": "String"
						},
						"effectiveIntegrationRuntime": {
							"value": {
								"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source_Type": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Sink_Type": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Execution_Status": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyActivity_Start_Time": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].start}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyActivity_End_Time": {
							"value": {
								"value": "@{utcnow()}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyActivity_queuingDuration_in_secs": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.queuingDuration}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyActivity_transferDuration_in_secs": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0]. detailedDurations.transferDuration}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DataPipelineSQLTest",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP_Pipeline_Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Upload-Data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_UpdateCatellaDataPipeline_ErrorsTable]",
					"storedProcedureParameters": {
						"DataFactory_Name": {
							"value": {
								"value": "@{pipeline().DataFactory}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Pipeline_Name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Destination": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerType": {
							"value": {
								"value": "@{pipeline().TriggerType}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerId": {
							"value": {
								"value": "@{pipeline().TriggerId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@{pipeline().TriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"No_ParallelCopies": {
							"value": {
								"value": "@{activity('Upload-Data').output.usedParallelCopies}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyDuration_in_secs": {
							"value": {
								"value": "@{activity('Upload-Data').output.copyDuration}",
								"type": "Expression"
							},
							"type": "String"
						},
						"EffectiveIntegrationRuntime": {
							"value": {
								"value": "@{activity('Upload-Data').output.effectiveIntegrationRuntime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source_Type": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].source.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Sink_Type": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].sink.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Execution_Status": {
							"value": {
								"value": "@{activity('Upload-Data').output.executionDetails[0].status}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorCode": {
							"value": {
								"value": "@{activity('Upload-Data').error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@{activity('Upload-Data').error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorLoggedTIme": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "String"
						},
						"FailureType": {
							"value": {
								"value": "@concat(activity('Upload-Data').error.message,'failureType:',activity('Upload-Data').error.failureType)",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DataPipelineSQLTest",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PipelineThrow",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "SP_Pipeline_Error",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": {
						"value": "@activity('Upload-Data').error.message",
						"type": "Expression"
					},
					"errorCode": {
						"value": "@activity('Upload-Data').error.errorCode",
						"type": "Expression"
					}
				}
			},
			{
				"name": "move-files-to-archive",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Upload-Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"wildcardFolderPath": "de/geomap/to_upload",
							"wildcardFileName": "*.zip",
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "geomap_to_be_uploaded_files_zip",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "geomap_uploaded_zip_folder",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "get-uploaded-filenames",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "geomap_uploaded_zip_folder",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "get-incoming-filenames",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "zip_geomap_ftp_server",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "FtpReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false,
						"useBinaryTransfer": true,
						"disableChunking": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEachIncominFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get-uploaded-filenames",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get-incoming-filenames",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-incoming-filenames').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "if-file-is-not-uploaded",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(contains(activity('get-uploaded-filenames').output.childItems, item()))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "copy-incoming-files",
										"description": "",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.01:00:00",
											"retry": 2,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "FtpReadSettings",
													"recursive": true,
													"wildcardFileName": {
														"value": "@item().name",
														"type": "Expression"
													},
													"useBinaryTransfer": true,
													"deleteFilesAfterCompletion": false,
													"disableChunking": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												}
											},
											"enableStaging": false,
											"logSettings": {
												"enableCopyActivityLog": true,
												"copyActivityLogSettings": {
													"logLevel": "Warning",
													"enableReliableLogging": false
												},
												"logLocationSettings": {
													"linkedServiceName": {
														"referenceName": "AzureBlobStorageLogs",
														"type": "LinkedServiceReference"
													},
													"path": "logs/geomapupload"
												}
											}
										},
										"inputs": [
											{
												"referenceName": "zip_geomap_ftp_server",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "geomap_to_be_uploaded_zip_folder",
												"type": "DatasetReference"
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"varCleanUpload": {
				"type": "Boolean",
				"defaultValue": false
			},
			"varStoredProcedureForTableReset": {
				"type": "String",
				"defaultValue": "[dbo].[sp_dropand_recreate_geomap_raw_input_table]"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-02-17T17:43:33Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}