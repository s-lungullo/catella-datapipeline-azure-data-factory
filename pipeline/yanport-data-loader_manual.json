{
	"name": "yanport-data-loader_manual",
	"properties": {
		"description": "Knibber Research loader",
		"activities": [
			{
				"name": "Upload-Data-to-DB",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Remove last comma",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"additionalColumns": [
							{
								"name": "JsonFilePath",
								"value": "$$FILEPATH"
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"wildcardFolderPath": "fr/yanport/to_upload",
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": true,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorageLogs",
								"type": "LinkedServiceReference"
							},
							"path": "data-pipeline-input-files/fr/yanport/logs"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['id']"
								},
								"sink": {
									"name": "id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['source']"
								},
								"sink": {
									"name": "source",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['programId']"
								},
								"sink": {
									"name": "programId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['externalProperties']"
								},
								"sink": {
									"name": "externalProperties",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['quality']['anomaly']['level']"
								},
								"sink": {
									"name": "quality_anomaly_level",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['quality']['anomaly']['causes']"
								},
								"sink": {
									"name": "quality_anomaly_causes",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['quality']['anomaly']['value']"
								},
								"sink": {
									"name": "quality_anomaly_value",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['investment']['rental']['monthlyPrice']"
								},
								"sink": {
									"name": "investment_rental_monthlyPrice",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['investment']['rental']['yield']['gross']"
								},
								"sink": {
									"name": "investment_rental_yield_gross",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['features']['descriptive']['description']"
								},
								"sink": {
									"name": "description",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['descriptive']['pros']"
								},
								"sink": {
									"name": "pros",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['descriptive']['cons']"
								},
								"sink": {
									"name": "cons",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['descriptive']['generalState']"
								},
								"sink": {
									"name": "generalState",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['descriptive']['equipments']['FURNITURE']"
								},
								"sink": {
									"name": "equipments_furniture",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['features']['descriptive']['services']"
								},
								"sink": {
									"name": "equipments_services",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['geometry']['surface']"
								},
								"sink": {
									"name": "surface",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['features']['geometry']['roomCount']"
								},
								"sink": {
									"name": "roomCount",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['geometry']['areas']"
								},
								"sink": {
									"name": "areas",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['geometry']['floors']"
								},
								"sink": {
									"name": "floors",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['geometry']['floorCount']"
								},
								"sink": {
									"name": "floorCount",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['geometry']['areaCount']"
								},
								"sink": {
									"name": "areaCount",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['construction']['newBuild']"
								},
								"sink": {
									"name": "construction_newBuild",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['features']['construction']['forBuild']"
								},
								"sink": {
									"name": "construction_forBuild",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['features']['construction']['year']"
								},
								"sink": {
									"name": "construction_year",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['construction']['urbanismRules']"
								},
								"sink": {
									"name": "construction_urbanismRules",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['heatingMode']"
								},
								"sink": {
									"name": "energy_heatingMode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['heatingTypes']"
								},
								"sink": {
									"name": "energy_heatingTypes",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['waterHeatingTypes']"
								},
								"sink": {
									"name": "energy_waterHeatingTypes",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['diagnosisVersion']"
								},
								"sink": {
									"name": "energy_diagnosisVersion",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['consumption']"
								},
								"sink": {
									"name": "energy_consumption",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['consumptionLetter']"
								},
								"sink": {
									"name": "energy_consumptionLetter",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['consumptionRange']['lowerEndpoint']"
								},
								"sink": {
									"name": "energy_consumptionRange_lowerEndpoint",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['consumptionRange']['upperEndpoint']"
								},
								"sink": {
									"name": "energy_consumptionRange_upperEndpoint",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['greenhouseGasConsumption']"
								},
								"sink": {
									"name": "energy_greenhouseGasConsumption",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['greenhouseGasConsumptionLetter']"
								},
								"sink": {
									"name": "energy_greenhouseGasConsumptionLetter",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['greenhouseGasConsumptionRange']['lowerEndpoint']"
								},
								"sink": {
									"name": "energy_greenhouseGasConsumptionRange_lowerEndpoint",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['energy']['greenhouseGasConsumptionRange']['upperEndpoint']"
								},
								"sink": {
									"name": "energy_greenhouseGasConsumptionRange_upperEndpoint",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['features']['condominium']"
								},
								"sink": {
									"name": "condominium",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['visual']['images']"
								},
								"sink": {
									"name": "visual_images",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['visual']['orientations']"
								},
								"sink": {
									"name": "visual_orientations",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['visual']['views']"
								},
								"sink": {
									"name": "visual_views",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['features']['additionalFeatures']"
								},
								"sink": {
									"name": "additionalFeatures",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['marketing']['price']"
								},
								"sink": {
									"name": "price",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceEvents']"
								},
								"sink": {
									"name": "priceEvents",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['marketing']['publicationStartDate']"
								},
								"sink": {
									"name": "publicationStartDate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['marketing']['publicationEndDate']"
								},
								"sink": {
									"name": "publicationEndDate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['marketing']['exclusiveMandate']"
								},
								"sink": {
									"name": "exclusiveMandate",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['marketing']['rentalExpenses']"
								},
								"sink": {
									"name": "rentalExpenses",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['rentalExpensesIncluded']"
								},
								"sink": {
									"name": "rentalExpensesIncluded",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['marketing']['type']"
								},
								"sink": {
									"name": "marketing_type",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceM2']"
								},
								"sink": {
									"name": "priceM2",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceCC']"
								},
								"sink": {
									"name": "priceCC",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceHC']"
								},
								"sink": {
									"name": "priceHC",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['relevantPrice']"
								},
								"sink": {
									"name": "relevantPrice",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceM2CC']"
								},
								"sink": {
									"name": "priceM2CC",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceM2HC']"
								},
								"sink": {
									"name": "priceM2HC",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['marketing']['publicationDays']"
								},
								"sink": {
									"name": "publicationDays",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['marketing']['active']"
								},
								"sink": {
									"name": "active",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceEventsCount']"
								},
								"sink": {
									"name": "priceEventsCount",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['marketing']['priceEventsRange']"
								},
								"sink": {
									"name": "priceEventsRange",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['cityId']"
								},
								"sink": {
									"name": "cityId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['quarterId']"
								},
								"sink": {
									"name": "quarterId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['irisIds']"
								},
								"sink": {
									"name": "irisIds",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['parcelIds']"
								},
								"sink": {
									"name": "parcelIds",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['agglomerationId']"
								},
								"sink": {
									"name": "agglomerationId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['street']"
								},
								"sink": {
									"name": "street",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['city']"
								},
								"sink": {
									"name": "city",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']['zipCode']"
								},
								"sink": {
									"name": "zipCode",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['address']['deptCode']"
								},
								"sink": {
									"name": "deptCode",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['address']['location']['lat']"
								},
								"sink": {
									"name": "latitude",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['address']['location']['lon']"
								},
								"sink": {
									"name": "longitude",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['address']['formatted']"
								},
								"sink": {
									"name": "address_formatted",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ads']"
								},
								"sink": {
									"name": "ads",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['creationDate']"
								},
								"sink": {
									"name": "creationDate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['updateDate']"
								},
								"sink": {
									"name": "updateDate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['type']"
								},
								"sink": {
									"name": "dwelling_type",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "yanport_to_be_uplod_folder",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSql_Yanport_Input_Table",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "move-files-to-archive",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Upload-Data-to-DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"wildcardFolderPath": "benelux/kra/to_upload",
							"wildcardFileName": "*.zip",
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "kra_to_be_uploaded_files_zip",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "kra_uploaded_zip_folder",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Insert_Log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Upload-Data-to-DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Insert_ADF_Logs]",
					"storedProcedureParameters": {
						"CopyActivityRunID": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').ActivityRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Date": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"Filenames": {
							"value": {
								"value": "@variables('filenames_str')",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Rows_skipped": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Rows_written": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"StatusMessage": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datapipeline_dev_db",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Insert_Error_Log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Upload-Data-to-DB",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Insert_ADF_Logs]",
					"storedProcedureParameters": {
						"CopyActivityRunID": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').ActivityRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Date": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"ErrorMessage": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"Filenames": {
							"value": {
								"value": "@variables('filenames_str')",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Rows_skipped": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').output.rowsSkipped",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Rows_written": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"StatusMessage": {
							"value": {
								"value": "@activity('Upload-Data-to-DB').output.executionDetails[0].status",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datapipeline_dev_db",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get Uploaded Filenames",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "yanport_to_be_upload_folder",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Raise_Failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Insert_Error_Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": {
						"value": "@activity('Upload-Data-to-DB').output.errors[0].Message",
						"type": "Expression"
					},
					"errorCode": {
						"value": "@activity('Upload-Data-to-DB').output.errors[0].Code",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set filenames string",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Uploaded Filenames",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "af",
					"value": {
						"value": "@replace(replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Uploaded Filenames').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"Folder\"',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',', ')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Remove last comma",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set filenames string",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "filenames_str",
					"value": {
						"value": "@substring(variables('af'), 0, add(length(variables('af')),-1))",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"af": {
				"type": "String"
			},
			"filenames_str": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-07-18T20:44:05Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}